import React, { ComponentType } from 'react';
import { InjectedComponents } from './componentInjection';
import { TableCoreProps } from './Table';
import { Classes } from '../utils/composeStyles';
export declare const DEFAULT_TABLE_ROWS_PER_PAGE = 20;
export declare const makePaginatedTableStyles: <TProps extends object>(...styles: (Partial<import("@material-ui/core").StyleRules<"tablePagination" | "paginationBoder" | "emptyTable", TProps>> | ((theme: import("@material-ui/core").Theme) => Partial<import("@material-ui/core").StyleRules<"tablePagination" | "paginationBoder" | "emptyTable", TProps>>))[]) => keyof TProps extends never ? (props?: any) => import("@material-ui/styles").ClassNameMap<"tablePagination" | "paginationBoder" | "emptyTable"> : (props: TProps) => import("@material-ui/styles").ClassNameMap<"tablePagination" | "paginationBoder" | "emptyTable">;
export type PaginatedTableCoreProps<T> = TableCoreProps<T> & {
    currentPage: number;
    loadNext(): void;
    isLoading?: boolean;
    metadata?: {
        cursor: string;
        total: number;
    };
    setCurrentPage(page: number): void;
    rowsPerPage?: number;
};
export declare const PaginatedTableCore: <T extends Record<string, unknown>>({ currentPage, loadNext, isLoading, metadata, setCurrentPage, rowsPerPage, classes, TableComponent: Table, TypographyComponent: Typography, ...tableProps }: TableCoreProps<T> & {
    currentPage: number;
    loadNext(): void;
    isLoading?: boolean | undefined;
    metadata?: {
        cursor: string;
        total: number;
    } | undefined;
    setCurrentPage(page: number): void;
    rowsPerPage?: number | undefined;
} & Classes<(<TProps extends object>(...styles: (Partial<import("@material-ui/core").StyleRules<"tablePagination" | "paginationBoder" | "emptyTable", TProps>> | ((theme: import("@material-ui/core").Theme) => Partial<import("@material-ui/core").StyleRules<"tablePagination" | "paginationBoder" | "emptyTable", TProps>>))[]) => keyof TProps extends never ? (props?: any) => import("@material-ui/styles").ClassNameMap<"tablePagination" | "paginationBoder" | "emptyTable"> : (props: TProps) => import("@material-ui/styles").ClassNameMap<"tablePagination" | "paginationBoder" | "emptyTable">)> & InjectedComponents<"Typography"> & {
    TableComponent: React.ComponentType<TableCoreProps<T>>;
}) => JSX.Element;
