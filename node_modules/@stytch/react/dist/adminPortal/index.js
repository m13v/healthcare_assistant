'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React$d = require('react');
var StytchB2BContext = require('../StytchB2BContext-ce9e254c.js');
var invariant = require('../invariant-ae5a5bce.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React$d);

function _typeof$1$1(o) {
    "@babel/helpers - typeof";
    return _typeof$1$1 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
        return typeof o;
    } : function (o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof$1$1(o);
}
function _createClass$1$1(Constructor, protoProps, staticProps) {
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _classCallCheck$1$1(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _callSuper$1(t, o, e) {
    return o = _getPrototypeOf$1(o), _possibleConstructorReturn$1(t, _isNativeReflectConstruct$1() ? Reflect.construct(o, e || [], _getPrototypeOf$1(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn$1(self, call) {
    if (call && (_typeof$1$1(call) === "object" || typeof call === "function")) {
        return call;
    }
    else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
    }
    return _assertThisInitialized$1$1(self);
}
function _assertThisInitialized$1$1(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _inherits$1(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    Object.defineProperty(subClass, "prototype", {
        writable: false
    });
    if (superClass)
        _setPrototypeOf$1$1(subClass, superClass);
}
function _wrapNativeSuper$1(Class) {
    var _cache = typeof Map === "function" ? new Map() : undefined;
    _wrapNativeSuper$1 = function _wrapNativeSuper(Class) {
        if (Class === null || !_isNativeFunction$1(Class))
            return Class;
        if (typeof Class !== "function") {
            throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
            if (_cache.has(Class))
                return _cache.get(Class);
            _cache.set(Class, Wrapper);
        }
        function Wrapper() {
            return _construct$1(Class, arguments, _getPrototypeOf$1(this).constructor);
        }
        Wrapper.prototype = Object.create(Class.prototype, {
            constructor: {
                value: Wrapper,
                enumerable: false,
                writable: true,
                configurable: true
            }
        });
        return _setPrototypeOf$1$1(Wrapper, Class);
    };
    return _wrapNativeSuper$1(Class);
}
function _construct$1(t, e, r) {
    if (_isNativeReflectConstruct$1())
        return Reflect.construct.apply(null, arguments);
    var o = [null];
    o.push.apply(o, e);
    var p = new (t.bind.apply(t, o))();
    return r && _setPrototypeOf$1$1(p, r.prototype), p;
}
function _isNativeReflectConstruct$1() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () { }));
    }
    catch (t) { }
    return (_isNativeReflectConstruct$1 = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _isNativeFunction$1(fn) {
    try {
        return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    catch (e) {
        return typeof fn === "function";
    }
}
function _setPrototypeOf$1$1(o, p) {
    _setPrototypeOf$1$1 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf$1$1(o, p);
}
function _getPrototypeOf$1(o) {
    _getPrototypeOf$1 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf$1(o);
}
var Products;
(function (Products) {
    Products["emailMagicLinks"] = "emailMagicLinks";
    Products["oauth"] = "oauth";
    Products["otp"] = "otp";
    Products["crypto"] = "crypto";
    Products["passwords"] = "passwords";
    Products["passkeys"] = "passkeys";
})(Products || (Products = {}));
var OAuthProviders;
(function (OAuthProviders) {
    OAuthProviders["Google"] = "google";
    OAuthProviders["Microsoft"] = "microsoft";
    OAuthProviders["Apple"] = "apple";
    OAuthProviders["Github"] = "github";
    OAuthProviders["GitLab"] = "gitlab";
    OAuthProviders["Facebook"] = "facebook";
    OAuthProviders["Discord"] = "discord";
    OAuthProviders["Salesforce"] = "salesforce";
    OAuthProviders["Slack"] = "slack";
    OAuthProviders["Amazon"] = "amazon";
    OAuthProviders["Bitbucket"] = "bitbucket";
    OAuthProviders["LinkedIn"] = "linkedin";
    OAuthProviders["Coinbase"] = "coinbase";
    OAuthProviders["Twitch"] = "twitch";
    OAuthProviders["Twitter"] = "twitter";
    OAuthProviders["TikTok"] = "tiktok";
    OAuthProviders["Snapchat"] = "snapchat";
    OAuthProviders["Figma"] = "figma";
    OAuthProviders["Yahoo"] = "yahoo";
})(OAuthProviders || (OAuthProviders = {}));
var Wallets;
(function (Wallets) {
    Wallets["Vessel"] = "Vessel";
    Wallets["Phantom"] = "Phantom";
    Wallets["Metamask"] = "Metamask";
    Wallets["Coinbase"] = "Coinbase";
    Wallets["Binance"] = "Binance";
    Wallets["GenericEthereumWallet"] = "Other Ethereum Wallet";
    Wallets["GenericSolanaWallet"] = "Other Solana Wallet";
})(Wallets || (Wallets = {}));
var OneTapPositions;
(function (OneTapPositions) {
    OneTapPositions["embedded"] = "embedded";
    OneTapPositions["floating"] = "floating";
    OneTapPositions["embeddedOnly"] = "embeddedOnly";
    OneTapPositions["floatingOrEmbedded"] = "floatingOrEmbedded";
    OneTapPositions["forceLegacyEmbedded"] = "forceLegacyEmbedded";
})(OneTapPositions || (OneTapPositions = {}));
var OTPMethods;
(function (OTPMethods) {
    OTPMethods["SMS"] = "sms";
    OTPMethods["WhatsApp"] = "whatsapp";
    OTPMethods["Email"] = "email";
})(OTPMethods || (OTPMethods = {}));
var StytchEventType;
(function (StytchEventType) {
    StytchEventType["MagicLinkLoginOrCreateEvent"] = "MAGIC_LINK_LOGIN_OR_CREATE";
    StytchEventType["OTPsLoginOrCreateEvent"] = "OTP_LOGIN_OR_CREATE";
    StytchEventType["OTPsAuthenticate"] = "OTP_AUTHENTICATE";
    StytchEventType["CryptoWalletAuthenticateStart"] = "CRYPTO_WALLET_AUTHENTICATE_START";
    StytchEventType["CryptoWalletAuthenticate"] = "CRYPTO_WALLET_AUTHENTICATE";
    StytchEventType["PasswordCreate"] = "PASSWORD_CREATE";
    StytchEventType["PasswordAuthenticate"] = "PASSWORD_AUTHENTICATE";
    StytchEventType["PasswordResetByEmailStart"] = "PASSWORD_RESET_BY_EMAIL_START";
    StytchEventType["PasswordResetByEmail"] = "PASSWORD_RESET_BY_EMAIL";
    StytchEventType["PasskeyRegister"] = "PASSKEY_REGISTER";
    StytchEventType["PasskeyAuthenticate"] = "PASSKEY_AUTHENTICATE";
    StytchEventType["PasskeySkip"] = "PASSKEY_SKIP";
    StytchEventType["PasskeyDone"] = "PASSKEY_DONE";
    StytchEventType["B2BMagicLinkEmailLoginOrSignup"] = "B2B_MAGIC_LINK_EMAIL_LOGIN_OR_SIGNUP";
    StytchEventType["B2BMagicLinkAuthenticate"] = "B2B_MAGIC_LINK_AUTHENTICATE";
    StytchEventType["B2BMagicLinkEmailDiscoverySend"] = "B2B_MAGIC_LINK_EMAIL_DISCOVERY_SEND";
    StytchEventType["B2BMagicLinkDiscoveryAuthenticate"] = "B2B_MAGIC_LINK_DISCOVERY_AUTHENTICATE";
    StytchEventType["B2BSSOStart"] = "B2B_SSO_START";
    StytchEventType["B2BSSOAuthenticate"] = "B2B_SSO_AUTHENTICATE";
    StytchEventType["B2BOAuthAuthenticate"] = "B2B_OAUTH_AUTHENTICATE";
    StytchEventType["B2BOAuthDiscoveryAuthenticate"] = "B2B_OAUTH_DISCOVERY_AUTHENTICATE";
    StytchEventType["B2BDiscoveryOrganizationsCreate"] = "B2B_DISCOVERY_ORGANIZATIONS_CREATE";
    StytchEventType["B2BDiscoveryIntermediateSessionExchange"] = "B2B_DISCOVERY_INTERMEDIATE_SESSION_EXCHANGE";
    StytchEventType["B2BPasswordAuthenticate"] = "B2B_PASSWORD_AUTHENTICATE";
    StytchEventType["B2BPasswordResetByEmailStart"] = "B2B_PASSWORD_RESET_BY_EMAIL_START";
    StytchEventType["B2BPasswordResetByEmail"] = "B2B_PASSWORD_RESET_BY_EMAIL";
    StytchEventType["B2BPasswordResetBySession"] = "B2B_PASSWORD_RESET_BY_SESSION";
    StytchEventType["B2BSMSOTPSend"] = "B2B_SMS_OTP_SEND";
    StytchEventType["B2BSMSOTPAuthenticate"] = "B2B_SMS_OTP_AUTHENTICATE";
    StytchEventType["B2BTOTPCreate"] = "B2B_TOTP_CREATE";
    StytchEventType["B2BTOTPAuthenticate"] = "B2B_TOTP_AUTHENTICATE";
    StytchEventType["B2BRecoveryCodesRecover"] = "B2B_RECOVERY_CODES_RECOVER";
})(StytchEventType || (StytchEventType = {}));
var RNUIProducts;
(function (RNUIProducts) {
    RNUIProducts[RNUIProducts["emailMagicLinks"] = 0] = "emailMagicLinks";
    RNUIProducts[RNUIProducts["oauth"] = 1] = "oauth";
    RNUIProducts[RNUIProducts["otp"] = 2] = "otp";
    RNUIProducts[RNUIProducts["passwords"] = 3] = "passwords";
})(RNUIProducts || (RNUIProducts = {}));
var StytchSDKAPIError = /*#__PURE__*/ function (_Error4) {
    _inherits$1(StytchSDKAPIError, _Error4);
    function StytchSDKAPIError(details) {
        var _this4;
        _classCallCheck$1$1(this, StytchSDKAPIError);
        _this4 = _callSuper$1(this, StytchSDKAPIError);
        _this4.name = 'StytchSDKAPIError';
        var status_code = details.status_code, error_type = details.error_type, error_message = details.error_message, error_url = details.error_url, request_id = details.request_id;
        _this4.error_type = error_type;
        _this4.error_message = error_message;
        _this4.error_url = error_url;
        _this4.request_id = request_id;
        _this4.status_code = status_code;
        _this4.message = "[".concat(status_code, "] ").concat(error_type, "\n") + "".concat(error_message, "\n") + "See ".concat(error_url, " for more information.\n") + (request_id ? "request_id: ".concat(request_id, "\n") : '');
        return _this4;
    }
    return _createClass$1$1(StytchSDKAPIError);
}(/*#__PURE__*/ _wrapNativeSuper$1(Error));
var B2BProducts;
(function (B2BProducts) {
    B2BProducts["emailMagicLinks"] = "emailMagicLinks";
    B2BProducts["sso"] = "sso";
    B2BProducts["passwords"] = "passwords";
    B2BProducts["oauth"] = "oauth";
})(B2BProducts || (B2BProducts = {}));
var AuthFlowType;
(function (AuthFlowType) {
    AuthFlowType["Discovery"] = "Discovery";
    AuthFlowType["Organization"] = "Organization";
    AuthFlowType["PasswordReset"] = "PasswordReset";
})(AuthFlowType || (AuthFlowType = {}));
var B2BMFAProducts;
(function (B2BMFAProducts) {
    B2BMFAProducts["smsOtp"] = "smsOtp";
    B2BMFAProducts["totp"] = "totp";
})(B2BMFAProducts || (B2BMFAProducts = {}));
var B2BOAuthProviders;
(function (B2BOAuthProviders) {
    B2BOAuthProviders["Google"] = "google";
    B2BOAuthProviders["Microsoft"] = "microsoft";
})(B2BOAuthProviders || (B2BOAuthProviders = {}));
function _slicedToArray$2(arr, i) {
    return _arrayWithHoles$2(arr) || _iterableToArrayLimit$2(arr, i) || _unsupportedIterableToArray$3(arr, i) || _nonIterableRest$2();
}
function _nonIterableRest$2() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit$2(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t)
                    return;
                f = !1;
            }
            else
                for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0)
                    ;
        }
        catch (r) {
            o = !0, n = r;
        }
        finally {
            try {
                if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u))
                    return;
            }
            finally {
                if (o)
                    throw n;
            }
        }
        return a;
    }
}
function _arrayWithHoles$2(arr) {
    if (Array.isArray(arr))
        return arr;
}
function _unsupportedIterableToArray$3(o, minLen) {
    if (!o)
        return;
    if (typeof o === "string")
        return _arrayLikeToArray$3(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor)
        n = o.constructor.name;
    if (n === "Map" || n === "Set")
        return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray$3(o, minLen);
}
function _arrayLikeToArray$3(arr, len) {
    if (len == null || len > arr.length)
        len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
    return arr2;
}
function _typeof$6(o) {
    "@babel/helpers - typeof";
    return _typeof$6 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
        return typeof o;
    } : function (o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof$6(o);
}
typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};
var RetriableErrorType;
(function (RetriableErrorType) {
    RetriableErrorType["RequiredCatcha"] = "Catcha Required";
})(RetriableErrorType || (RetriableErrorType = {}));
var byteToHex = [];
for (var i$2 = 0; i$2 < 256; ++i$2) {
    byteToHex.push((i$2 + 0x100).toString(16).substr(1));
}
var EmailSentType;
(function (EmailSentType) {
    EmailSentType["LoginOrCreateEML"] = "login_or_create_eml";
    EmailSentType["LoginOrCreateOTP"] = "login_or_create_otp";
    EmailSentType["ResetPassword"] = "reset_password";
})(EmailSentType || (EmailSentType = {}));
Promise.resolve({
    pkceRequiredForEmailMagicLinks: false
});
Promise.resolve({
    pkceRequiredForPasswordResets: false
});
Promise.resolve({
    pkceRequiredForEmailMagicLinks: false
});
Promise.resolve({
    pkceRequiredForPasswordResets: false
});
var createDeepEqual = function createDeepEqual() {
    var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}, _ref8$KEYS_TO_EXCLUDE = _ref8.KEYS_TO_EXCLUDE, KEYS_TO_EXCLUDE = _ref8$KEYS_TO_EXCLUDE === void 0 ? [] : _ref8$KEYS_TO_EXCLUDE;
    var deepEqual = function deepEqual(a, b) {
        if (_typeof$6(a) !== _typeof$6(b))
            return false;
        if (a === null || b === null)
            return a === b;
        if (_typeof$6(a) === 'object') {
            if (Object.keys(a).length !== Object.keys(b).length || Object.keys(a).some(function (k) {
                return !(k in b);
            }))
                return false;
            return Object.entries(a).filter(function (_ref9) {
                var _ref10 = _slicedToArray$2(_ref9, 1), k = _ref10[0];
                return !KEYS_TO_EXCLUDE.includes(k);
            }).every(function (_ref11) {
                var _ref12 = _slicedToArray$2(_ref11, 2), k = _ref12[0], v = _ref12[1];
                return deepEqual(v, b[k]);
            });
        }
        return a === b;
    };
    return deepEqual;
};
function __rest(s, e) {
    var t = {};
    for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}
function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function (resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}
typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};
var internalSymB2B = Symbol["for"]('stytch__internal_b2b');
var readB2BInternals = function readB2BInternals(obj) {
    var casted = obj;
    if (!casted[internalSymB2B]) {
        throw Error('Internals not found!');
    }
    return casted[internalSymB2B];
};

function _regeneratorRuntime$1() {
    _regeneratorRuntime$1 = function _regeneratorRuntime() { return e; };
    var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
    function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; }
    try {
        define({}, "");
    }
    catch (t) {
        define = function define(t, e, r) { return t[e] = r; };
    }
    function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; }
    function tryCatch(t, e, r) { try {
        return { type: "normal", arg: t.call(e, r) };
    }
    catch (t) {
        return { type: "throw", arg: t };
    } }
    e.wrap = wrap;
    var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {};
    function Generator() { }
    function GeneratorFunction() { }
    function GeneratorFunctionPrototype() { }
    var p = {};
    define(p, a, function () { return this; });
    var d = Object.getPrototypeOf, v = d && d(d(values([])));
    v && v !== r && n.call(v, a) && (p = v);
    var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
    function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); }
    function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) {
        var u = c.arg, h = u.value;
        return h && "object" == _typeof$5(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); });
    } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); }
    function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f)
        throw new Error("Generator is already running"); if (o === s) {
        if ("throw" === i)
            throw a;
        return { value: t, done: !0 };
    } for (n.method = i, n.arg = a;;) {
        var c = n.delegate;
        if (c) {
            var u = maybeInvokeDelegate(c, n);
            if (u) {
                if (u === y)
                    continue;
                return u;
            }
        }
        if ("next" === n.method)
            n.sent = n._sent = n.arg;
        else if ("throw" === n.method) {
            if (o === h)
                throw o = s, n.arg;
            n.dispatchException(n.arg);
        }
        else
            "return" === n.method && n.abrupt("return", n.arg);
        o = f;
        var p = tryCatch(e, r, n);
        if ("normal" === p.type) {
            if (o = n.done ? s : l, p.arg === y)
                continue;
            return { value: p.arg, done: n.done };
        }
        "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
    } }; }
    function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t)
        return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type)
        return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); }
    function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); }
    function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; }
    function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); }
    function values(e) { if (e || "" === e) {
        var r = e[a];
        if (r)
            return r.call(e);
        if ("function" == typeof e.next)
            return e;
        if (!isNaN(e.length)) {
            var o = -1, i = function next() { for (; ++o < e.length;)
                if (n.call(e, o))
                    return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; };
            return i.next = i;
        }
    } throw new TypeError(_typeof$5(e) + " is not iterable"); }
    return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e)
        r.push(n); return r.reverse(), function next() { for (; r.length;) {
        var t = r.pop();
        if (t in e)
            return next.value = t, next.done = !1, next;
    } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e)
            for (var r in this)
                "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type)
            throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done)
            throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) {
            var i = this.tryEntries[o], a = i.completion;
            if ("root" === i.tryLoc)
                return handle("end");
            if (i.tryLoc <= this.prev) {
                var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc");
                if (c && u) {
                    if (this.prev < i.catchLoc)
                        return handle(i.catchLoc, !0);
                    if (this.prev < i.finallyLoc)
                        return handle(i.finallyLoc);
                }
                else if (c) {
                    if (this.prev < i.catchLoc)
                        return handle(i.catchLoc, !0);
                }
                else {
                    if (!u)
                        throw new Error("try statement without catch or finally");
                    if (this.prev < i.finallyLoc)
                        return handle(i.finallyLoc);
                }
            }
        } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) {
            var o = this.tryEntries[r];
            if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                var i = o;
                break;
            }
        } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type)
            throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) {
            var r = this.tryEntries[e];
            if (r.finallyLoc === t)
                return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
        } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) {
            var r = this.tryEntries[e];
            if (r.tryLoc === t) {
                var n = r.completion;
                if ("throw" === n.type) {
                    var o = n.arg;
                    resetTryEntry(r);
                }
                return o;
            }
        } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e;
}
function _createForOfIteratorHelper$1(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray$2(o)) || allowArrayLike && o && typeof o.length === "number") {
        if (it)
            o = it;
        var i = 0;
        var F = function F() { };
        return { s: F, n: function n() { if (i >= o.length)
                return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
} var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try {
        if (!normalCompletion && it["return"] != null)
            it["return"]();
    }
    finally {
        if (didErr)
            throw err;
    } } }; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try {
    var info = gen[key](arg);
    var value = info.value;
}
catch (error) {
    reject(error);
    return;
} if (info.done) {
    resolve(value);
}
else {
    Promise.resolve(value).then(_next, _throw);
} }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
function _slicedToArray$1(arr, i) { return _arrayWithHoles$1(arr) || _iterableToArrayLimit$1(arr, i) || _unsupportedIterableToArray$2(arr, i) || _nonIterableRest$1(); }
function _nonIterableRest$1() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray$2(o, minLen) { if (!o)
    return; if (typeof o === "string")
    return _arrayLikeToArray$2(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor)
    n = o.constructor.name; if (n === "Map" || n === "Set")
    return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray$2(o, minLen); }
function _arrayLikeToArray$2(arr, len) { if (len == null || len > arr.length)
    len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit$1(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) {
    var e, n, i, u, a = [], f = !0, o = !1;
    try {
        if (i = (t = t.call(r)).next, 0 === l) {
            if (Object(t) !== t)
                return;
            f = !1;
        }
        else
            for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0)
                ;
    }
    catch (r) {
        o = !0, n = r;
    }
    finally {
        try {
            if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u))
                return;
        }
        finally {
            if (o)
                throw n;
        }
    }
    return a;
} }
function _arrayWithHoles$1(arr) { if (Array.isArray(arr))
    return arr; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o);
} return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty$1(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); });
} return e; }
function _defineProperty$1(obj, key, value) { key = _toPropertyKey$1(key); if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
}
else {
    obj[key] = value;
} return obj; }
function _classCallCheck$1(instance, Constructor) { if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
} }
function _defineProperties$2(target, props) { for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
        descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey$1(descriptor.key), descriptor);
} }
function _createClass$2(Constructor, protoProps, staticProps) { if (protoProps)
    _defineProperties$2(Constructor.prototype, protoProps); if (staticProps)
    _defineProperties$2(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey$1(t) { var i = _toPrimitive$1(t, "string"); return "symbol" == _typeof$5(i) ? i : String(i); }
function _toPrimitive$1(t, r) { if ("object" != _typeof$5(t) || !t)
    return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof$5(i))
        return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
} return ("string" === r ? String : Number)(t); }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(self, call) { if (call && (_typeof$5(call) === "object" || typeof call === "function")) {
    return call;
}
else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
} return _assertThisInitialized$1(self); }
function _assertThisInitialized$1(self) { if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
} return self; }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
} subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass)
    _setPrototypeOf$1(subClass, superClass); }
function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class))
    return Class; if (typeof Class !== "function") {
    throw new TypeError("Super expression must either be null or a function");
} if (typeof _cache !== "undefined") {
    if (_cache.has(Class))
        return _cache.get(Class);
    _cache.set(Class, Wrapper);
} function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf$1(Wrapper, Class); }; return _wrapNativeSuper(Class); }
function _construct(t, e, r) { if (_isNativeReflectConstruct())
    return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf$1(p, r.prototype), p; }
function _isNativeReflectConstruct() { try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () { }));
}
catch (t) { } return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _isNativeFunction(fn) { try {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
catch (e) {
    return typeof fn === "function";
} }
function _setPrototypeOf$1(o, p) { _setPrototypeOf$1 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf$1(o, p); }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _typeof$5(o) {
    "@babel/helpers - typeof";
    return _typeof$5 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof$5(o);
}
var n$3, l$4, u$3, i$1, o$1, r$4, f$3, e$4, c$3 = {}, s$1 = [], a$1 = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, h$5 = Array.isArray;
function v$4(n, l) {
    for (var u in l)
        n[u] = l[u];
    return n;
}
function p$4(n) {
    var l = n.parentNode;
    l && l.removeChild(n);
}
function y$3(l, u, t) {
    var i, o, r, f = {};
    for (r in u)
        "key" == r ? i = u[r] : "ref" == r ? o = u[r] : f[r] = u[r];
    if (arguments.length > 2 && (f.children = arguments.length > 3 ? n$3.call(arguments, 2) : t), "function" == typeof l && null != l.defaultProps)
        for (r in l.defaultProps)
            void 0 === f[r] && (f[r] = l.defaultProps[r]);
    return d$3(l, f, i, o, null);
}
function d$3(n, t, i, o, r) {
    var f = {
        type: n,
        props: t,
        key: i,
        ref: o,
        __k: null,
        __: null,
        __b: 0,
        __e: null,
        __d: void 0,
        __c: null,
        constructor: void 0,
        __v: null == r ? ++u$3 : r,
        __i: -1,
        __u: 0
    };
    return null == r && null != l$4.vnode && l$4.vnode(f), f;
}
function _$2() {
    return {
        current: null
    };
}
function g$5(n) {
    return n.children;
}
function b$4(n, l) {
    this.props = n, this.context = l;
}
function m$4(n, l) {
    if (null == l)
        return n.__ ? m$4(n.__, n.__i + 1) : null;
    for (var u; l < n.__k.length; l++)
        if (null != (u = n.__k[l]) && null != u.__e)
            return u.__e;
    return "function" == typeof n.type ? m$4(n) : null;
}
function k$6(n) {
    var l, u;
    if (null != (n = n.__) && null != n.__c) {
        for (n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++)
            if (null != (u = n.__k[l]) && null != u.__e) {
                n.__e = n.__c.base = u.__e;
                break;
            }
        return k$6(n);
    }
}
function w$5(n) {
    (!n.__d && (n.__d = !0) && i$1.push(n) && !x$5.__r++ || o$1 !== l$4.debounceRendering) && ((o$1 = l$4.debounceRendering) || r$4)(x$5);
}
function x$5() {
    var n, u, t, o, r, e, c, s, a;
    for (i$1.sort(f$3); n = i$1.shift();)
        n.__d && (u = i$1.length, o = void 0, e = (r = (t = n).__v).__e, s = [], a = [], (c = t.__P) && ((o = v$4({}, r)).__v = r.__v + 1, l$4.vnode && l$4.vnode(o), L$2(c, o, r, t.__n, void 0 !== c.ownerSVGElement, 32 & r.__u ? [e] : null, s, null == e ? m$4(r) : e, !!(32 & r.__u), a), o.__.__k[o.__i] = o, M$2(s, o, a), o.__e != e && k$6(o)), i$1.length > u && i$1.sort(f$3));
    x$5.__r = 0;
}
function C$2(n, l, u, t, i, o, r, f, e, a, h) {
    var v, p, y, d, _, g = t && t.__k || s$1, b = l.length;
    for (u.__d = e, P$3(u, l, g), e = u.__d, v = 0; v < b; v++)
        null != (y = u.__k[v]) && "boolean" != typeof y && "function" != typeof y && (p = -1 === y.__i ? c$3 : g[y.__i] || c$3, y.__i = v, L$2(n, y, p, i, o, r, f, e, a, h), d = y.__e, y.ref && p.ref != y.ref && (p.ref && z$5(p.ref, null, y), h.push(y.ref, y.__c || d, y)), null == _ && null != d && (_ = d), 65536 & y.__u || p.__k === y.__k ? e = S$1(y, e, n) : "function" == typeof y.type && void 0 !== y.__d ? e = y.__d : d && (e = d.nextSibling), y.__d = void 0, y.__u &= -196609);
    u.__d = e, u.__e = _;
}
function P$3(n, l, u) {
    var t, i, o, r, f, e = l.length, c = u.length, s = c, a = 0;
    for (n.__k = [], t = 0; t < e; t++)
        null != (i = n.__k[t] = null == (i = l[t]) || "boolean" == typeof i || "function" == typeof i ? null : "string" == typeof i || "number" == typeof i || "bigint" == typeof i || i.constructor == String ? d$3(null, i, null, null, i) : h$5(i) ? d$3(g$5, {
            children: i
        }, null, null, null) : i.__b > 0 ? d$3(i.type, i.props, i.key, i.ref ? i.ref : null, i.__v) : i) ? (i.__ = n, i.__b = n.__b + 1, f = H$3(i, u, r = t + a, s), i.__i = f, o = null, -1 !== f && (s--, (o = u[f]) && (o.__u |= 131072)), null == o || null === o.__v ? (-1 == f && a--, "function" != typeof i.type && (i.__u |= 65536)) : f !== r && (f === r + 1 ? a++ : f > r ? s > e - r ? a += f - r : a-- : a = f < r && f == r - 1 ? f - r : 0, f !== t + a && (i.__u |= 65536))) : (o = u[t]) && null == o.key && o.__e && (o.__e == n.__d && (n.__d = m$4(o)), N$2(o, o, !1), u[t] = null, s--);
    if (s)
        for (t = 0; t < c; t++)
            null != (o = u[t]) && 0 == (131072 & o.__u) && (o.__e == n.__d && (n.__d = m$4(o)), N$2(o, o));
}
function S$1(n, l, u) {
    var t, i;
    if ("function" == typeof n.type) {
        for (t = n.__k, i = 0; t && i < t.length; i++)
            t[i] && (t[i].__ = n, l = S$1(t[i], l, u));
        return l;
    }
    return n.__e != l && (u.insertBefore(n.__e, l || null), l = n.__e), l && l.nextSibling;
}
function $$2(n, l) {
    return l = l || [], null == n || "boolean" == typeof n || (h$5(n) ? n.some(function (n) {
        $$2(n, l);
    }) : l.push(n)), l;
}
function H$3(n, l, u, t) {
    var i = n.key, o = n.type, r = u - 1, f = u + 1, e = l[u];
    if (null === e || e && i == e.key && o === e.type)
        return u;
    if (t > (null != e && 0 == (131072 & e.__u) ? 1 : 0))
        for (; r >= 0 || f < l.length;) {
            if (r >= 0) {
                if ((e = l[r]) && 0 == (131072 & e.__u) && i == e.key && o === e.type)
                    return r;
                r--;
            }
            if (f < l.length) {
                if ((e = l[f]) && 0 == (131072 & e.__u) && i == e.key && o === e.type)
                    return f;
                f++;
            }
        }
    return -1;
}
function I$3(n, l, u) {
    "-" === l[0] ? n.setProperty(l, null == u ? "" : u) : n[l] = null == u ? "" : "number" != typeof u || a$1.test(l) ? u : u + "px";
}
function T$3(n, l, u, t, i) {
    var o;
    n: if ("style" === l) {
        if ("string" == typeof u)
            n.style.cssText = u;
        else {
            if ("string" == typeof t && (n.style.cssText = t = ""), t)
                for (l in t)
                    u && l in u || I$3(n.style, l, "");
            if (u)
                for (l in u)
                    t && u[l] === t[l] || I$3(n.style, l, u[l]);
        }
    }
    else if ("o" === l[0] && "n" === l[1])
        o = l !== (l = l.replace(/(PointerCapture)$|Capture$/, "$1")), l = l.toLowerCase() in n ? l.toLowerCase().slice(2) : l.slice(2), n.l || (n.l = {}), n.l[l + o] = u, u ? t ? u.u = t.u : (u.u = Date.now(), n.addEventListener(l, o ? D$2 : A$5, o)) : n.removeEventListener(l, o ? D$2 : A$5, o);
    else {
        if (i)
            l = l.replace(/xlink(H|:h)/, "h").replace(/sName$/, "s");
        else if ("width" !== l && "height" !== l && "href" !== l && "list" !== l && "form" !== l && "tabIndex" !== l && "download" !== l && "rowSpan" !== l && "colSpan" !== l && "role" !== l && l in n)
            try {
                n[l] = null == u ? "" : u;
                break n;
            }
            catch (n) { }
        "function" == typeof u || (null == u || !1 === u && "-" !== l[4] ? n.removeAttribute(l) : n.setAttribute(l, u));
    }
}
function A$5(n) {
    var u = this.l[n.type + !1];
    if (n.t) {
        if (n.t <= u.u)
            return;
    }
    else
        n.t = Date.now();
    return u(l$4.event ? l$4.event(n) : n);
}
function D$2(n) {
    return this.l[n.type + !0](l$4.event ? l$4.event(n) : n);
}
function L$2(n, u, t, i, o, r, f, e, c, s) {
    var a, p, y, d, _, m, k, w, x, P, S, $, H, I, T, A = u.type;
    if (void 0 !== u.constructor)
        return null;
    128 & t.__u && (c = !!(32 & t.__u), r = [e = u.__e = t.__e]), (a = l$4.__b) && a(u);
    n: if ("function" == typeof A)
        try {
            if (w = u.props, x = (a = A.contextType) && i[a.__c], P = a ? x ? x.props.value : a.__ : i, t.__c ? k = (p = u.__c = t.__c).__ = p.__E : ("prototype" in A && A.prototype.render ? u.__c = p = new A(w, P) : (u.__c = p = new b$4(w, P), p.constructor = A, p.render = O$1), x && x.sub(p), p.props = w, p.state || (p.state = {}), p.context = P, p.__n = i, y = p.__d = !0, p.__h = [], p._sb = []), null == p.__s && (p.__s = p.state), null != A.getDerivedStateFromProps && (p.__s == p.state && (p.__s = v$4({}, p.__s)), v$4(p.__s, A.getDerivedStateFromProps(w, p.__s))), d = p.props, _ = p.state, p.__v = u, y)
                null == A.getDerivedStateFromProps && null != p.componentWillMount && p.componentWillMount(), null != p.componentDidMount && p.__h.push(p.componentDidMount);
            else {
                if (null == A.getDerivedStateFromProps && w !== d && null != p.componentWillReceiveProps && p.componentWillReceiveProps(w, P), !p.__e && (null != p.shouldComponentUpdate && !1 === p.shouldComponentUpdate(w, p.__s, P) || u.__v === t.__v)) {
                    for (u.__v !== t.__v && (p.props = w, p.state = p.__s, p.__d = !1), u.__e = t.__e, u.__k = t.__k, u.__k.forEach(function (n) {
                        n && (n.__ = u);
                    }), S = 0; S < p._sb.length; S++)
                        p.__h.push(p._sb[S]);
                    p._sb = [], p.__h.length && f.push(p);
                    break n;
                }
                null != p.componentWillUpdate && p.componentWillUpdate(w, p.__s, P), null != p.componentDidUpdate && p.__h.push(function () {
                    p.componentDidUpdate(d, _, m);
                });
            }
            if (p.context = P, p.props = w, p.__P = n, p.__e = !1, $ = l$4.__r, H = 0, "prototype" in A && A.prototype.render) {
                for (p.state = p.__s, p.__d = !1, $ && $(u), a = p.render(p.props, p.state, p.context), I = 0; I < p._sb.length; I++)
                    p.__h.push(p._sb[I]);
                p._sb = [];
            }
            else
                do {
                    p.__d = !1, $ && $(u), a = p.render(p.props, p.state, p.context), p.state = p.__s;
                } while (p.__d && ++H < 25);
            p.state = p.__s, null != p.getChildContext && (i = v$4(v$4({}, i), p.getChildContext())), y || null == p.getSnapshotBeforeUpdate || (m = p.getSnapshotBeforeUpdate(d, _)), C$2(n, h$5(T = null != a && a.type === g$5 && null == a.key ? a.props.children : a) ? T : [T], u, t, i, o, r, f, e, c, s), p.base = u.__e, u.__u &= -161, p.__h.length && f.push(p), k && (p.__E = p.__ = null);
        }
        catch (n) {
            u.__v = null, c || null != r ? (u.__e = e, u.__u |= c ? 160 : 32, r[r.indexOf(e)] = null) : (u.__e = t.__e, u.__k = t.__k), l$4.__e(n, u, t);
        }
    else
        null == r && u.__v === t.__v ? (u.__k = t.__k, u.__e = t.__e) : u.__e = j$3(t.__e, u, t, i, o, r, f, c, s);
    (a = l$4.diffed) && a(u);
}
function M$2(n, u, t) {
    u.__d = void 0;
    for (var i = 0; i < t.length; i++)
        z$5(t[i], t[++i], t[++i]);
    l$4.__c && l$4.__c(u, n), n.some(function (u) {
        try {
            n = u.__h, u.__h = [], n.some(function (n) {
                n.call(u);
            });
        }
        catch (n) {
            l$4.__e(n, u.__v);
        }
    });
}
function j$3(l, u, t, i, o, r, f, e, s) {
    var a, v, y, d, _, g, b, k = t.props, w = u.props, x = u.type;
    if ("svg" === x && (o = !0), null != r)
        for (a = 0; a < r.length; a++)
            if ((_ = r[a]) && "setAttribute" in _ == !!x && (x ? _.localName === x : 3 === _.nodeType)) {
                l = _, r[a] = null;
                break;
            }
    if (null == l) {
        if (null === x)
            return document.createTextNode(w);
        l = o ? document.createElementNS("http://www.w3.org/2000/svg", x) : document.createElement(x, w.is && w), r = null, e = !1;
    }
    if (null === x)
        k === w || e && l.data === w || (l.data = w);
    else {
        if (r = r && n$3.call(l.childNodes), k = t.props || c$3, !e && null != r)
            for (k = {}, a = 0; a < l.attributes.length; a++)
                k[(_ = l.attributes[a]).name] = _.value;
        for (a in k)
            _ = k[a], "children" == a || ("dangerouslySetInnerHTML" == a ? y = _ : "key" === a || a in w || T$3(l, a, null, _, o));
        for (a in w)
            _ = w[a], "children" == a ? d = _ : "dangerouslySetInnerHTML" == a ? v = _ : "value" == a ? g = _ : "checked" == a ? b = _ : "key" === a || e && "function" != typeof _ || k[a] === _ || T$3(l, a, _, k[a], o);
        if (v)
            e || y && (v.__html === y.__html || v.__html === l.innerHTML) || (l.innerHTML = v.__html), u.__k = [];
        else if (y && (l.innerHTML = ""), C$2(l, h$5(d) ? d : [d], u, t, i, o && "foreignObject" !== x, r, f, r ? r[0] : t.__k && m$4(t, 0), e, s), null != r)
            for (a = r.length; a--;)
                null != r[a] && p$4(r[a]);
        e || (a = "value", void 0 !== g && (g !== l[a] || "progress" === x && !g || "option" === x && g !== k[a]) && T$3(l, a, g, k[a], !1), a = "checked", void 0 !== b && b !== l[a] && T$3(l, a, b, k[a], !1));
    }
    return l;
}
function z$5(n, u, t) {
    try {
        "function" == typeof n ? n(u) : n.current = u;
    }
    catch (n) {
        l$4.__e(n, t);
    }
}
function N$2(n, u, t) {
    var i, o;
    if (l$4.unmount && l$4.unmount(n), (i = n.ref) && (i.current && i.current !== n.__e || z$5(i, null, u)), null != (i = n.__c)) {
        if (i.componentWillUnmount)
            try {
                i.componentWillUnmount();
            }
            catch (n) {
                l$4.__e(n, u);
            }
        i.base = i.__P = null, n.__c = void 0;
    }
    if (i = n.__k)
        for (o = 0; o < i.length; o++)
            i[o] && N$2(i[o], u, t || "function" != typeof n.type);
    t || null == n.__e || p$4(n.__e), n.__ = n.__e = n.__d = void 0;
}
function O$1(n, l, u) {
    return this.constructor(n, u);
}
function q$6(u, t, i) {
    var o, r, f, e;
    l$4.__ && l$4.__(u, t), r = (o = "function" == typeof i) ? null : i && i.__k || t.__k, f = [], e = [], L$2(t, u = (!o && i || t).__k = y$3(g$5, null, [u]), r || c$3, c$3, void 0 !== t.ownerSVGElement, !o && i ? [i] : r ? null : t.firstChild ? n$3.call(t.childNodes) : null, f, !o && i ? i : r ? r.__e : t.firstChild, o, e), M$2(f, u, e);
}
function B$4(n, l) {
    q$6(n, l, B$4);
}
function E$3(l, u, t) {
    var i, o, r, f, e = v$4({}, l.props);
    for (r in l.type && l.type.defaultProps && (f = l.type.defaultProps), u)
        "key" == r ? i = u[r] : "ref" == r ? o = u[r] : e[r] = void 0 === u[r] && void 0 !== f ? f[r] : u[r];
    return arguments.length > 2 && (e.children = arguments.length > 3 ? n$3.call(arguments, 2) : t), d$3(l.type, e, i || l.key, o || l.ref, null);
}
function F$4(n, l) {
    var u = {
        __c: l = "__cC" + e$4++,
        __: n,
        Consumer: function Consumer(n, l) {
            return n.children(l);
        },
        Provider: function Provider(n) {
            var u, t;
            return this.getChildContext || (u = [], (t = {})[l] = this, this.getChildContext = function () {
                return t;
            }, this.shouldComponentUpdate = function (n) {
                this.props.value !== n.value && u.some(function (n) {
                    n.__e = !0, w$5(n);
                });
            }, this.sub = function (n) {
                u.push(n);
                var l = n.componentWillUnmount;
                n.componentWillUnmount = function () {
                    u.splice(u.indexOf(n), 1), l && l.call(n);
                };
            }), n.children;
        }
    };
    return u.Provider.__ = u.Consumer.contextType = u;
}
n$3 = s$1.slice, l$4 = {
    __e: function __e(n, l, u, t) {
        for (var i, o, r; l = l.__;)
            if ((i = l.__c) && !i.__)
                try {
                    if ((o = i.constructor) && null != o.getDerivedStateFromError && (i.setState(o.getDerivedStateFromError(n)), r = i.__d), null != i.componentDidCatch && (i.componentDidCatch(n, t || {}), r = i.__d), r)
                        return i.__E = i;
                }
                catch (l) {
                    n = l;
                }
        throw n;
    }
}, u$3 = 0, b$4.prototype.setState = function (n, l) {
    var u;
    u = null != this.__s && this.__s !== this.state ? this.__s : this.__s = v$4({}, this.state), "function" == typeof n && (n = n(v$4({}, u), this.props)), n && v$4(u, n), null != n && this.__v && (l && this._sb.push(l), w$5(this));
}, b$4.prototype.forceUpdate = function (n) {
    this.__v && (this.__e = !0, n && this.__h.push(n), w$5(this));
}, b$4.prototype.render = g$5, i$1 = [], r$4 = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, f$3 = function f$3(n, l) {
    return n.__v.__b - l.__v.__b;
}, x$5.__r = 0, e$4 = 0;
var t$2, r$3, u$2, i, o = 0, f$2 = [], c$2 = [], e$3 = l$4.__b, a = l$4.__r, v$3 = l$4.diffed, l$3 = l$4.__c, m$3 = l$4.unmount;
function d$2(t, u) {
    l$4.__h && l$4.__h(r$3, t, o || u), o = 0;
    var i = r$3.__H || (r$3.__H = {
        __: [],
        __h: []
    });
    return t >= i.__.length && i.__.push({
        __V: c$2
    }), i.__[t];
}
function h$4(n) {
    return o = 1, s(B$3, n);
}
function s(n, u, i) {
    var o = d$2(t$2++, 2);
    if (o.t = n, !o.__c && (o.__ = [i ? i(u) : B$3(void 0, u), function (n) {
            var t = o.__N ? o.__N[0] : o.__[0], r = o.t(t, n);
            t !== r && (o.__N = [r, o.__[1]], o.__c.setState({}));
        }], o.__c = r$3, !r$3.u)) {
        var f = function f(n, t, r) {
            if (!o.__c.__H)
                return !0;
            var u = o.__c.__H.__.filter(function (n) {
                return n.__c;
            });
            if (u.every(function (n) {
                return !n.__N;
            }))
                return !c || c.call(this, n, t, r);
            var i = !1;
            return u.forEach(function (n) {
                if (n.__N) {
                    var t = n.__[0];
                    n.__ = n.__N, n.__N = void 0, t !== n.__[0] && (i = !0);
                }
            }), !(!i && o.__c.props === n) && (!c || c.call(this, n, t, r));
        };
        r$3.u = !0;
        var c = r$3.shouldComponentUpdate, e = r$3.componentWillUpdate;
        r$3.componentWillUpdate = function (n, t, r) {
            if (this.__e) {
                var u = c;
                c = void 0, f(n, t, r), c = u;
            }
            e && e.call(this, n, t, r);
        }, r$3.shouldComponentUpdate = f;
    }
    return o.__N || o.__;
}
function p$3(u, i) {
    var o = d$2(t$2++, 3);
    !l$4.__s && z$4(o.__H, i) && (o.__ = u, o.i = i, r$3.__H.__h.push(o));
}
function y$2(u, i) {
    var o = d$2(t$2++, 4);
    !l$4.__s && z$4(o.__H, i) && (o.__ = u, o.i = i, r$3.__h.push(o));
}
function _$1(n) {
    return o = 5, F$3(function () {
        return {
            current: n
        };
    }, []);
}
function A$4(n, t, r) {
    o = 6, y$2(function () {
        return "function" == typeof n ? (n(t()), function () {
            return n(null);
        }) : n ? (n.current = t(), function () {
            return n.current = null;
        }) : void 0;
    }, null == r ? r : r.concat(n));
}
function F$3(n, r) {
    var u = d$2(t$2++, 7);
    return z$4(u.__H, r) ? (u.__V = n(), u.i = r, u.__h = n, u.__V) : u.__;
}
function T$2(n, t) {
    return o = 8, F$3(function () {
        return n;
    }, t);
}
function q$5(n) {
    var u = r$3.context[n.__c], i = d$2(t$2++, 9);
    return i.c = n, u ? (null == i.__ && (i.__ = !0, u.sub(r$3)), u.props.value) : n.__;
}
function x$4(t, r) {
    l$4.useDebugValue && l$4.useDebugValue(r ? r(t) : t);
}
function P$2(n) {
    var u = d$2(t$2++, 10), i = h$4();
    return u.__ = n, r$3.componentDidCatch || (r$3.componentDidCatch = function (n, t) {
        u.__ && u.__(n, t), i[1](n);
    }), [i[0], function () {
            i[1](void 0);
        }];
}
function V$2() {
    var n = d$2(t$2++, 11);
    if (!n.__) {
        for (var u = r$3.__v; null !== u && !u.__m && null !== u.__;)
            u = u.__;
        var i = u.__m || (u.__m = [0, 0]);
        n.__ = "P" + i[0] + "-" + i[1]++;
    }
    return n.__;
}
function b$3() {
    for (var t; t = f$2.shift();)
        if (t.__P && t.__H)
            try {
                t.__H.__h.forEach(k$5), t.__H.__h.forEach(w$4), t.__H.__h = [];
            }
            catch (r) {
                t.__H.__h = [], l$4.__e(r, t.__v);
            }
}
l$4.__b = function (n) {
    r$3 = null, e$3 && e$3(n);
}, l$4.__r = function (n) {
    a && a(n), t$2 = 0;
    var i = (r$3 = n.__c).__H;
    i && (u$2 === r$3 ? (i.__h = [], r$3.__h = [], i.__.forEach(function (n) {
        n.__N && (n.__ = n.__N), n.__V = c$2, n.__N = n.i = void 0;
    })) : (i.__h.forEach(k$5), i.__h.forEach(w$4), i.__h = [], t$2 = 0)), u$2 = r$3;
}, l$4.diffed = function (t) {
    v$3 && v$3(t);
    var o = t.__c;
    o && o.__H && (o.__H.__h.length && (1 !== f$2.push(o) && i === l$4.requestAnimationFrame || ((i = l$4.requestAnimationFrame) || j$2)(b$3)), o.__H.__.forEach(function (n) {
        n.i && (n.__H = n.i), n.__V !== c$2 && (n.__ = n.__V), n.i = void 0, n.__V = c$2;
    })), u$2 = r$3 = null;
}, l$4.__c = function (t, r) {
    r.some(function (t) {
        try {
            t.__h.forEach(k$5), t.__h = t.__h.filter(function (n) {
                return !n.__ || w$4(n);
            });
        }
        catch (u) {
            r.some(function (n) {
                n.__h && (n.__h = []);
            }), r = [], l$4.__e(u, t.__v);
        }
    }), l$3 && l$3(t, r);
}, l$4.unmount = function (t) {
    m$3 && m$3(t);
    var r, u = t.__c;
    u && u.__H && (u.__H.__.forEach(function (n) {
        try {
            k$5(n);
        }
        catch (n) {
            r = n;
        }
    }), u.__H = void 0, r && l$4.__e(r, u.__v));
};
var g$4 = "function" == typeof requestAnimationFrame;
function j$2(n) {
    var t, r = function r() {
        clearTimeout(u), g$4 && cancelAnimationFrame(t), setTimeout(n);
    }, u = setTimeout(r, 100);
    g$4 && (t = requestAnimationFrame(r));
}
function k$5(n) {
    var t = r$3, u = n.__c;
    "function" == typeof u && (n.__c = void 0, u()), r$3 = t;
}
function w$4(n) {
    var t = r$3;
    n.__c = n.__(), r$3 = t;
}
function z$4(n, t) {
    return !n || n.length !== t.length || t.some(function (t, r) {
        return t !== n[r];
    });
}
function B$3(n, t) {
    return "function" == typeof t ? t(n) : t;
}
function g$3(n, t) {
    for (var e in t)
        n[e] = t[e];
    return n;
}
function C$1(n, t) {
    for (var e in n)
        if ("__source" !== e && !(e in t))
            return !0;
    for (var r in t)
        if ("__source" !== r && n[r] !== t[r])
            return !0;
    return !1;
}
function E$2(n) {
    this.props = n;
}
function w$3(n, e) {
    function r(n) {
        var t = this.props.ref, r = t == n.ref;
        return !r && t && (t.call ? t(null) : t.current = null), e ? !e(this.props, n) || !r : C$1(this.props, n);
    }
    function u(e) {
        return this.shouldComponentUpdate = r, y$3(n, e);
    }
    return u.displayName = "Memo(" + (n.displayName || n.name) + ")", u.prototype.isReactComponent = !0, u.__f = !0, u;
}
(E$2.prototype = new b$4()).isPureReactComponent = !0, E$2.prototype.shouldComponentUpdate = function (n, t) {
    return C$1(this.props, n) || C$1(this.state, t);
};
var x$3 = l$4.__b;
l$4.__b = function (n) {
    n.type && n.type.__f && n.ref && (n.props.ref = n.ref, n.ref = null), x$3 && x$3(n);
};
var R = "undefined" != typeof Symbol && Symbol["for"] && Symbol["for"]("react.forward_ref") || 3911;
function N$1(n) {
    function t(t) {
        var e = g$3({}, t);
        return delete e.ref, n(e, t.ref || null);
    }
    return t.$$typeof = R, t.render = t, t.prototype.isReactComponent = t.__f = !0, t.displayName = "ForwardRef(" + (n.displayName || n.name) + ")", t;
}
var k$4 = function k$4(n, t) {
    return null == n ? null : $$2($$2(n).map(t));
}, A$3 = {
    map: k$4,
    forEach: k$4,
    count: function count(n) {
        return n ? $$2(n).length : 0;
    },
    only: function only(n) {
        var t = $$2(n);
        if (1 !== t.length)
            throw "Children.only";
        return t[0];
    },
    toArray: $$2
}, O = l$4.__e;
l$4.__e = function (n, t, e, r) {
    if (n.then)
        for (var u, o = t; o = o.__;)
            if ((u = o.__c) && u.__c)
                return null == t.__e && (t.__e = e.__e, t.__k = e.__k), u.__c(n, t);
    O(n, t, e, r);
};
var T$1 = l$4.unmount;
function F$2(n, t, e) {
    return n && (n.__c && n.__c.__H && (n.__c.__H.__.forEach(function (n) {
        "function" == typeof n.__c && n.__c();
    }), n.__c.__H = null), null != (n = g$3({}, n)).__c && (n.__c.__P === e && (n.__c.__P = t), n.__c = null), n.__k = n.__k && n.__k.map(function (n) {
        return F$2(n, t, e);
    })), n;
}
function I$2(n, t, e) {
    return n && e && (n.__v = null, n.__k = n.__k && n.__k.map(function (n) {
        return I$2(n, t, e);
    }), n.__c && n.__c.__P === t && (n.__e && e.appendChild(n.__e), n.__c.__e = !0, n.__c.__P = e)), n;
}
function L$1() {
    this.__u = 0, this.t = null, this.__b = null;
}
function U$1(n) {
    var t = n.__.__c;
    return t && t.__a && t.__a(n);
}
function D$1(n) {
    var e, r, u;
    function o(o) {
        if (e || (e = n()).then(function (n) {
            r = n["default"] || n;
        }, function (n) {
            u = n;
        }), u)
            throw u;
        if (!r)
            throw e;
        return y$3(r, o);
    }
    return o.displayName = "Lazy", o.__f = !0, o;
}
function M$1() {
    this.u = null, this.o = null;
}
l$4.unmount = function (n) {
    var t = n.__c;
    t && t.__R && t.__R(), t && 32 & n.__u && (n.type = null), T$1 && T$1(n);
}, (L$1.prototype = new b$4()).__c = function (n, t) {
    var e = t.__c, r = this;
    null == r.t && (r.t = []), r.t.push(e);
    var u = U$1(r.__v), o = !1, i = function i() {
        o || (o = !0, e.__R = null, u ? u(l) : l());
    };
    e.__R = i;
    var l = function l() {
        if (!--r.__u) {
            if (r.state.__a) {
                var n = r.state.__a;
                r.__v.__k[0] = I$2(n, n.__c.__P, n.__c.__O);
            }
            var t;
            for (r.setState({
                __a: r.__b = null
            }); t = r.t.pop();)
                t.forceUpdate();
        }
    };
    r.__u++ || 32 & t.__u || r.setState({
        __a: r.__b = r.__v.__k[0]
    }), n.then(i, i);
}, L$1.prototype.componentWillUnmount = function () {
    this.t = [];
}, L$1.prototype.render = function (n, e) {
    if (this.__b) {
        if (this.__v.__k) {
            var r = document.createElement("div"), o = this.__v.__k[0].__c;
            this.__v.__k[0] = F$2(this.__b, r, o.__O = o.__P);
        }
        this.__b = null;
    }
    var i = e.__a && y$3(g$5, null, n.fallback);
    return i && (i.__u &= -33), [y$3(g$5, null, e.__a ? null : n.children), i];
};
var V$1 = function V$1(n, t, e) {
    if (++e[1] === e[0] && n.o["delete"](t), n.props.revealOrder && ("t" !== n.props.revealOrder[0] || !n.o.size))
        for (e = n.u; e;) {
            for (; e.length > 3;)
                e.pop()();
            if (e[1] < e[0])
                break;
            n.u = e = e[2];
        }
};
function W$1(n) {
    return this.getChildContext = function () {
        return n.context;
    }, n.children;
}
function P$1(n) {
    var e = this, r = n.i;
    e.componentWillUnmount = function () {
        q$6(null, e.l), e.l = null, e.i = null;
    }, e.i && e.i !== r && e.componentWillUnmount(), e.l || (e.i = r, e.l = {
        nodeType: 1,
        parentNode: r,
        childNodes: [],
        appendChild: function appendChild(n) {
            this.childNodes.push(n), e.i.appendChild(n);
        },
        insertBefore: function insertBefore(n, t) {
            this.childNodes.push(n), e.i.appendChild(n);
        },
        removeChild: function removeChild(n) {
            this.childNodes.splice(this.childNodes.indexOf(n) >>> 1, 1), e.i.removeChild(n);
        }
    }), q$6(y$3(W$1, {
        context: e.context
    }, n.__v), e.l);
}
function j$1(n, e) {
    var r = y$3(P$1, {
        __v: n,
        i: e
    });
    return r.containerInfo = e, r;
}
(M$1.prototype = new b$4()).__a = function (n) {
    var t = this, e = U$1(t.__v), r = t.o.get(n);
    return r[0]++, function (u) {
        var o = function o() {
            t.props.revealOrder ? (r.push(u), V$1(t, n, r)) : u();
        };
        e ? e(o) : o();
    };
}, M$1.prototype.render = function (n) {
    this.u = null, this.o = new Map();
    var t = $$2(n.children);
    n.revealOrder && "b" === n.revealOrder[0] && t.reverse();
    for (var e = t.length; e--;)
        this.o.set(t[e], this.u = [1, 0, this.u]);
    return n.children;
}, M$1.prototype.componentDidUpdate = M$1.prototype.componentDidMount = function () {
    var n = this;
    this.o.forEach(function (t, e) {
        V$1(n, e, t);
    });
};
var z$3 = "undefined" != typeof Symbol && Symbol["for"] && Symbol["for"]("react.element") || 60103, B$2 = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image(!S)|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/, H$2 = /^on(Ani|Tra|Tou|BeforeInp|Compo)/, Z$1 = /[A-Z0-9]/g, Y$1 = "undefined" != typeof document, $$1 = function $$1(n) {
    return ("undefined" != typeof Symbol && "symbol" == _typeof$5(Symbol()) ? /fil|che|rad/ : /fil|che|ra/).test(n);
};
function q$4(n, t, e) {
    return null == t.__k && (t.textContent = ""), q$6(n, t), "function" == typeof e && e(), n ? n.__c : null;
}
function G$2(n, t, e) {
    return B$4(n, t), "function" == typeof e && e(), n ? n.__c : null;
}
b$4.prototype.isReactComponent = {}, ["componentWillMount", "componentWillReceiveProps", "componentWillUpdate"].forEach(function (t) {
    Object.defineProperty(b$4.prototype, t, {
        configurable: !0,
        get: function get() {
            return this["UNSAFE_" + t];
        },
        set: function set(n) {
            Object.defineProperty(this, t, {
                configurable: !0,
                writable: !0,
                value: n
            });
        }
    });
});
var J$1 = l$4.event;
function K$1() { }
function Q$1() {
    return this.cancelBubble;
}
function X$1() {
    return this.defaultPrevented;
}
l$4.event = function (n) {
    return J$1 && (n = J$1(n)), n.persist = K$1, n.isPropagationStopped = Q$1, n.isDefaultPrevented = X$1, n.nativeEvent = n;
};
var nn, tn = {
    enumerable: !1,
    configurable: !0,
    get: function get() {
        return this["class"];
    }
}, en = l$4.vnode;
l$4.vnode = function (n) {
    "string" == typeof n.type && function (n) {
        var t = n.props, e = n.type, u = {};
        for (var o in t) {
            var i = t[o];
            if (!("value" === o && "defaultValue" in t && null == i || Y$1 && "children" === o && "noscript" === e || "class" === o || "className" === o)) {
                var l = o.toLowerCase();
                "defaultValue" === o && "value" in t && null == t.value ? o = "value" : "download" === o && !0 === i ? i = "" : "ondoubleclick" === l ? o = "ondblclick" : "onchange" !== l || "input" !== e && "textarea" !== e || $$1(t.type) ? "onfocus" === l ? o = "onfocusin" : "onblur" === l ? o = "onfocusout" : H$2.test(o) ? o = l : -1 === e.indexOf("-") && B$2.test(o) ? o = o.replace(Z$1, "-$&").toLowerCase() : null === i && (i = void 0) : l = o = "oninput", "oninput" === l && u[o = l] && (o = "oninputCapture"), u[o] = i;
            }
        }
        "select" == e && u.multiple && Array.isArray(u.value) && (u.value = $$2(t.children).forEach(function (n) {
            n.props.selected = -1 != u.value.indexOf(n.props.value);
        })), "select" == e && null != u.defaultValue && (u.value = $$2(t.children).forEach(function (n) {
            n.props.selected = u.multiple ? -1 != u.defaultValue.indexOf(n.props.value) : u.defaultValue == n.props.value;
        })), t["class"] && !t.className ? (u["class"] = t["class"], Object.defineProperty(u, "className", tn)) : (t.className && !t["class"] || t["class"] && t.className) && (u["class"] = u.className = t.className), n.props = u;
    }(n), n.$$typeof = z$3, en && en(n);
};
var rn = l$4.__r;
l$4.__r = function (n) {
    rn && rn(n), nn = n.__c;
};
var un = l$4.diffed;
l$4.diffed = function (n) {
    un && un(n);
    var t = n.props, e = n.__e;
    null != e && "textarea" === n.type && "value" in t && t.value !== e.value && (e.value = null == t.value ? "" : t.value), nn = null;
};
var on = {
    ReactCurrentDispatcher: {
        current: {
            readContext: function readContext(n) {
                return nn.__n[n.__c].props.value;
            }
        }
    }
}, ln = "17.0.2";
function cn(n) {
    return y$3.bind(null, n);
}
function fn(n) {
    return !!n && n.$$typeof === z$3;
}
function an(n) {
    return fn(n) && n.type === g$5;
}
function sn(n) {
    return fn(n) ? E$3.apply(null, arguments) : n;
}
function hn(n) {
    return !!n.__k && (q$6(null, n), !0);
}
function vn(n) {
    return n && (n.base || 1 === n.nodeType && n) || null;
}
var dn = function dn(n, t) {
    return n(t);
}, pn = function pn(n, t) {
    return n(t);
}, mn = g$5;
function yn(n) {
    n();
}
function _n(n) {
    return n;
}
function bn() {
    return [!1, yn];
}
var Sn = y$2, gn = fn;
function Cn(n, t) {
    var e = t(), r = h$4({
        h: {
            __: e,
            v: t
        }
    }), u = r[0].h, o = r[1];
    return y$2(function () {
        u.__ = e, u.v = t, En(u) && o({
            h: u
        });
    }, [n, e, t]), p$3(function () {
        return En(u) && o({
            h: u
        }), n(function () {
            En(u) && o({
                h: u
            });
        });
    }, [n]), e;
}
function En(n) {
    var t, e, r = n.v, u = n.__;
    try {
        var o = r();
        return !((t = u) === (e = o) && (0 !== t || 1 / t == 1 / e) || t != t && e != e);
    }
    catch (n) {
        return !0;
    }
}
var wn = {
    useState: h$4,
    useId: V$2,
    useReducer: s,
    useEffect: p$3,
    useLayoutEffect: y$2,
    useInsertionEffect: Sn,
    useTransition: bn,
    useDeferredValue: _n,
    useSyncExternalStore: Cn,
    startTransition: yn,
    useRef: _$1,
    useImperativeHandle: A$4,
    useMemo: F$3,
    useCallback: T$2,
    useContext: q$5,
    useDebugValue: x$4,
    version: "17.0.2",
    Children: A$3,
    render: q$4,
    hydrate: G$2,
    unmountComponentAtNode: hn,
    createPortal: j$1,
    createElement: y$3,
    createContext: F$4,
    createFactory: cn,
    cloneElement: sn,
    createRef: _$2,
    Fragment: g$5,
    isValidElement: fn,
    isElement: gn,
    isFragment: an,
    findDOMNode: vn,
    Component: b$4,
    PureComponent: E$2,
    memo: w$3,
    forwardRef: N$1,
    flushSync: pn,
    unstable_batchedUpdates: dn,
    StrictMode: mn,
    Suspense: L$1,
    SuspenseList: M$1,
    lazy: D$1,
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: on
};
var compat_module = /*#__PURE__*/ Object.freeze({
    __proto__: null,
    Children: A$3,
    Component: b$4,
    Fragment: g$5,
    PureComponent: E$2,
    StrictMode: mn,
    Suspense: L$1,
    SuspenseList: M$1,
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: on,
    cloneElement: sn,
    createContext: F$4,
    createElement: y$3,
    createFactory: cn,
    createPortal: j$1,
    createRef: _$2,
    "default": wn,
    findDOMNode: vn,
    flushSync: pn,
    forwardRef: N$1,
    hydrate: G$2,
    isElement: gn,
    isFragment: an,
    isValidElement: fn,
    lazy: D$1,
    memo: w$3,
    render: q$4,
    startTransition: yn,
    unmountComponentAtNode: hn,
    unstable_batchedUpdates: dn,
    useCallback: T$2,
    useContext: q$5,
    useDebugValue: x$4,
    useDeferredValue: _n,
    useEffect: p$3,
    useErrorBoundary: P$2,
    useId: V$2,
    useImperativeHandle: A$4,
    useInsertionEffect: Sn,
    useLayoutEffect: y$2,
    useMemo: F$3,
    useReducer: s,
    useRef: _$1,
    useState: h$4,
    useSyncExternalStore: Cn,
    useTransition: bn,
    version: ln
});
var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};
function getDefaultExportFromCjs(x) {
    return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}
function getAugmentedNamespace(n) {
    if (n.__esModule)
        return n;
    var f = n["default"];
    if (typeof f == "function") {
        var a = function a() {
            if (this instanceof a) {
                return Reflect.construct(f, arguments, this.constructor);
            }
            return f.apply(this, arguments);
        };
        a.prototype = f.prototype;
    }
    else
        a = {};
    Object.defineProperty(a, '__esModule', {
        value: true
    });
    Object.keys(n).forEach(function (k) {
        var d = Object.getOwnPropertyDescriptor(n, k);
        Object.defineProperty(a, k, d.get ? d : {
            enumerable: true,
            get: function get() {
                return n[k];
            }
        });
    });
    return a;
}
var reactIs$2 = {
    exports: {}
};
var reactIs_production_min$1 = {};
var b$2 = 60103, c$1 = 60106, d$1 = 60107, e$2 = 60108, f$1 = 60114, g$2 = 60109, h$3 = 60110, k$3 = 60112, l$2 = 60113, m$2 = 60120, n$2 = 60115, p$2 = 60116, q$3 = 60121, r$2 = 60122, u$1 = 60117, v$2 = 60129, w$2 = 60131;
if ("function" === typeof Symbol && Symbol["for"]) {
    var x$2 = Symbol["for"];
    b$2 = x$2("react.element");
    c$1 = x$2("react.portal");
    d$1 = x$2("react.fragment");
    e$2 = x$2("react.strict_mode");
    f$1 = x$2("react.profiler");
    g$2 = x$2("react.provider");
    h$3 = x$2("react.context");
    k$3 = x$2("react.forward_ref");
    l$2 = x$2("react.suspense");
    m$2 = x$2("react.suspense_list");
    n$2 = x$2("react.memo");
    p$2 = x$2("react.lazy");
    q$3 = x$2("react.block");
    r$2 = x$2("react.server.block");
    u$1 = x$2("react.fundamental");
    v$2 = x$2("react.debug_trace_mode");
    w$2 = x$2("react.legacy_hidden");
}
function y$1(a) {
    if ("object" === _typeof$5(a) && null !== a) {
        var t = a.$$typeof;
        switch (t) {
            case b$2:
                switch (a = a.type, a) {
                    case d$1:
                    case f$1:
                    case e$2:
                    case l$2:
                    case m$2:
                        return a;
                    default:
                        switch (a = a && a.$$typeof, a) {
                            case h$3:
                            case k$3:
                            case p$2:
                            case n$2:
                            case g$2:
                                return a;
                            default:
                                return t;
                        }
                }
            case c$1:
                return t;
        }
    }
}
var z$2 = g$2, A$2 = b$2, B$1 = k$3, C$3 = d$1, D = p$2, E$1 = n$2, F$1 = c$1, G$1 = f$1, H$1 = e$2, I$1 = l$2;
reactIs_production_min$1.ContextConsumer = h$3;
reactIs_production_min$1.ContextProvider = z$2;
reactIs_production_min$1.Element = A$2;
reactIs_production_min$1.ForwardRef = B$1;
reactIs_production_min$1.Fragment = C$3;
reactIs_production_min$1.Lazy = D;
reactIs_production_min$1.Memo = E$1;
reactIs_production_min$1.Portal = F$1;
reactIs_production_min$1.Profiler = G$1;
reactIs_production_min$1.StrictMode = H$1;
reactIs_production_min$1.Suspense = I$1;
reactIs_production_min$1.isAsyncMode = function () {
    return !1;
};
reactIs_production_min$1.isConcurrentMode = function () {
    return !1;
};
reactIs_production_min$1.isContextConsumer = function (a) {
    return y$1(a) === h$3;
};
reactIs_production_min$1.isContextProvider = function (a) {
    return y$1(a) === g$2;
};
reactIs_production_min$1.isElement = function (a) {
    return "object" === _typeof$5(a) && null !== a && a.$$typeof === b$2;
};
reactIs_production_min$1.isForwardRef = function (a) {
    return y$1(a) === k$3;
};
reactIs_production_min$1.isFragment = function (a) {
    return y$1(a) === d$1;
};
reactIs_production_min$1.isLazy = function (a) {
    return y$1(a) === p$2;
};
reactIs_production_min$1.isMemo = function (a) {
    return y$1(a) === n$2;
};
reactIs_production_min$1.isPortal = function (a) {
    return y$1(a) === c$1;
};
reactIs_production_min$1.isProfiler = function (a) {
    return y$1(a) === f$1;
};
reactIs_production_min$1.isStrictMode = function (a) {
    return y$1(a) === e$2;
};
reactIs_production_min$1.isSuspense = function (a) {
    return y$1(a) === l$2;
};
reactIs_production_min$1.isValidElementType = function (a) {
    return "string" === typeof a || "function" === typeof a || a === d$1 || a === f$1 || a === v$2 || a === e$2 || a === l$2 || a === m$2 || a === w$2 || "object" === _typeof$5(a) && null !== a && (a.$$typeof === p$2 || a.$$typeof === n$2 || a.$$typeof === g$2 || a.$$typeof === h$3 || a.$$typeof === k$3 || a.$$typeof === u$1 || a.$$typeof === q$3 || a[0] === r$2) ? !0 : !1;
};
reactIs_production_min$1.typeOf = y$1;
{
    reactIs$2.exports = reactIs_production_min$1;
}
var reactIsExports$1 = reactIs$2.exports;
var shallowequal = function shallowEqual(objA, objB, compare, compareContext) {
    var ret = compare ? compare.call(compareContext, objA, objB) : void 0;
    if (ret !== void 0) {
        return !!ret;
    }
    if (objA === objB) {
        return true;
    }
    if (_typeof$5(objA) !== "object" || !objA || _typeof$5(objB) !== "object" || !objB) {
        return false;
    }
    var keysA = Object.keys(objA);
    var keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) {
        return false;
    }
    var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
    for (var idx = 0; idx < keysA.length; idx++) {
        var key = keysA[idx];
        if (!bHasOwnProperty(key)) {
            return false;
        }
        var valueA = objA[key];
        var valueB = objB[key];
        ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;
        if (ret === false || ret === void 0 && valueA !== valueB) {
            return false;
        }
    }
    return true;
};
var h$2 = /*@__PURE__*/ getDefaultExportFromCjs(shallowequal);
function stylis_min(W) {
    function M(d, c, e, h, a) {
        for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {
            g = e.charCodeAt(l);
            l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);
            if (0 === b + n + v + m) {
                if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {
                    switch (g) {
                        case 32:
                        case 9:
                        case 59:
                        case 13:
                        case 10:
                            break;
                        default:
                            f += e.charAt(l);
                    }
                    g = 59;
                }
                switch (g) {
                    case 123:
                        f = f.trim();
                        q = f.charCodeAt(0);
                        k = 1;
                        for (t = ++l; l < B;) {
                            switch (g = e.charCodeAt(l)) {
                                case 123:
                                    k++;
                                    break;
                                case 125:
                                    k--;
                                    break;
                                case 47:
                                    switch (g = e.charCodeAt(l + 1)) {
                                        case 42:
                                        case 47:
                                            a: {
                                                for (u = l + 1; u < J; ++u) {
                                                    switch (e.charCodeAt(u)) {
                                                        case 47:
                                                            if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {
                                                                l = u + 1;
                                                                break a;
                                                            }
                                                            break;
                                                        case 10:
                                                            if (47 === g) {
                                                                l = u + 1;
                                                                break a;
                                                            }
                                                    }
                                                }
                                                l = u;
                                            }
                                    }
                                    break;
                                case 91:
                                    g++;
                                case 40:
                                    g++;
                                case 34:
                                case 39:
                                    for (; l++ < J && e.charCodeAt(l) !== g;) { }
                            }
                            if (0 === k)
                                break;
                            l++;
                        }
                        k = e.substring(t, l);
                        0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));
                        switch (q) {
                            case 64:
                                0 < r && (f = f.replace(N, ''));
                                g = f.charCodeAt(1);
                                switch (g) {
                                    case 100:
                                    case 109:
                                    case 115:
                                    case 45:
                                        r = c;
                                        break;
                                    default:
                                        r = O;
                                }
                                k = M(c, r, k, g, a + 1);
                                t = k.length;
                                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));
                                if (0 < t)
                                    switch (g) {
                                        case 115:
                                            f = f.replace(da, ea);
                                        case 100:
                                        case 109:
                                        case 45:
                                            k = f + '{' + k + '}';
                                            break;
                                        case 107:
                                            f = f.replace(fa, '$1 $2');
                                            k = f + '{' + k + '}';
                                            k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;
                                            break;
                                        default:
                                            k = f + k, 112 === h && (k = (p += k, ''));
                                    }
                                else
                                    k = '';
                                break;
                            default:
                                k = M(c, X(c, f, I), k, h, a + 1);
                        }
                        F += k;
                        k = I = r = u = q = 0;
                        f = '';
                        g = e.charCodeAt(++l);
                        break;
                    case 125:
                    case 59:
                        f = (0 < r ? f.replace(N, '') : f).trim();
                        if (1 < (t = f.length))
                            switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\x00\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {
                                case 0:
                                    break;
                                case 64:
                                    if (105 === g || 99 === g) {
                                        G += f + e.charAt(l);
                                        break;
                                    }
                                default:
                                    58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));
                            }
                        I = r = u = q = 0;
                        f = '';
                        g = e.charCodeAt(++l);
                }
            }
            switch (g) {
                case 13:
                case 10:
                    47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\x00');
                    0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);
                    z = 1;
                    D++;
                    break;
                case 59:
                case 125:
                    if (0 === b + n + v + m) {
                        z++;
                        break;
                    }
                default:
                    z++;
                    y = e.charAt(l);
                    switch (g) {
                        case 9:
                        case 32:
                            if (0 === n + m + b)
                                switch (x) {
                                    case 44:
                                    case 58:
                                    case 9:
                                    case 32:
                                        y = '';
                                        break;
                                    default:
                                        32 !== g && (y = ' ');
                                }
                            break;
                        case 0:
                            y = '\\0';
                            break;
                        case 12:
                            y = '\\f';
                            break;
                        case 11:
                            y = '\\v';
                            break;
                        case 38:
                            0 === n + b + m && (r = I = 1, y = '\f' + y);
                            break;
                        case 108:
                            if (0 === n + b + m + E && 0 < u)
                                switch (l - u) {
                                    case 2:
                                        112 === x && 58 === e.charCodeAt(l - 3) && (E = x);
                                    case 8:
                                        111 === K && (E = K);
                                }
                            break;
                        case 58:
                            0 === n + b + m && (u = l);
                            break;
                        case 44:
                            0 === b + v + n + m && (r = 1, y += '\r');
                            break;
                        case 34:
                        case 39:
                            0 === b && (n = n === g ? 0 : 0 === n ? g : n);
                            break;
                        case 91:
                            0 === n + b + v && m++;
                            break;
                        case 93:
                            0 === n + b + v && m--;
                            break;
                        case 41:
                            0 === n + b + m && v--;
                            break;
                        case 40:
                            if (0 === n + b + m) {
                                if (0 === q)
                                    switch (2 * x + 3 * K) {
                                        case 533:
                                            break;
                                        default:
                                            q = 1;
                                    }
                                v++;
                            }
                            break;
                        case 64:
                            0 === b + v + n + m + u + k && (k = 1);
                            break;
                        case 42:
                        case 47:
                            if (!(0 < n + m + v))
                                switch (b) {
                                    case 0:
                                        switch (2 * g + 3 * e.charCodeAt(l + 1)) {
                                            case 235:
                                                b = 47;
                                                break;
                                            case 220:
                                                t = l, b = 42;
                                        }
                                        break;
                                    case 42:
                                        47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);
                                }
                    }
                    0 === b && (f += y);
            }
            K = x;
            x = g;
            l++;
        }
        t = p.length;
        if (0 < t) {
            r = c;
            if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length))
                return G + p + F;
            p = r.join(',') + '{' + p + '}';
            if (0 !== w * E) {
                2 !== w || L(p, 2) || (E = 0);
                switch (E) {
                    case 111:
                        p = p.replace(ha, ':-moz-$1') + p;
                        break;
                    case 112:
                        p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;
                }
                E = 0;
            }
        }
        return G + p + F;
    }
    function X(d, c, e) {
        var h = c.trim().split(ia);
        c = h;
        var a = h.length, m = d.length;
        switch (m) {
            case 0:
            case 1:
                var b = 0;
                for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {
                    c[b] = Z(d, c[b], e).trim();
                }
                break;
            default:
                var v = b = 0;
                for (c = []; b < a; ++b) {
                    for (var n = 0; n < m; ++n) {
                        c[v++] = Z(d[n] + ' ', h[b], e).trim();
                    }
                }
        }
        return c;
    }
    function Z(d, c, e) {
        var h = c.charCodeAt(0);
        33 > h && (h = (c = c.trim()).charCodeAt(0));
        switch (h) {
            case 38:
                return c.replace(F, '$1' + d.trim());
            case 58:
                return d.trim() + c.replace(F, '$1' + d.trim());
            default:
                if (0 < 1 * e && 0 < c.indexOf('\f'))
                    return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());
        }
        return d + c;
    }
    function P(d, c, e, h) {
        var a = d + ';', m = 2 * c + 3 * e + 4 * h;
        if (944 === m) {
            d = a.indexOf(':', 9) + 1;
            var b = a.substring(d, a.length - 1).trim();
            b = a.substring(0, d).trim() + b + ';';
            return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;
        }
        if (0 === w || 2 === w && !L(a, 1))
            return a;
        switch (m) {
            case 1015:
                return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;
            case 951:
                return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;
            case 963:
                return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;
            case 1009:
                if (100 !== a.charCodeAt(4))
                    break;
            case 969:
            case 942:
                return '-webkit-' + a + a;
            case 978:
                return '-webkit-' + a + '-moz-' + a + a;
            case 1019:
            case 983:
                return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;
            case 883:
                if (45 === a.charCodeAt(8))
                    return '-webkit-' + a + a;
                if (0 < a.indexOf('image-set(', 11))
                    return a.replace(ja, '$1-webkit-$2') + a;
                break;
            case 932:
                if (45 === a.charCodeAt(4))
                    switch (a.charCodeAt(5)) {
                        case 103:
                            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;
                        case 115:
                            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;
                        case 98:
                            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;
                    }
                return '-webkit-' + a + '-ms-' + a + a;
            case 964:
                return '-webkit-' + a + '-ms-flex-' + a + a;
            case 1023:
                if (99 !== a.charCodeAt(8))
                    break;
                b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');
                return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;
            case 1005:
                return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;
            case 1e3:
                b = a.substring(13).trim();
                c = b.indexOf('-') + 1;
                switch (b.charCodeAt(0) + b.charCodeAt(c)) {
                    case 226:
                        b = a.replace(G, 'tb');
                        break;
                    case 232:
                        b = a.replace(G, 'tb-rl');
                        break;
                    case 220:
                        b = a.replace(G, 'lr');
                        break;
                    default:
                        return a;
                }
                return '-webkit-' + a + '-ms-' + b + a;
            case 1017:
                if (-1 === a.indexOf('sticky', 9))
                    break;
            case 975:
                c = (a = d).length - 10;
                b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();
                switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {
                    case 203:
                        if (111 > b.charCodeAt(8))
                            break;
                    case 115:
                        a = a.replace(b, '-webkit-' + b) + ';' + a;
                        break;
                    case 207:
                    case 102:
                        a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;
                }
                return a + ';';
            case 938:
                if (45 === a.charCodeAt(5))
                    switch (a.charCodeAt(6)) {
                        case 105:
                            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;
                        case 115:
                            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;
                        default:
                            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;
                    }
                break;
            case 973:
            case 989:
                if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4))
                    break;
            case 931:
            case 953:
                if (!0 === la.test(d))
                    return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;
                break;
            case 962:
                if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10))
                    return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;
        }
        return a;
    }
    function L(d, c) {
        var e = d.indexOf(1 === c ? ':' : '{'), h = d.substring(0, 3 !== c ? e : 10);
        e = d.substring(e + 1, d.length - 1);
        return R(2 !== c ? h : h.replace(na, '$1'), e, c);
    }
    function ea(d, c) {
        var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));
        return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';
    }
    function H(d, c, e, h, a, m, b, v, n, q) {
        for (var g = 0, x = c, w; g < A; ++g) {
            switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {
                case void 0:
                case !1:
                case !0:
                case null:
                    break;
                default:
                    x = w;
            }
        }
        if (x !== c)
            return x;
    }
    function T(d) {
        switch (d) {
            case void 0:
            case null:
                A = S.length = 0;
                break;
            default:
                if ('function' === typeof d)
                    S[A++] = d;
                else if ('object' === _typeof$5(d))
                    for (var c = 0, e = d.length; c < e; ++c) {
                        T(d[c]);
                    }
                else
                    Y = !!d | 0;
        }
        return T;
    }
    function U(d) {
        d = d.prefix;
        void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);
        return U;
    }
    function B(d, c) {
        var e = d;
        33 > e.charCodeAt(0) && (e = e.trim());
        V = e;
        e = [V];
        if (0 < A) {
            var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);
            void 0 !== h && 'string' === typeof h && (c = h);
        }
        var a = M(O, e, c, 0, 0);
        0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));
        V = '';
        E = 0;
        z = D = 1;
        return a;
    }
    var ca = /^\0+/g, N = /[\0\r\f]/g, aa = /: */g, ka = /zoo|gra/, ma = /([,: ])(transform)/g, ia = /,\r+?/g, F = /([\t\r\n ])*\f?&/g, fa = /@(k\w+)\s*(\S*)\s*/, Q = /::(place)/g, ha = /:(read-only)/g, G = /[svh]\w+-[tblr]{2}/, da = /\(\s*(.*)\s*\)/g, oa = /([\s\S]*?);/g, ba = /-self|flex-/g, na = /[^]*?(:[rp][el]a[\w-]+)[^]*/, la = /stretch|:\s*\w+\-(?:conte|avail)/, ja = /([^-])(image-set\()/, z = 1, D = 1, E = 0, w = 1, O = [], S = [], A = 0, R = null, Y = 0, V = '';
    B.use = T;
    B.set = U;
    void 0 !== W && U(W);
    return B;
}
var unitlessKeys = {
    animationIterationCount: 1,
    borderImageOutset: 1,
    borderImageSlice: 1,
    borderImageWidth: 1,
    boxFlex: 1,
    boxFlexGroup: 1,
    boxOrdinalGroup: 1,
    columnCount: 1,
    columns: 1,
    flex: 1,
    flexGrow: 1,
    flexPositive: 1,
    flexShrink: 1,
    flexNegative: 1,
    flexOrder: 1,
    gridRow: 1,
    gridRowEnd: 1,
    gridRowSpan: 1,
    gridRowStart: 1,
    gridColumn: 1,
    gridColumnEnd: 1,
    gridColumnSpan: 1,
    gridColumnStart: 1,
    msGridRow: 1,
    msGridRowSpan: 1,
    msGridColumn: 1,
    msGridColumnSpan: 1,
    fontWeight: 1,
    lineHeight: 1,
    opacity: 1,
    order: 1,
    orphans: 1,
    tabSize: 1,
    widows: 1,
    zIndex: 1,
    zoom: 1,
    WebkitLineClamp: 1,
    fillOpacity: 1,
    floodOpacity: 1,
    stopOpacity: 1,
    strokeDasharray: 1,
    strokeDashoffset: 1,
    strokeMiterlimit: 1,
    strokeOpacity: 1,
    strokeWidth: 1
};
function memoize$1(fn) {
    var cache = Object.create(null);
    return function (arg) {
        if (cache[arg] === undefined)
            cache[arg] = fn(arg);
        return cache[arg];
    };
}
var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;
var isPropValid = /* #__PURE__ */ memoize$1(function (prop) {
    return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111 && prop.charCodeAt(1) === 110 && prop.charCodeAt(2) < 91;
});
var reactIs$1 = {
    exports: {}
};
var reactIs_production_min = {};
var b$1 = "function" === typeof Symbol && Symbol["for"], c = b$1 ? Symbol["for"]("react.element") : 60103, d = b$1 ? Symbol["for"]("react.portal") : 60106, e$1 = b$1 ? Symbol["for"]("react.fragment") : 60107, f = b$1 ? Symbol["for"]("react.strict_mode") : 60108, g$1 = b$1 ? Symbol["for"]("react.profiler") : 60114, h$1 = b$1 ? Symbol["for"]("react.provider") : 60109, k$2 = b$1 ? Symbol["for"]("react.context") : 60110, l$1 = b$1 ? Symbol["for"]("react.async_mode") : 60111, m$1 = b$1 ? Symbol["for"]("react.concurrent_mode") : 60111, n$1 = b$1 ? Symbol["for"]("react.forward_ref") : 60112, p$1 = b$1 ? Symbol["for"]("react.suspense") : 60113, q$2 = b$1 ? Symbol["for"]("react.suspense_list") : 60120, r$1 = b$1 ? Symbol["for"]("react.memo") : 60115, t$1 = b$1 ? Symbol["for"]("react.lazy") : 60116, v$1 = b$1 ? Symbol["for"]("react.block") : 60121, w$1 = b$1 ? Symbol["for"]("react.fundamental") : 60117, x$1 = b$1 ? Symbol["for"]("react.responder") : 60118, y = b$1 ? Symbol["for"]("react.scope") : 60119;
function z$1(a) {
    if ("object" === _typeof$5(a) && null !== a) {
        var u = a.$$typeof;
        switch (u) {
            case c:
                switch (a = a.type, a) {
                    case l$1:
                    case m$1:
                    case e$1:
                    case g$1:
                    case f:
                    case p$1:
                        return a;
                    default:
                        switch (a = a && a.$$typeof, a) {
                            case k$2:
                            case n$1:
                            case t$1:
                            case r$1:
                            case h$1:
                                return a;
                            default:
                                return u;
                        }
                }
            case d:
                return u;
        }
    }
}
function A$1(a) {
    return z$1(a) === m$1;
}
reactIs_production_min.AsyncMode = l$1;
reactIs_production_min.ConcurrentMode = m$1;
reactIs_production_min.ContextConsumer = k$2;
reactIs_production_min.ContextProvider = h$1;
reactIs_production_min.Element = c;
reactIs_production_min.ForwardRef = n$1;
reactIs_production_min.Fragment = e$1;
reactIs_production_min.Lazy = t$1;
reactIs_production_min.Memo = r$1;
reactIs_production_min.Portal = d;
reactIs_production_min.Profiler = g$1;
reactIs_production_min.StrictMode = f;
reactIs_production_min.Suspense = p$1;
reactIs_production_min.isAsyncMode = function (a) {
    return A$1(a) || z$1(a) === l$1;
};
reactIs_production_min.isConcurrentMode = A$1;
reactIs_production_min.isContextConsumer = function (a) {
    return z$1(a) === k$2;
};
reactIs_production_min.isContextProvider = function (a) {
    return z$1(a) === h$1;
};
reactIs_production_min.isElement = function (a) {
    return "object" === _typeof$5(a) && null !== a && a.$$typeof === c;
};
reactIs_production_min.isForwardRef = function (a) {
    return z$1(a) === n$1;
};
reactIs_production_min.isFragment = function (a) {
    return z$1(a) === e$1;
};
reactIs_production_min.isLazy = function (a) {
    return z$1(a) === t$1;
};
reactIs_production_min.isMemo = function (a) {
    return z$1(a) === r$1;
};
reactIs_production_min.isPortal = function (a) {
    return z$1(a) === d;
};
reactIs_production_min.isProfiler = function (a) {
    return z$1(a) === g$1;
};
reactIs_production_min.isStrictMode = function (a) {
    return z$1(a) === f;
};
reactIs_production_min.isSuspense = function (a) {
    return z$1(a) === p$1;
};
reactIs_production_min.isValidElementType = function (a) {
    return "string" === typeof a || "function" === typeof a || a === e$1 || a === m$1 || a === g$1 || a === f || a === p$1 || a === q$2 || "object" === _typeof$5(a) && null !== a && (a.$$typeof === t$1 || a.$$typeof === r$1 || a.$$typeof === h$1 || a.$$typeof === k$2 || a.$$typeof === n$1 || a.$$typeof === w$1 || a.$$typeof === x$1 || a.$$typeof === y || a.$$typeof === v$1);
};
reactIs_production_min.typeOf = z$1;
{
    reactIs$1.exports = reactIs_production_min;
}
var reactIsExports = reactIs$1.exports;
var reactIs = reactIsExports;
var REACT_STATICS = {
    childContextTypes: true,
    contextType: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    getDerivedStateFromError: true,
    getDerivedStateFromProps: true,
    mixins: true,
    propTypes: true,
    type: true
};
var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
};
var FORWARD_REF_STATICS = {
    '$$typeof': true,
    render: true,
    defaultProps: true,
    displayName: true,
    propTypes: true
};
var MEMO_STATICS = {
    '$$typeof': true,
    compare: true,
    defaultProps: true,
    displayName: true,
    propTypes: true,
    type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
function getStatics(component) {
    if (reactIs.isMemo(component)) {
        return MEMO_STATICS;
    }
    return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}
var defineProperty$1 = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== 'string') {
        if (objectPrototype) {
            var inheritedComponent = getPrototypeOf(sourceComponent);
            if (inheritedComponent && inheritedComponent !== objectPrototype) {
                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
            }
        }
        var keys = getOwnPropertyNames(sourceComponent);
        if (getOwnPropertySymbols) {
            keys = keys.concat(getOwnPropertySymbols(sourceComponent));
        }
        var targetStatics = getStatics(targetComponent);
        var sourceStatics = getStatics(sourceComponent);
        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
                try {
                    defineProperty$1(targetComponent, key, descriptor);
                }
                catch (e) { }
            }
        }
    }
    return targetComponent;
}
var hoistNonReactStatics_cjs = hoistNonReactStatics;
var hoistNonReactStatics$1 = /*@__PURE__*/ getDefaultExportFromCjs(hoistNonReactStatics_cjs);
function v() {
    return (v = Object.assign || function (e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t];
            for (var r in n)
                Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
        }
        return e;
    }).apply(this, arguments);
}
var g = function g(e, t) {
    for (var n = [e[0]], r = 0, o = t.length; r < o; r += 1)
        n.push(t[r], e[r + 1]);
    return n;
}, S = function S(t) {
    return null !== t && "object" == _typeof$5(t) && "[object Object]" === (t.toString ? t.toString() : Object.prototype.toString.call(t)) && !reactIsExports$1.typeOf(t);
}, w = Object.freeze([]), E = Object.freeze({});
function b(e) {
    return "function" == typeof e;
}
function _(e) {
    return e.displayName || e.name || "Component";
}
function N(e) {
    return e && "string" == typeof e.styledComponentId;
}
var A = "undefined" != typeof process && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR) || "data-styled", I = "undefined" != typeof window && "HTMLElement" in window, P = Boolean("boolean" == typeof SC_DISABLE_SPEEDY ? SC_DISABLE_SPEEDY : "undefined" != typeof process && void 0 !== process.env.REACT_APP_SC_DISABLE_SPEEDY && "" !== process.env.REACT_APP_SC_DISABLE_SPEEDY ? "false" !== process.env.REACT_APP_SC_DISABLE_SPEEDY && process.env.REACT_APP_SC_DISABLE_SPEEDY : "undefined" != typeof process && void 0 !== process.env.SC_DISABLE_SPEEDY && "" !== process.env.SC_DISABLE_SPEEDY ? "false" !== process.env.SC_DISABLE_SPEEDY && process.env.SC_DISABLE_SPEEDY : "production" !== "production");
function j(e) {
    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++)
        n[r - 1] = arguments[r];
    throw new Error("An error occurred. See https://git.io/JUIaE#" + e + " for more information." + (n.length > 0 ? " Args: " + n.join(", ") : ""));
}
var T = function () {
    function e(e) {
        this.groupSizes = new Uint32Array(512), this.length = 512, this.tag = e;
    }
    var t = e.prototype;
    return t.indexOfGroup = function (e) {
        for (var t = 0, n = 0; n < e; n++)
            t += this.groupSizes[n];
        return t;
    }, t.insertRules = function (e, t) {
        if (e >= this.groupSizes.length) {
            for (var n = this.groupSizes, r = n.length, o = r; e >= o;)
                (o <<= 1) < 0 && j(16, "" + e);
            this.groupSizes = new Uint32Array(o), this.groupSizes.set(n), this.length = o;
            for (var s = r; s < o; s++)
                this.groupSizes[s] = 0;
        }
        for (var i = this.indexOfGroup(e + 1), a = 0, c = t.length; a < c; a++)
            this.tag.insertRule(i, t[a]) && (this.groupSizes[e]++, i++);
    }, t.clearGroup = function (e) {
        if (e < this.length) {
            var t = this.groupSizes[e], n = this.indexOfGroup(e), r = n + t;
            this.groupSizes[e] = 0;
            for (var o = n; o < r; o++)
                this.tag.deleteRule(n);
        }
    }, t.getGroup = function (e) {
        var t = "";
        if (e >= this.length || 0 === this.groupSizes[e])
            return t;
        for (var n = this.groupSizes[e], r = this.indexOfGroup(e), o = r + n, s = r; s < o; s++)
            t += this.tag.getRule(s) + "/*!sc*/\n";
        return t;
    }, e;
}(), x = new Map(), k$1 = new Map(), V = 1, B = function B(e) {
    if (x.has(e))
        return x.get(e);
    for (; k$1.has(V);)
        V++;
    var t = V++;
    return x.set(e, t), k$1.set(t, e), t;
}, z = function z(e) {
    return k$1.get(e);
}, M = function M(e, t) {
    t >= V && (V = t + 1), x.set(e, t), k$1.set(t, e);
}, G = "style[" + A + '][data-styled-version="5.3.5"]', L = new RegExp("^" + A + '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'), F = function F(e, t, n) {
    for (var r, o = n.split(","), s = 0, i = o.length; s < i; s++)
        (r = o[s]) && e.registerName(t, r);
}, Y = function Y(e, t) {
    for (var n = (t.textContent || "").split("/*!sc*/\n"), r = [], o = 0, s = n.length; o < s; o++) {
        var i = n[o].trim();
        if (i) {
            var a = i.match(L);
            if (a) {
                var c = 0 | parseInt(a[1], 10), u = a[2];
                0 !== c && (M(u, c), F(e, u, a[3]), e.getTag().insertRules(c, r)), r.length = 0;
            }
            else
                r.push(i);
        }
    }
}, q$1 = function q$1() {
    return "undefined" != typeof window && void 0 !== window.__webpack_nonce__ ? window.__webpack_nonce__ : null;
}, H = function H(e) {
    var t = document.head, n = e || t, r = document.createElement("style"), o = function (e) {
        for (var t = e.childNodes, n = t.length; n >= 0; n--) {
            var r = t[n];
            if (r && 1 === r.nodeType && r.hasAttribute(A))
                return r;
        }
    }(n), s = void 0 !== o ? o.nextSibling : null;
    r.setAttribute(A, "active"), r.setAttribute("data-styled-version", "5.3.5");
    var i = q$1();
    return i && r.setAttribute("nonce", i), n.insertBefore(r, s), r;
}, $ = function () {
    function e(e) {
        var t = this.element = H(e);
        t.appendChild(document.createTextNode("")), this.sheet = function (e) {
            if (e.sheet)
                return e.sheet;
            for (var t = document.styleSheets, n = 0, r = t.length; n < r; n++) {
                var o = t[n];
                if (o.ownerNode === e)
                    return o;
            }
            j(17);
        }(t), this.length = 0;
    }
    var t = e.prototype;
    return t.insertRule = function (e, t) {
        try {
            return this.sheet.insertRule(t, e), this.length++, !0;
        }
        catch (e) {
            return !1;
        }
    }, t.deleteRule = function (e) {
        this.sheet.deleteRule(e), this.length--;
    }, t.getRule = function (e) {
        var t = this.sheet.cssRules[e];
        return void 0 !== t && "string" == typeof t.cssText ? t.cssText : "";
    }, e;
}(), W = function () {
    function e(e) {
        var t = this.element = H(e);
        this.nodes = t.childNodes, this.length = 0;
    }
    var t = e.prototype;
    return t.insertRule = function (e, t) {
        if (e <= this.length && e >= 0) {
            var n = document.createTextNode(t), r = this.nodes[e];
            return this.element.insertBefore(n, r || null), this.length++, !0;
        }
        return !1;
    }, t.deleteRule = function (e) {
        this.element.removeChild(this.nodes[e]), this.length--;
    }, t.getRule = function (e) {
        return e < this.length ? this.nodes[e].textContent : "";
    }, e;
}(), U = function () {
    function e(e) {
        this.rules = [], this.length = 0;
    }
    var t = e.prototype;
    return t.insertRule = function (e, t) {
        return e <= this.length && (this.rules.splice(e, 0, t), this.length++, !0);
    }, t.deleteRule = function (e) {
        this.rules.splice(e, 1), this.length--;
    }, t.getRule = function (e) {
        return e < this.length ? this.rules[e] : "";
    }, e;
}(), J = I, X = {
    isServer: !I,
    useCSSOMInjection: !P
}, Z = function () {
    function e(e, t, n) {
        void 0 === e && (e = E), void 0 === t && (t = {}), this.options = v({}, X, {}, e), this.gs = t, this.names = new Map(n), this.server = !!e.isServer, !this.server && I && J && (J = !1, function (e) {
            for (var t = document.querySelectorAll(G), n = 0, r = t.length; n < r; n++) {
                var o = t[n];
                o && "active" !== o.getAttribute(A) && (Y(e, o), o.parentNode && o.parentNode.removeChild(o));
            }
        }(this));
    }
    e.registerId = function (e) {
        return B(e);
    };
    var t = e.prototype;
    return t.reconstructWithOptions = function (t, n) {
        return void 0 === n && (n = !0), new e(v({}, this.options, {}, t), this.gs, n && this.names || void 0);
    }, t.allocateGSInstance = function (e) {
        return this.gs[e] = (this.gs[e] || 0) + 1;
    }, t.getTag = function () {
        return this.tag || (this.tag = (n = (t = this.options).isServer, r = t.useCSSOMInjection, o = t.target, e = n ? new U(o) : r ? new $(o) : new W(o), new T(e)));
        var e, t, n, r, o;
    }, t.hasNameForId = function (e, t) {
        return this.names.has(e) && this.names.get(e).has(t);
    }, t.registerName = function (e, t) {
        if (B(e), this.names.has(e))
            this.names.get(e).add(t);
        else {
            var n = new Set();
            n.add(t), this.names.set(e, n);
        }
    }, t.insertRules = function (e, t, n) {
        this.registerName(e, t), this.getTag().insertRules(B(e), n);
    }, t.clearNames = function (e) {
        this.names.has(e) && this.names.get(e).clear();
    }, t.clearRules = function (e) {
        this.getTag().clearGroup(B(e)), this.clearNames(e);
    }, t.clearTag = function () {
        this.tag = void 0;
    }, t.toString = function () {
        return function (e) {
            for (var t = e.getTag(), n = t.length, r = "", o = 0; o < n; o++) {
                var s = z(o);
                if (void 0 !== s) {
                    var i = e.names.get(s), a = t.getGroup(o);
                    if (i && a && i.size) {
                        var c = A + ".g" + o + '[id="' + s + '"]', u = "";
                        void 0 !== i && i.forEach(function (e) {
                            e.length > 0 && (u += e + ",");
                        }), r += "" + a + c + '{content:"' + u + '"}/*!sc*/\n';
                    }
                }
            }
            return r;
        }(this);
    }, e;
}(), K = /(a)(d)/gi, Q = function Q(e) {
    return String.fromCharCode(e + (e > 25 ? 39 : 97));
};
function ee(e) {
    var t, n = "";
    for (t = Math.abs(e); t > 52; t = t / 52 | 0)
        n = Q(t % 52) + n;
    return (Q(t % 52) + n).replace(K, "$1-$2");
}
var te = function te(e, t) {
    for (var n = t.length; n;)
        e = 33 * e ^ t.charCodeAt(--n);
    return e;
}, ne = function ne(e) {
    return te(5381, e);
};
function re(e) {
    for (var t = 0; t < e.length; t += 1) {
        var n = e[t];
        if (b(n) && !N(n))
            return !1;
    }
    return !0;
}
var oe = ne("5.3.5"), se = function () {
    function e(e, t, n) {
        this.rules = e, this.staticRulesId = "", this.isStatic = (void 0 === n || n.isStatic) && re(e), this.componentId = t, this.baseHash = te(oe, t), this.baseStyle = n, Z.registerId(t);
    }
    return e.prototype.generateAndInjectStyles = function (e, t, n) {
        var r = this.componentId, o = [];
        if (this.baseStyle && o.push(this.baseStyle.generateAndInjectStyles(e, t, n)), this.isStatic && !n.hash) {
            if (this.staticRulesId && t.hasNameForId(r, this.staticRulesId))
                o.push(this.staticRulesId);
            else {
                var s = Ne(this.rules, e, t, n).join(""), i = ee(te(this.baseHash, s) >>> 0);
                if (!t.hasNameForId(r, i)) {
                    var a = n(s, "." + i, void 0, r);
                    t.insertRules(r, i, a);
                }
                o.push(i), this.staticRulesId = i;
            }
        }
        else {
            for (var c = this.rules.length, u = te(this.baseHash, n.hash), l = "", d = 0; d < c; d++) {
                var h = this.rules[d];
                if ("string" == typeof h)
                    l += h;
                else if (h) {
                    var p = Ne(h, e, t, n), f = Array.isArray(p) ? p.join("") : p;
                    u = te(u, f + d), l += f;
                }
            }
            if (l) {
                var m = ee(u >>> 0);
                if (!t.hasNameForId(r, m)) {
                    var y = n(l, "." + m, void 0, r);
                    t.insertRules(r, m, y);
                }
                o.push(m);
            }
        }
        return o.join(" ");
    }, e;
}(), ie = /^\s*\/\/.*$/gm, ae = [":", "[", ".", "#"];
function ce(e) {
    var t, n, r, o, s = void 0 === e ? E : e, i = s.options, a = void 0 === i ? E : i, c = s.plugins, u = void 0 === c ? w : c, l = new stylis_min(a), d = [], h = function (e) {
        function t(t) {
            if (t)
                try {
                    e(t + "}");
                }
                catch (e) { }
        }
        return function (n, r, o, s, i, a, c, u, l, d) {
            switch (n) {
                case 1:
                    if (0 === l && 64 === r.charCodeAt(0))
                        return e(r + ";"), "";
                    break;
                case 2:
                    if (0 === u)
                        return r + "/*|*/";
                    break;
                case 3:
                    switch (u) {
                        case 102:
                        case 112:
                            return e(o[0] + r), "";
                        default:
                            return r + (0 === d ? "/*|*/" : "");
                    }
                case -2:
                    r.split("/*|*/}").forEach(t);
            }
        };
    }(function (e) {
        d.push(e);
    }), f = function f(e, r, s) {
        return 0 === r && -1 !== ae.indexOf(s[n.length]) || s.match(o) ? e : "." + t;
    };
    function m(e, s, i, a) {
        void 0 === a && (a = "&");
        var c = e.replace(ie, ""), u = s && i ? i + " " + s + " { " + c + " }" : c;
        return t = a, n = s, r = new RegExp("\\" + n + "\\b", "g"), o = new RegExp("(\\" + n + "\\b){2,}"), l(i || !s ? "" : s, u);
    }
    return l.use([].concat(u, [function (e, t, o) {
            2 === e && o.length && o[0].lastIndexOf(n) > 0 && (o[0] = o[0].replace(r, f));
        }, h, function (e) {
            if (-2 === e) {
                var t = d;
                return d = [], t;
            }
        }])), m.hash = u.length ? u.reduce(function (e, t) {
        return t.name || j(15), te(e, t.name);
    }, 5381).toString() : "", m;
}
var ue = /*#__PURE__*/ wn.createContext();
ue.Consumer;
var de = /*#__PURE__*/ wn.createContext(), he = (de.Consumer, new Z()), pe = ce();
function fe() {
    return q$5(ue) || he;
}
function me() {
    return q$5(de) || pe;
}
function ye(e) {
    var t = h$4(e.stylisPlugins), n = t[0], s = t[1], c = fe(), u = F$3(function () {
        var t = c;
        return e.sheet ? t = e.sheet : e.target && (t = t.reconstructWithOptions({
            target: e.target
        }, !1)), e.disableCSSOMInjection && (t = t.reconstructWithOptions({
            useCSSOMInjection: !1
        })), t;
    }, [e.disableCSSOMInjection, e.sheet, e.target]), l = F$3(function () {
        return ce({
            options: {
                prefix: !e.disableVendorPrefixes
            },
            plugins: n
        });
    }, [e.disableVendorPrefixes, n]);
    return p$3(function () {
        h$2(n, e.stylisPlugins) || s(e.stylisPlugins);
    }, [e.stylisPlugins]), /*#__PURE__*/ wn.createElement(ue.Provider, {
        value: u
    }, /*#__PURE__*/ wn.createElement(de.Provider, {
        value: l
    }, e.children));
}
var ve = function () {
    function e(e, t) {
        var n = this;
        this.inject = function (e, t) {
            void 0 === t && (t = pe);
            var r = n.name + t.hash;
            e.hasNameForId(n.id, r) || e.insertRules(n.id, r, t(n.rules, r, "@keyframes"));
        }, this.toString = function () {
            return j(12, String(n.name));
        }, this.name = e, this.id = "sc-keyframes-" + e, this.rules = t;
    }
    return e.prototype.getName = function (e) {
        return void 0 === e && (e = pe), this.name + e.hash;
    }, e;
}(), ge = /([A-Z])/, Se = /([A-Z])/g, we = /^ms-/, Ee = function Ee(e) {
    return "-" + e.toLowerCase();
};
function be(e) {
    return ge.test(e) ? e.replace(Se, Ee).replace(we, "-ms-") : e;
}
var _e = function _e(e) {
    return null == e || !1 === e || "" === e;
};
function Ne(e, n, r, o) {
    if (Array.isArray(e)) {
        for (var s, i = [], a = 0, c = e.length; a < c; a += 1)
            "" !== (s = Ne(e[a], n, r, o)) && (Array.isArray(s) ? i.push.apply(i, s) : i.push(s));
        return i;
    }
    if (_e(e))
        return "";
    if (N(e))
        return "." + e.styledComponentId;
    if (b(e)) {
        if ("function" != typeof (l = e) || l.prototype && l.prototype.isReactComponent || !n)
            return e;
        var u = e(n);
        return Ne(u, n, r, o);
    }
    var l;
    return e instanceof ve ? r ? (e.inject(r, o), e.getName(o)) : e : S(e) ? function e(t, n) {
        var r, o, s = [];
        for (var i in t)
            t.hasOwnProperty(i) && !_e(t[i]) && (Array.isArray(t[i]) && t[i].isCss || b(t[i]) ? s.push(be(i) + ":", t[i], ";") : S(t[i]) ? s.push.apply(s, e(t[i], i)) : s.push(be(i) + ": " + (r = i, null == (o = t[i]) || "boolean" == typeof o || "" === o ? "" : "number" != typeof o || 0 === o || r in unitlessKeys ? String(o).trim() : o + "px") + ";"));
        return n ? [n + " {"].concat(s, ["}"]) : s;
    }(e) : e.toString();
}
var Ae = function Ae(e) {
    return Array.isArray(e) && (e.isCss = !0), e;
};
function Ce(e) {
    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++)
        n[r - 1] = arguments[r];
    return b(e) || S(e) ? Ae(Ne(g(w, [e].concat(n)))) : 0 === n.length && 1 === e.length && "string" == typeof e[0] ? e : Ae(Ne(g(e, n)));
}
var Re = function Re(e, t, n) {
    return void 0 === n && (n = E), e.theme !== n.theme && e.theme || t || n.theme;
}, De = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g, je = /(^-|-$)/g;
function Te(e) {
    return e.replace(De, "-").replace(je, "");
}
var xe = function xe(e) {
    return ee(ne(e) >>> 0);
};
function ke(e) {
    return "string" == typeof e && "production" === "production";
}
var Ve = function Ve(e) {
    return "function" == typeof e || "object" == _typeof$5(e) && null !== e && !Array.isArray(e);
}, Be = function Be(e) {
    return "__proto__" !== e && "constructor" !== e && "prototype" !== e;
};
function ze(e, t, n) {
    var r = e[n];
    Ve(t) && Ve(r) ? Me(r, t) : e[n] = t;
}
function Me(e) {
    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++)
        n[r - 1] = arguments[r];
    for (var o = 0, s = n; o < s.length; o++) {
        var i = s[o];
        if (Ve(i))
            for (var a in i)
                Be(a) && ze(e, i[a], a);
    }
    return e;
}
var Ge = /*#__PURE__*/ wn.createContext();
Ge.Consumer;
var Ye = {};
function qe(e, t, n) {
    var o = N(e), i = !ke(e), a = t.attrs, c = void 0 === a ? w : a, d = t.componentId, h = void 0 === d ? function (e, t) {
        var n = "string" != typeof e ? "sc" : Te(e);
        Ye[n] = (Ye[n] || 0) + 1;
        var r = n + "-" + xe("5.3.5" + n + Ye[n]);
        return t ? t + "-" + r : r;
    }(t.displayName, t.parentComponentId) : d, p = t.displayName, f = void 0 === p ? function (e) {
        return ke(e) ? "styled." + e : "Styled(" + _(e) + ")";
    }(e) : p, g = t.displayName && t.componentId ? Te(t.displayName) + "-" + t.componentId : t.componentId || h, S = o && e.attrs ? Array.prototype.concat(e.attrs, c).filter(Boolean) : c, A = t.shouldForwardProp;
    o && e.shouldForwardProp && (A = t.shouldForwardProp ? function (n, r, o) {
        return e.shouldForwardProp(n, r, o) && t.shouldForwardProp(n, r, o);
    } : e.shouldForwardProp);
    var C, I = new se(n, g, o ? e.componentStyle : void 0), P = I.isStatic && 0 === c.length, O = function O(e, t) {
        return function (e, t, n, r) {
            var o = e.attrs, i = e.componentStyle, a = e.defaultProps, c = e.foldedComponentIds, d = e.shouldForwardProp, h = e.styledComponentId, p = e.target;
            var f = function (e, t, n) {
                void 0 === e && (e = E);
                var r = v({}, t, {
                    theme: e
                }), o = {};
                return n.forEach(function (e) {
                    var t, n, s, i = e;
                    for (t in b(i) && (i = i(r)), i)
                        r[t] = o[t] = "className" === t ? (n = o[t], s = i[t], n && s ? n + " " + s : n || s) : i[t];
                }), [r, o];
            }(Re(t, q$5(Ge), a) || E, t, o), y = f[0], g = f[1], S = function (e, t, n, r) {
                var o = fe(), s = me(), i = t ? e.generateAndInjectStyles(E, o, s) : e.generateAndInjectStyles(n, o, s);
                return i;
            }(i, r, y), w = n, _ = g.$as || t.$as || g.as || t.as || p, N = ke(_), A = g !== t ? v({}, t, {}, g) : t, C = {};
            for (var I in A)
                "$" !== I[0] && "as" !== I && ("forwardedAs" === I ? C.as = A[I] : (d ? d(I, isPropValid, _) : !N || isPropValid(I)) && (C[I] = A[I]));
            return t.style && g.style !== t.style && (C.style = v({}, t.style, {}, g.style)), C.className = Array.prototype.concat(c, h, S !== h ? S : null, t.className, g.className).filter(Boolean).join(" "), C.ref = w, /*#__PURE__*/ y$3(_, C);
        }(C, e, t, P);
    };
    return O.displayName = f, (C = /*#__PURE__*/ wn.forwardRef(O)).attrs = S, C.componentStyle = I, C.displayName = f, C.shouldForwardProp = A, C.foldedComponentIds = o ? Array.prototype.concat(e.foldedComponentIds, e.styledComponentId) : w, C.styledComponentId = g, C.target = o ? e.target : e, C.withComponent = function (e) {
        var r = t.componentId, o = function (e, t) {
            if (null == e)
                return {};
            var n, r, o = {}, s = Object.keys(e);
            for (r = 0; r < s.length; r++)
                n = s[r], t.indexOf(n) >= 0 || (o[n] = e[n]);
            return o;
        }(t, ["componentId"]), s = r && r + "-" + (ke(e) ? e : Te(_(e)));
        return qe(e, v({}, o, {
            attrs: S,
            componentId: s
        }), n);
    }, Object.defineProperty(C, "defaultProps", {
        get: function get() {
            return this._foldedDefaultProps;
        },
        set: function set(t) {
            this._foldedDefaultProps = o ? Me({}, e.defaultProps, t) : t;
        }
    }), C.toString = function () {
        return "." + C.styledComponentId;
    }, i && hoistNonReactStatics$1(C, e, {
        attrs: !0,
        componentStyle: !0,
        displayName: !0,
        foldedComponentIds: !0,
        shouldForwardProp: !0,
        styledComponentId: !0,
        target: !0,
        withComponent: !0
    }), C;
}
var He = function He(e) {
    return function e(t, r, o) {
        if (void 0 === o && (o = E), !reactIsExports$1.isValidElementType(r))
            return j(1, String(r));
        var s = function s() {
            return t(r, o, Ce.apply(void 0, arguments));
        };
        return s.withConfig = function (n) {
            return e(t, r, v({}, o, {}, n));
        }, s.attrs = function (n) {
            return e(t, r, v({}, o, {
                attrs: Array.prototype.concat(o.attrs, n).filter(Boolean)
            }));
        }, s;
    }(qe, e);
};
["a", "abbr", "address", "area", "article", "aside", "audio", "b", "base", "bdi", "bdo", "big", "blockquote", "body", "br", "button", "canvas", "caption", "cite", "code", "col", "colgroup", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "div", "dl", "dt", "em", "embed", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "legend", "li", "link", "main", "map", "mark", "marquee", "menu", "menuitem", "meta", "meter", "nav", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "script", "section", "select", "small", "source", "span", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "track", "u", "ul", "var", "video", "wbr", "circle", "clipPath", "defs", "ellipse", "foreignObject", "g", "image", "line", "linearGradient", "marker", "mask", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "stop", "svg", "text", "textPath", "tspan"].forEach(function (e) {
    He[e] = He(e);
});
var SHADOW_DOM_ONE_TAP_MOUNT_POINT = "<div data-prompt_parent_id='g_id_onload' id='google-parent-prompt' style=''></div>";
function CreateWebComponent(ReactComponent, webComponentName) {
    var existingRegistry = customElements.get(webComponentName);
    if (existingRegistry) {
        return existingRegistry;
    }
    var ReactWebComponent = /*#__PURE__*/ function (_HTMLElement) {
        _inherits(ReactWebComponent, _HTMLElement);
        function ReactWebComponent(props) {
            var _this;
            _classCallCheck$1(this, ReactWebComponent);
            _this = _callSuper(this, ReactWebComponent);
            _this.props = props;
            _this.rootRef = document.createElement('div');
            _this.append(_this.rootRef);
            return _this;
        }
        _createClass$2(ReactWebComponent, [{
                key: "connectedCallback",
                value: function connectedCallback() {
                    this.styleSlot = document.createElement('section');
                    this.rootRef.appendChild(this.styleSlot);
                    this.mountPoint = document.createElement('span');
                    this.styleSlot.appendChild(this.mountPoint);
                    this.render(this.props);
                }
            }, {
                key: "disconnectedCallback",
                value: function disconnectedCallback() {
                    if (!this.mountPoint) {
                        return;
                    }
                    wn.unmountComponentAtNode(this.mountPoint);
                }
            }, {
                key: "render",
                value: function render(props) {
                    if (!this.mountPoint) {
                        throw Error('Cannot render - no mount point defined');
                    }
                    if (!this.styleSlot) {
                        throw Error('Cannot render - no style slot defined');
                    }
                    wn.render(/*#__PURE__*/ wn.createElement(ye, {
                        target: this.styleSlot
                    }, /*#__PURE__*/ wn.createElement(ReactComponent, Object.assign({}, props))), this.mountPoint);
                }
            }]);
        return ReactWebComponent;
    }(/*#__PURE__*/ _wrapNativeSuper(HTMLElement));
    customElements.define(webComponentName, ReactWebComponent);
    return ReactWebComponent;
}
function CreateShadowWebComponent(ReactComponent, webComponentName) {
    var existingRegistry = customElements.get(webComponentName);
    if (existingRegistry) {
        return existingRegistry;
    }
    var ReactWebComponent = /*#__PURE__*/ function (_HTMLElement2) {
        _inherits(ReactWebComponent, _HTMLElement2);
        function ReactWebComponent(props) {
            var _this2;
            _classCallCheck$1(this, ReactWebComponent);
            _this2 = _callSuper(this, ReactWebComponent);
            _this2.props = props;
            _this2.rootRef = _this2.attachShadow({
                mode: 'open'
            });
            return _this2;
        }
        _createClass$2(ReactWebComponent, [{
                key: "connectedCallback",
                value: function connectedCallback() {
                    this.styleSlot = document.createElement('section');
                    this.rootRef.appendChild(this.styleSlot);
                    this.mountPoint = document.createElement('span');
                    this.styleSlot.appendChild(this.mountPoint);
                    this.render(this.props);
                }
            }, {
                key: "disconnectedCallback",
                value: function disconnectedCallback() {
                    if (!this.mountPoint) {
                        return;
                    }
                    wn.unmountComponentAtNode(this.mountPoint);
                }
            }, {
                key: "renderOneTap",
                value: function renderOneTap(props) {
                    var _a, _b, _c;
                    var shouldContainOneTap = (_c = (_b = (_a = props === null || props === void 0 ? void 0 : props.config) === null || _a === void 0 ? void 0 : _a.oauthOptions) === null || _b === void 0 ? void 0 : _b.providers) === null || _c === void 0 ? void 0 : _c.find(function (config) {
                        return config.type === OAuthProviders.Google && config.one_tap;
                    });
                    var containsOneTap = this.innerHTML.includes(SHADOW_DOM_ONE_TAP_MOUNT_POINT);
                    if (shouldContainOneTap) {
                        if (!containsOneTap) {
                            this.innerHTML = SHADOW_DOM_ONE_TAP_MOUNT_POINT;
                        }
                    }
                    else {
                        this.innerHTML = '';
                    }
                }
            }, {
                key: "render",
                value: function render(props) {
                    if (!this.mountPoint) {
                        throw Error('Cannot render - no mount point defined');
                    }
                    if (!this.styleSlot) {
                        throw Error('Cannot render - no style slot defined');
                    }
                    this.renderOneTap(props);
                    wn.render(/*#__PURE__*/ wn.createElement(ye, {
                        target: this.styleSlot
                    }, /*#__PURE__*/ wn.createElement(ReactComponent, Object.assign({}, props))), this.mountPoint);
                }
            }]);
        return ReactWebComponent;
    }(/*#__PURE__*/ _wrapNativeSuper(HTMLElement));
    customElements.define(webComponentName, ReactWebComponent);
    return ReactWebComponent;
}
function CreateSSRSafeWebComponent(ReactComponent, webComponentName) {
    if (typeof window === 'undefined') {
        return function () {
            return null;
        };
    }
    return function (props) {
        var _a;
        var shadowDomEnabled = !!((_a = props.config) === null || _a === void 0 ? void 0 : _a.enableShadowDOM);
        if (shadowDomEnabled) {
            var Component = CreateShadowWebComponent(ReactComponent, webComponentName);
            return new Component(props);
        }
        else {
            var _Component = CreateWebComponent(ReactComponent, webComponentName);
            return new _Component(props);
        }
    };
}
var lodash_merge = {
    exports: {}
};
lodash_merge.exports;
(function (module, exports) {
    var LARGE_ARRAY_SIZE = 200;
    var HASH_UNDEFINED = '__lodash_hash_undefined__';
    var HOT_COUNT = 800, HOT_SPAN = 16;
    var MAX_SAFE_INTEGER = 9007199254740991;
    var argsTag = '[object Arguments]', arrayTag = '[object Array]', asyncTag = '[object AsyncFunction]', boolTag = '[object Boolean]', dateTag = '[object Date]', errorTag = '[object Error]', funcTag = '[object Function]', genTag = '[object GeneratorFunction]', mapTag = '[object Map]', numberTag = '[object Number]', nullTag = '[object Null]', objectTag = '[object Object]', proxyTag = '[object Proxy]', regexpTag = '[object RegExp]', setTag = '[object Set]', stringTag = '[object String]', undefinedTag = '[object Undefined]', weakMapTag = '[object WeakMap]';
    var arrayBufferTag = '[object ArrayBuffer]', dataViewTag = '[object DataView]', float32Tag = '[object Float32Array]', float64Tag = '[object Float64Array]', int8Tag = '[object Int8Array]', int16Tag = '[object Int16Array]', int32Tag = '[object Int32Array]', uint8Tag = '[object Uint8Array]', uint8ClampedTag = '[object Uint8ClampedArray]', uint16Tag = '[object Uint16Array]', uint32Tag = '[object Uint32Array]';
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    var freeGlobal = _typeof$5(commonjsGlobal) == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
    var freeSelf = (typeof self === "undefined" ? "undefined" : _typeof$5(self)) == 'object' && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function('return this')();
    var freeExports = exports && !exports.nodeType && exports;
    var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function () {
        try {
            var types = freeModule && freeModule.require && freeModule.require('util').types;
            if (types) {
                return types;
            }
            return freeProcess && freeProcess.binding && freeProcess.binding('util');
        }
        catch (e) { }
    }();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    function apply(func, thisArg, args) {
        switch (args.length) {
            case 0:
                return func.call(thisArg);
            case 1:
                return func.call(thisArg, args[0]);
            case 2:
                return func.call(thisArg, args[0], args[1]);
            case 3:
                return func.call(thisArg, args[0], args[1], args[2]);
        }
        return func.apply(thisArg, args);
    }
    function baseTimes(n, iteratee) {
        var index = -1, result = Array(n);
        while (++index < n) {
            result[index] = iteratee(index);
        }
        return result;
    }
    function baseUnary(func) {
        return function (value) {
            return func(value);
        };
    }
    function getValue(object, key) {
        return object == null ? undefined : object[key];
    }
    function overArg(func, transform) {
        return function (arg) {
            return func(transform(arg));
        };
    }
    var arrayProto = Array.prototype, funcProto = Function.prototype, objectProto = Object.prototype;
    var coreJsData = root['__core-js_shared__'];
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var maskSrcKey = function () {
        var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
        return uid ? 'Symbol(src)_1.' + uid : '';
    }();
    var nativeObjectToString = objectProto.toString;
    var objectCtorString = funcToString.call(Object);
    var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
    var Buffer = moduleExports ? root.Buffer : undefined, _Symbol = root.Symbol, Uint8Array = root.Uint8Array;
    Buffer ? Buffer.allocUnsafe : undefined;
    var getPrototype = overArg(Object.getPrototypeOf, Object), objectCreate = Object.create, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice = arrayProto.splice, symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;
    var defineProperty = function () {
        try {
            var func = getNative(Object, 'defineProperty');
            func({}, '', {});
            return func;
        }
        catch (e) { }
    }();
    var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined, nativeMax = Math.max, nativeNow = Date.now;
    var Map = getNative(root, 'Map'), nativeCreate = getNative(Object, 'create');
    var baseCreate = function () {
        function object() { }
        return function (proto) {
            if (!isObject(proto)) {
                return {};
            }
            if (objectCreate) {
                return objectCreate(proto);
            }
            object.prototype = proto;
            var result = new object();
            object.prototype = undefined;
            return result;
        };
    }();
    function Hash(entries) {
        var index = -1, length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
        }
    }
    function hashClear() {
        this.__data__ = nativeCreate ? nativeCreate(null) : {};
        this.size = 0;
    }
    function hashDelete(key) {
        var result = this.has(key) && delete this.__data__[key];
        this.size -= result ? 1 : 0;
        return result;
    }
    function hashGet(key) {
        var data = this.__data__;
        if (nativeCreate) {
            var result = data[key];
            return result === HASH_UNDEFINED ? undefined : result;
        }
        return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }
    function hashHas(key) {
        var data = this.__data__;
        return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
    }
    function hashSet(key, value) {
        var data = this.__data__;
        this.size += this.has(key) ? 0 : 1;
        data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
        return this;
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    function ListCache(entries) {
        var index = -1, length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
        }
    }
    function listCacheClear() {
        this.__data__ = [];
        this.size = 0;
    }
    function listCacheDelete(key) {
        var data = this.__data__, index = assocIndexOf(data, key);
        if (index < 0) {
            return false;
        }
        var lastIndex = data.length - 1;
        if (index == lastIndex) {
            data.pop();
        }
        else {
            splice.call(data, index, 1);
        }
        --this.size;
        return true;
    }
    function listCacheGet(key) {
        var data = this.__data__, index = assocIndexOf(data, key);
        return index < 0 ? undefined : data[index][1];
    }
    function listCacheHas(key) {
        return assocIndexOf(this.__data__, key) > -1;
    }
    function listCacheSet(key, value) {
        var data = this.__data__, index = assocIndexOf(data, key);
        if (index < 0) {
            ++this.size;
            data.push([key, value]);
        }
        else {
            data[index][1] = value;
        }
        return this;
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    function MapCache(entries) {
        var index = -1, length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
        }
    }
    function mapCacheClear() {
        this.size = 0;
        this.__data__ = {
            'hash': new Hash(),
            'map': new (Map || ListCache)(),
            'string': new Hash()
        };
    }
    function mapCacheDelete(key) {
        var result = getMapData(this, key)['delete'](key);
        this.size -= result ? 1 : 0;
        return result;
    }
    function mapCacheGet(key) {
        return getMapData(this, key).get(key);
    }
    function mapCacheHas(key) {
        return getMapData(this, key).has(key);
    }
    function mapCacheSet(key, value) {
        var data = getMapData(this, key), size = data.size;
        data.set(key, value);
        this.size += data.size == size ? 0 : 1;
        return this;
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    function Stack(entries) {
        var data = this.__data__ = new ListCache(entries);
        this.size = data.size;
    }
    function stackClear() {
        this.__data__ = new ListCache();
        this.size = 0;
    }
    function stackDelete(key) {
        var data = this.__data__, result = data['delete'](key);
        this.size = data.size;
        return result;
    }
    function stackGet(key) {
        return this.__data__.get(key);
    }
    function stackHas(key) {
        return this.__data__.has(key);
    }
    function stackSet(key, value) {
        var data = this.__data__;
        if (data instanceof ListCache) {
            var pairs = data.__data__;
            if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
                pairs.push([key, value]);
                this.size = ++data.size;
                return this;
            }
            data = this.__data__ = new MapCache(pairs);
        }
        data.set(key, value);
        this.size = data.size;
        return this;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    function arrayLikeKeys(value, inherited) {
        var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
        for (var key in value) {
            if (!(skipIndexes && (key == 'length' || isBuff && (key == 'offset' || key == 'parent') || isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || isIndex(key, length)))) {
                result.push(key);
            }
        }
        return result;
    }
    function assignMergeValue(object, key, value) {
        if (value !== undefined && !eq(object[key], value) || value === undefined && !(key in object)) {
            baseAssignValue(object, key, value);
        }
    }
    function assignValue(object, key, value) {
        var objValue = object[key];
        if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {
            baseAssignValue(object, key, value);
        }
    }
    function assocIndexOf(array, key) {
        var length = array.length;
        while (length--) {
            if (eq(array[length][0], key)) {
                return length;
            }
        }
        return -1;
    }
    function baseAssignValue(object, key, value) {
        if (key == '__proto__' && defineProperty) {
            defineProperty(object, key, {
                'configurable': true,
                'enumerable': true,
                'value': value,
                'writable': true
            });
        }
        else {
            object[key] = value;
        }
    }
    var baseFor = createBaseFor();
    function baseGetTag(value) {
        if (value == null) {
            return value === undefined ? undefinedTag : nullTag;
        }
        return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    function baseIsArguments(value) {
        return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    function baseIsNative(value) {
        if (!isObject(value) || isMasked(value)) {
            return false;
        }
        var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
        return pattern.test(toSource(value));
    }
    function baseIsTypedArray(value) {
        return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    function baseKeysIn(object) {
        if (!isObject(object)) {
            return nativeKeysIn(object);
        }
        var isProto = isPrototype(object), result = [];
        for (var key in object) {
            if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
                result.push(key);
            }
        }
        return result;
    }
    function baseMerge(object, source, srcIndex, customizer, stack) {
        if (object === source) {
            return;
        }
        baseFor(source, function (srcValue, key) {
            stack || (stack = new Stack());
            if (isObject(srcValue)) {
                baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
            }
            else {
                var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + '', object, source, stack) : undefined;
                if (newValue === undefined) {
                    newValue = srcValue;
                }
                assignMergeValue(object, key, newValue);
            }
        }, keysIn);
    }
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
        var objValue = safeGet(object, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
        if (stacked) {
            assignMergeValue(object, key, stacked);
            return;
        }
        var newValue = customizer ? customizer(objValue, srcValue, key + '', object, source, stack) : undefined;
        var isCommon = newValue === undefined;
        if (isCommon) {
            var isArr = isArray(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
            newValue = srcValue;
            if (isArr || isBuff || isTyped) {
                if (isArray(objValue)) {
                    newValue = objValue;
                }
                else if (isArrayLikeObject(objValue)) {
                    newValue = copyArray(objValue);
                }
                else if (isBuff) {
                    isCommon = false;
                    newValue = cloneBuffer(srcValue);
                }
                else if (isTyped) {
                    isCommon = false;
                    newValue = cloneTypedArray(srcValue);
                }
                else {
                    newValue = [];
                }
            }
            else if (isPlainObject(srcValue) || isArguments(srcValue)) {
                newValue = objValue;
                if (isArguments(objValue)) {
                    newValue = toPlainObject(objValue);
                }
                else if (!isObject(objValue) || isFunction(objValue)) {
                    newValue = initCloneObject(srcValue);
                }
            }
            else {
                isCommon = false;
            }
        }
        if (isCommon) {
            stack.set(srcValue, newValue);
            mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
            stack['delete'](srcValue);
        }
        assignMergeValue(object, key, newValue);
    }
    function baseRest(func, start) {
        return setToString(overRest(func, start, identity), func + '');
    }
    var baseSetToString = !defineProperty ? identity : function (func, string) {
        return defineProperty(func, 'toString', {
            'configurable': true,
            'enumerable': false,
            'value': constant(string),
            'writable': true
        });
    };
    function cloneBuffer(buffer, isDeep) {
        {
            return buffer.slice();
        }
    }
    function cloneArrayBuffer(arrayBuffer) {
        var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
        new Uint8Array(result).set(new Uint8Array(arrayBuffer));
        return result;
    }
    function cloneTypedArray(typedArray, isDeep) {
        var buffer = cloneArrayBuffer(typedArray.buffer);
        return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }
    function copyArray(source, array) {
        var index = -1, length = source.length;
        array || (array = Array(length));
        while (++index < length) {
            array[index] = source[index];
        }
        return array;
    }
    function copyObject(source, props, object, customizer) {
        var isNew = !object;
        object || (object = {});
        var index = -1, length = props.length;
        while (++index < length) {
            var key = props[index];
            var newValue = undefined;
            if (newValue === undefined) {
                newValue = source[key];
            }
            if (isNew) {
                baseAssignValue(object, key, newValue);
            }
            else {
                assignValue(object, key, newValue);
            }
        }
        return object;
    }
    function createAssigner(assigner) {
        return baseRest(function (object, sources) {
            var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : undefined, guard = length > 2 ? sources[2] : undefined;
            customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;
            if (guard && isIterateeCall(sources[0], sources[1], guard)) {
                customizer = length < 3 ? undefined : customizer;
                length = 1;
            }
            object = Object(object);
            while (++index < length) {
                var source = sources[index];
                if (source) {
                    assigner(object, source, index, customizer);
                }
            }
            return object;
        });
    }
    function createBaseFor(fromRight) {
        return function (object, iteratee, keysFunc) {
            var index = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
            while (length--) {
                var key = props[++index];
                if (iteratee(iterable[key], key, iterable) === false) {
                    break;
                }
            }
            return object;
        };
    }
    function getMapData(map, key) {
        var data = map.__data__;
        return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
    }
    function getNative(object, key) {
        var value = getValue(object, key);
        return baseIsNative(value) ? value : undefined;
    }
    function getRawTag(value) {
        var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
        try {
            value[symToStringTag] = undefined;
            var unmasked = true;
        }
        catch (e) { }
        var result = nativeObjectToString.call(value);
        if (unmasked) {
            if (isOwn) {
                value[symToStringTag] = tag;
            }
            else {
                delete value[symToStringTag];
            }
        }
        return result;
    }
    function initCloneObject(object) {
        return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
    }
    function isIndex(value, length) {
        var type = _typeof$5(value);
        length = length == null ? MAX_SAFE_INTEGER : length;
        return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
    }
    function isIterateeCall(value, index, object) {
        if (!isObject(object)) {
            return false;
        }
        var type = _typeof$5(index);
        if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {
            return eq(object[index], value);
        }
        return false;
    }
    function isKeyable(value) {
        var type = _typeof$5(value);
        return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
    }
    function isMasked(func) {
        return !!maskSrcKey && maskSrcKey in func;
    }
    function isPrototype(value) {
        var Ctor = value && value.constructor, proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;
        return value === proto;
    }
    function nativeKeysIn(object) {
        var result = [];
        if (object != null) {
            for (var key in Object(object)) {
                result.push(key);
            }
        }
        return result;
    }
    function objectToString(value) {
        return nativeObjectToString.call(value);
    }
    function overRest(func, start, transform) {
        start = nativeMax(start === undefined ? func.length - 1 : start, 0);
        return function () {
            var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array(length);
            while (++index < length) {
                array[index] = args[start + index];
            }
            index = -1;
            var otherArgs = Array(start + 1);
            while (++index < start) {
                otherArgs[index] = args[index];
            }
            otherArgs[start] = transform(array);
            return apply(func, this, otherArgs);
        };
    }
    function safeGet(object, key) {
        if (key === 'constructor' && typeof object[key] === 'function') {
            return;
        }
        if (key == '__proto__') {
            return;
        }
        return object[key];
    }
    var setToString = shortOut(baseSetToString);
    function shortOut(func) {
        var count = 0, lastCalled = 0;
        return function () {
            var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
            lastCalled = stamp;
            if (remaining > 0) {
                if (++count >= HOT_COUNT) {
                    return arguments[0];
                }
            }
            else {
                count = 0;
            }
            return func.apply(undefined, arguments);
        };
    }
    function toSource(func) {
        if (func != null) {
            try {
                return funcToString.call(func);
            }
            catch (e) { }
            try {
                return func + '';
            }
            catch (e) { }
        }
        return '';
    }
    function eq(value, other) {
        return value === other || value !== value && other !== other;
    }
    var isArguments = baseIsArguments(function () {
        return arguments;
    }()) ? baseIsArguments : function (value) {
        return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
    };
    var isArray = Array.isArray;
    function isArrayLike(value) {
        return value != null && isLength(value.length) && !isFunction(value);
    }
    function isArrayLikeObject(value) {
        return isObjectLike(value) && isArrayLike(value);
    }
    var isBuffer = nativeIsBuffer || stubFalse;
    function isFunction(value) {
        if (!isObject(value)) {
            return false;
        }
        var tag = baseGetTag(value);
        return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    function isLength(value) {
        return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    function isObject(value) {
        var type = _typeof$5(value);
        return value != null && (type == 'object' || type == 'function');
    }
    function isObjectLike(value) {
        return value != null && _typeof$5(value) == 'object';
    }
    function isPlainObject(value) {
        if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
            return false;
        }
        var proto = getPrototype(value);
        if (proto === null) {
            return true;
        }
        var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
        return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
    }
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    function toPlainObject(value) {
        return copyObject(value, keysIn(value));
    }
    function keysIn(object) {
        return isArrayLike(object) ? arrayLikeKeys(object) : baseKeysIn(object);
    }
    var merge = createAssigner(function (object, source, srcIndex) {
        baseMerge(object, source, srcIndex);
    });
    function constant(value) {
        return function () {
            return value;
        };
    }
    function identity(value) {
        return value;
    }
    function stubFalse() {
        return false;
    }
    module.exports = merge;
})(lodash_merge, lodash_merge.exports);
var lodash_mergeExports = lodash_merge.exports;
var merge = /*@__PURE__*/ getDefaultExportFromCjs(lodash_mergeExports);
var shim = {
    exports: {}
};
var useSyncExternalStoreShim_production_min = {};
var require$$2 = /*@__PURE__*/ getAugmentedNamespace(compat_module);
var e = require$$2;
function h(a, b) {
    return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
}
var k = "function" === typeof Object.is ? Object.is : h, l = e.useState, m = e.useEffect, n = e.useLayoutEffect, p = e.useDebugValue;
function q(a, b) {
    var d = b(), f = l({
        inst: {
            value: d,
            getSnapshot: b
        }
    }), c = f[0].inst, g = f[1];
    n(function () {
        c.value = d;
        c.getSnapshot = b;
        r$5(c) && g({
            inst: c
        });
    }, [a, d, b]);
    m(function () {
        r$5(c) && g({
            inst: c
        });
        return a(function () {
            r$5(c) && g({
                inst: c
            });
        });
    }, [a]);
    p(d);
    return d;
}
function r$5(a) {
    var b = a.getSnapshot;
    a = a.value;
    try {
        var d = b();
        return !k(a, d);
    }
    catch (f) {
        return !0;
    }
}
function t(a, b) {
    return b();
}
var u = "undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement ? t : q;
useSyncExternalStoreShim_production_min.useSyncExternalStore = void 0 !== e.useSyncExternalStore ? e.useSyncExternalStore : u;
{
    shim.exports = useSyncExternalStoreShim_production_min;
}
var shimExports = shim.exports;
var SWRGlobalState = new WeakMap();
var EMPTY_CACHE = {};
var INITIAL_CACHE = {};
var noop$2 = function noop() { };
var UNDEFINED = noop$2();
var OBJECT = Object;
var isUndefined = function isUndefined(v) {
    return v === UNDEFINED;
};
var isFunction$1 = function isFunction(v) {
    return typeof v == 'function';
};
var mergeObjects = function mergeObjects(a, b) {
    return _objectSpread(_objectSpread({}, a), b);
};
var STR_UNDEFINED = 'undefined';
var isWindowDefined = (typeof window === "undefined" ? "undefined" : _typeof$5(window)) != STR_UNDEFINED;
var isDocumentDefined = (typeof document === "undefined" ? "undefined" : _typeof$5(document)) != STR_UNDEFINED;
var hasRequestAnimationFrame = function hasRequestAnimationFrame() {
    return isWindowDefined && _typeof$5(window['requestAnimationFrame']) != STR_UNDEFINED;
};
var createCacheHelper = function createCacheHelper(cache, key) {
    var state = SWRGlobalState.get(cache);
    return [function () {
            return cache.get(key) || EMPTY_CACHE;
        }, function (info) {
            if (!isUndefined(key)) {
                var prev = cache.get(key);
                if (!(key in INITIAL_CACHE)) {
                    INITIAL_CACHE[key] = prev;
                }
                state[5](key, mergeObjects(prev, info), prev || EMPTY_CACHE);
            }
        }, state[6], function () {
            if (!isUndefined(key)) {
                if (key in INITIAL_CACHE)
                    return INITIAL_CACHE[key];
            }
            return cache.get(key) || EMPTY_CACHE;
        }];
};
var table = new WeakMap();
var counter = 0;
var stableHash = function stableHash(arg) {
    var type = _typeof$5(arg);
    var constructor = arg && arg.constructor;
    var isDate = constructor == Date;
    var result;
    var index;
    if (OBJECT(arg) === arg && !isDate && constructor != RegExp) {
        result = table.get(arg);
        if (result)
            return result;
        result = ++counter + '~';
        table.set(arg, result);
        if (constructor == Array) {
            result = '@';
            for (index = 0; index < arg.length; index++) {
                result += stableHash(arg[index]) + ',';
            }
            table.set(arg, result);
        }
        if (constructor == OBJECT) {
            result = '#';
            var keys = OBJECT.keys(arg).sort();
            while (!isUndefined(index = keys.pop())) {
                if (!isUndefined(arg[index])) {
                    result += index + ':' + stableHash(arg[index]) + ',';
                }
            }
            table.set(arg, result);
        }
    }
    else {
        result = isDate ? arg.toJSON() : type == 'symbol' ? arg.toString() : type == 'string' ? JSON.stringify(arg) : '' + arg;
    }
    return result;
};
var online = true;
var isOnline = function isOnline() {
    return online;
};
var _ref$3 = isWindowDefined && window.addEventListener ? [window.addEventListener.bind(window), window.removeEventListener.bind(window)] : [noop$2, noop$2], _ref2$2 = _slicedToArray$1(_ref$3, 2), onWindowEvent = _ref2$2[0], offWindowEvent = _ref2$2[1];
var isVisible = function isVisible() {
    var visibilityState = isDocumentDefined && document.visibilityState;
    return isUndefined(visibilityState) || visibilityState !== 'hidden';
};
var initFocus = function initFocus(callback) {
    if (isDocumentDefined) {
        document.addEventListener('visibilitychange', callback);
    }
    onWindowEvent('focus', callback);
    return function () {
        if (isDocumentDefined) {
            document.removeEventListener('visibilitychange', callback);
        }
        offWindowEvent('focus', callback);
    };
};
var initReconnect = function initReconnect(callback) {
    var onOnline = function onOnline() {
        online = true;
        callback();
    };
    var onOffline = function onOffline() {
        online = false;
    };
    onWindowEvent('online', onOnline);
    onWindowEvent('offline', onOffline);
    return function () {
        offWindowEvent('online', onOnline);
        offWindowEvent('offline', onOffline);
    };
};
var preset = {
    isOnline: isOnline,
    isVisible: isVisible
};
var defaultConfigOptions = {
    initFocus: initFocus,
    initReconnect: initReconnect
};
var IS_REACT_LEGACY = !wn.useId;
var IS_SERVER = !isWindowDefined || 'Deno' in window;
var rAF = function rAF(f) {
    return hasRequestAnimationFrame() ? window['requestAnimationFrame'](f) : setTimeout(f, 1);
};
var useIsomorphicLayoutEffect = IS_SERVER ? p$3 : y$2;
var navigatorConnection = typeof navigator !== 'undefined' && navigator.connection;
var slowConnection = !IS_SERVER && navigatorConnection && (['slow-2g', '2g'].includes(navigatorConnection.effectiveType) || navigatorConnection.saveData);
var serialize = function serialize(key) {
    if (isFunction$1(key)) {
        try {
            key = key();
        }
        catch (err) {
            key = '';
        }
    }
    var args = key;
    key = typeof key == 'string' ? key : (Array.isArray(key) ? key.length : key) ? stableHash(key) : '';
    return [key, args];
};
var __timestamp = 0;
var getTimestamp = function getTimestamp() {
    return ++__timestamp;
};
var FOCUS_EVENT = 0;
var RECONNECT_EVENT = 1;
var MUTATE_EVENT = 2;
var ERROR_REVALIDATE_EVENT = 3;
var constants = {
    __proto__: null,
    FOCUS_EVENT: FOCUS_EVENT,
    RECONNECT_EVENT: RECONNECT_EVENT,
    MUTATE_EVENT: MUTATE_EVENT,
    ERROR_REVALIDATE_EVENT: ERROR_REVALIDATE_EVENT
};
function internalMutate() {
    return _internalMutate.apply(this, arguments);
}
function _internalMutate() {
    _internalMutate = _asyncToGenerator(/*#__PURE__*/ _regeneratorRuntime$1().mark(function _callee3() {
        var _len, args, _key2, cache, _key, _data, _opts, options, populateCache, rollbackOnErrorOption, optimisticData, revalidate, rollbackOnError, throwOnError, keyFilter, matchedKeys, it, keyIt, key, mutateByKey, _mutateByKey, _args3 = arguments;
        return _regeneratorRuntime$1().wrap(function _callee3$(_context3) {
            while (1)
                switch (_context3.prev = _context3.next) {
                    case 0:
                        _mutateByKey = function _mutateByKey3() {
                            _mutateByKey = _asyncToGenerator(/*#__PURE__*/ _regeneratorRuntime$1().mark(function _callee2(_k) {
                                var _serialize3, _serialize4, key, _createCacheHelper3, _createCacheHelper4, get, set, _SWRGlobalState$get5, _SWRGlobalState$get6, EVENT_REVALIDATORS, MUTATION, FETCH, revalidators, startRevalidate, data, error, beforeMutationTs, hasOptimisticData, state, displayedData, currentData, committedData, res;
                                return _regeneratorRuntime$1().wrap(function _callee2$(_context2) {
                                    while (1)
                                        switch (_context2.prev = _context2.next) {
                                            case 0:
                                                _serialize3 = serialize(_k), _serialize4 = _slicedToArray$1(_serialize3, 1), key = _serialize4[0];
                                                if (key) {
                                                    _context2.next = 3;
                                                    break;
                                                }
                                                return _context2.abrupt("return");
                                            case 3:
                                                _createCacheHelper3 = createCacheHelper(cache, key), _createCacheHelper4 = _slicedToArray$1(_createCacheHelper3, 2), get = _createCacheHelper4[0], set = _createCacheHelper4[1];
                                                _SWRGlobalState$get5 = SWRGlobalState.get(cache), _SWRGlobalState$get6 = _slicedToArray$1(_SWRGlobalState$get5, 3), EVENT_REVALIDATORS = _SWRGlobalState$get6[0], MUTATION = _SWRGlobalState$get6[1], FETCH = _SWRGlobalState$get6[2];
                                                revalidators = EVENT_REVALIDATORS[key];
                                                startRevalidate = function startRevalidate() {
                                                    if (revalidate) {
                                                        delete FETCH[key];
                                                        if (revalidators && revalidators[0]) {
                                                            return revalidators[0](MUTATE_EVENT).then(function () {
                                                                return get().data;
                                                            });
                                                        }
                                                    }
                                                    return get().data;
                                                };
                                                if (!(args.length < 3)) {
                                                    _context2.next = 9;
                                                    break;
                                                }
                                                return _context2.abrupt("return", startRevalidate());
                                            case 9:
                                                data = _data;
                                                beforeMutationTs = getTimestamp();
                                                MUTATION[key] = [beforeMutationTs, 0];
                                                hasOptimisticData = !isUndefined(optimisticData);
                                                state = get();
                                                displayedData = state.data;
                                                currentData = state._c;
                                                committedData = isUndefined(currentData) ? displayedData : currentData;
                                                if (hasOptimisticData) {
                                                    optimisticData = isFunction$1(optimisticData) ? optimisticData(committedData) : optimisticData;
                                                    set({
                                                        data: optimisticData,
                                                        _c: committedData
                                                    });
                                                }
                                                if (isFunction$1(data)) {
                                                    try {
                                                        data = data(committedData);
                                                    }
                                                    catch (err) {
                                                        error = err;
                                                    }
                                                }
                                                if (!(data && isFunction$1(data.then))) {
                                                    _context2.next = 30;
                                                    break;
                                                }
                                                _context2.next = 22;
                                                return data["catch"](function (err) {
                                                    error = err;
                                                });
                                            case 22:
                                                data = _context2.sent;
                                                if (!(beforeMutationTs !== MUTATION[key][0])) {
                                                    _context2.next = 29;
                                                    break;
                                                }
                                                if (!error) {
                                                    _context2.next = 26;
                                                    break;
                                                }
                                                throw error;
                                            case 26:
                                                return _context2.abrupt("return", data);
                                            case 29:
                                                if (error && hasOptimisticData && rollbackOnError(error)) {
                                                    populateCache = true;
                                                    data = committedData;
                                                    set({
                                                        data: data,
                                                        _c: UNDEFINED
                                                    });
                                                }
                                            case 30:
                                                if (populateCache) {
                                                    if (!error) {
                                                        if (isFunction$1(populateCache)) {
                                                            data = populateCache(data, committedData);
                                                        }
                                                        set({
                                                            data: data,
                                                            _c: UNDEFINED
                                                        });
                                                    }
                                                }
                                                MUTATION[key][1] = getTimestamp();
                                                _context2.next = 34;
                                                return startRevalidate();
                                            case 34:
                                                res = _context2.sent;
                                                set({
                                                    _c: UNDEFINED
                                                });
                                                if (!error) {
                                                    _context2.next = 40;
                                                    break;
                                                }
                                                if (!throwOnError) {
                                                    _context2.next = 39;
                                                    break;
                                                }
                                                throw error;
                                            case 39:
                                                return _context2.abrupt("return");
                                            case 40:
                                                return _context2.abrupt("return", populateCache ? res : data);
                                            case 41:
                                            case "end":
                                                return _context2.stop();
                                        }
                                }, _callee2);
                            }));
                            return _mutateByKey.apply(this, arguments);
                        };
                        mutateByKey = function _mutateByKey2(_x2) {
                            return _mutateByKey.apply(this, arguments);
                        };
                        for (_len = _args3.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {
                            args[_key2] = _args3[_key2];
                        }
                        cache = args[0], _key = args[1], _data = args[2], _opts = args[3];
                        options = mergeObjects({
                            populateCache: true,
                            throwOnError: true
                        }, typeof _opts === 'boolean' ? {
                            revalidate: _opts
                        } : _opts || {});
                        populateCache = options.populateCache;
                        rollbackOnErrorOption = options.rollbackOnError;
                        optimisticData = options.optimisticData;
                        revalidate = options.revalidate !== false;
                        rollbackOnError = function rollbackOnError(error) {
                            return typeof rollbackOnErrorOption === 'function' ? rollbackOnErrorOption(error) : rollbackOnErrorOption !== false;
                        };
                        throwOnError = options.throwOnError;
                        if (!isFunction$1(_key)) {
                            _context3.next = 17;
                            break;
                        }
                        keyFilter = _key;
                        matchedKeys = [];
                        it = cache.keys();
                        for (keyIt = it.next(); !keyIt.done; keyIt = it.next()) {
                            key = keyIt.value;
                            if (!/^\$(inf|sub)\$/.test(key) && keyFilter(cache.get(key)._k)) {
                                matchedKeys.push(key);
                            }
                        }
                        return _context3.abrupt("return", Promise.all(matchedKeys.map(mutateByKey)));
                    case 17:
                        return _context3.abrupt("return", mutateByKey(_key));
                    case 18:
                    case "end":
                        return _context3.stop();
                }
        }, _callee3);
    }));
    return _internalMutate.apply(this, arguments);
}
var revalidateAllKeys = function revalidateAllKeys(revalidators, type) {
    for (var key in revalidators) {
        if (revalidators[key][0])
            revalidators[key][0](type);
    }
};
var initCache = function initCache(provider, options) {
    if (!SWRGlobalState.has(provider)) {
        var opts = mergeObjects(defaultConfigOptions, options);
        var EVENT_REVALIDATORS = {};
        var _mutate = internalMutate.bind(UNDEFINED, provider);
        var unmount = noop$2;
        var subscriptions = {};
        var subscribe = function subscribe(key, callback) {
            var subs = subscriptions[key] || [];
            subscriptions[key] = subs;
            subs.push(callback);
            return function () {
                return subs.splice(subs.indexOf(callback), 1);
            };
        };
        var setter = function setter(key, value, prev) {
            provider.set(key, value);
            var subs = subscriptions[key];
            if (subs) {
                var _iterator = _createForOfIteratorHelper$1(subs), _step;
                try {
                    for (_iterator.s(); !(_step = _iterator.n()).done;) {
                        var _fn = _step.value;
                        _fn(value, prev);
                    }
                }
                catch (err) {
                    _iterator.e(err);
                }
                finally {
                    _iterator.f();
                }
            }
        };
        var initProvider = function initProvider() {
            if (!SWRGlobalState.has(provider)) {
                SWRGlobalState.set(provider, [EVENT_REVALIDATORS, {}, {}, {}, _mutate, setter, subscribe]);
                if (!IS_SERVER) {
                    var releaseFocus = opts.initFocus(setTimeout.bind(UNDEFINED, revalidateAllKeys.bind(UNDEFINED, EVENT_REVALIDATORS, FOCUS_EVENT)));
                    var releaseReconnect = opts.initReconnect(setTimeout.bind(UNDEFINED, revalidateAllKeys.bind(UNDEFINED, EVENT_REVALIDATORS, RECONNECT_EVENT)));
                    unmount = function unmount() {
                        releaseFocus && releaseFocus();
                        releaseReconnect && releaseReconnect();
                        SWRGlobalState["delete"](provider);
                    };
                }
            }
        };
        initProvider();
        return [provider, _mutate, initProvider, unmount];
    }
    return [provider, SWRGlobalState.get(provider)[4]];
};
var onErrorRetry = function onErrorRetry(_, __, config, revalidate, opts) {
    var maxRetryCount = config.errorRetryCount;
    var currentRetryCount = opts.retryCount;
    var timeout = ~~((Math.random() + 0.5) * (1 << (currentRetryCount < 8 ? currentRetryCount : 8))) * config.errorRetryInterval;
    if (!isUndefined(maxRetryCount) && currentRetryCount > maxRetryCount) {
        return;
    }
    setTimeout(revalidate, timeout, opts);
};
var compare = function compare(currentData, newData) {
    return stableHash(currentData) == stableHash(newData);
};
var _initCache = initCache(new Map()), _initCache2 = _slicedToArray$1(_initCache, 2), cache$3 = _initCache2[0], mutate = _initCache2[1];
var defaultConfig = mergeObjects({
    onLoadingSlow: noop$2,
    onSuccess: noop$2,
    onError: noop$2,
    onErrorRetry: onErrorRetry,
    onDiscarded: noop$2,
    revalidateOnFocus: true,
    revalidateOnReconnect: true,
    revalidateIfStale: true,
    shouldRetryOnError: true,
    errorRetryInterval: slowConnection ? 10000 : 5000,
    focusThrottleInterval: 5 * 1000,
    dedupingInterval: 2 * 1000,
    loadingTimeout: slowConnection ? 5000 : 3000,
    compare: compare,
    isPaused: function isPaused() {
        return false;
    },
    cache: cache$3,
    mutate: mutate,
    fallback: {}
}, preset);
var mergeConfigs = function mergeConfigs(a, b) {
    var v = mergeObjects(a, b);
    if (b) {
        var u1 = a.use, f1 = a.fallback;
        var u2 = b.use, f2 = b.fallback;
        if (u1 && u2) {
            v.use = u1.concat(u2);
        }
        if (f1 && f2) {
            v.fallback = mergeObjects(f1, f2);
        }
    }
    return v;
};
var SWRConfigContext = F$4({});
var enableDevtools = isWindowDefined && window.__SWR_DEVTOOLS_USE__;
var use = enableDevtools ? window.__SWR_DEVTOOLS_USE__ : [];
var setupDevTools = function setupDevTools() {
    if (enableDevtools) {
        window.__SWR_DEVTOOLS_REACT__ = wn;
    }
};
var normalize = function normalize(args) {
    return isFunction$1(args[1]) ? [args[0], args[1], args[2] || {}] : [args[0], null, (args[1] === null ? args[2] : args[1]) || {}];
};
var useSWRConfig = function useSWRConfig() {
    return mergeObjects(defaultConfig, q$5(SWRConfigContext));
};
var middleware = function middleware(useSWRNext) {
    return function (key_, fetcher_, config) {
        var fetcher = fetcher_ && function () {
            var key = serialize(key_)[0];
            var _SWRGlobalState$get = SWRGlobalState.get(cache$3), _SWRGlobalState$get2 = _slicedToArray$1(_SWRGlobalState$get, 4), PRELOAD = _SWRGlobalState$get2[3];
            var req = PRELOAD[key];
            if (req) {
                delete PRELOAD[key];
                return req;
            }
            return fetcher_.apply(void 0, arguments);
        };
        return useSWRNext(key_, fetcher, config);
    };
};
var BUILT_IN_MIDDLEWARE = use.concat(middleware);
var withArgs = function withArgs(hook) {
    return function useSWRArgs() {
        var fallbackConfig = useSWRConfig();
        for (var _len2 = arguments.length, args = new Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {
            args[_key3] = arguments[_key3];
        }
        var _normalize = normalize(args), _normalize2 = _slicedToArray$1(_normalize, 3), key = _normalize2[0], fn = _normalize2[1], _config = _normalize2[2];
        var config = mergeConfigs(fallbackConfig, _config);
        var next = hook;
        var use = config.use;
        var middleware = (use || []).concat(BUILT_IN_MIDDLEWARE);
        for (var _i = middleware.length; _i--;) {
            next = middleware[_i](next);
        }
        return next(key, fn || config.fetcher || null, config);
    };
};
var subscribeCallback = function subscribeCallback(key, callbacks, callback) {
    var keyedRevalidators = callbacks[key] || (callbacks[key] = []);
    keyedRevalidators.push(callback);
    return function () {
        var index = keyedRevalidators.indexOf(callback);
        if (index >= 0) {
            keyedRevalidators[index] = keyedRevalidators[keyedRevalidators.length - 1];
            keyedRevalidators.pop();
        }
    };
};
setupDevTools();
var WITH_DEDUPE = {
    dedupe: true
};
var useSWRHandler = function useSWRHandler(_key, fetcher, config) {
    var cache = config.cache, compare = config.compare, suspense = config.suspense, fallbackData = config.fallbackData, revalidateOnMount = config.revalidateOnMount, revalidateIfStale = config.revalidateIfStale, refreshInterval = config.refreshInterval, refreshWhenHidden = config.refreshWhenHidden, refreshWhenOffline = config.refreshWhenOffline, keepPreviousData = config.keepPreviousData;
    var _SWRGlobalState$get3 = SWRGlobalState.get(cache), _SWRGlobalState$get4 = _slicedToArray$1(_SWRGlobalState$get3, 3), EVENT_REVALIDATORS = _SWRGlobalState$get4[0], MUTATION = _SWRGlobalState$get4[1], FETCH = _SWRGlobalState$get4[2];
    var _serialize = serialize(_key), _serialize2 = _slicedToArray$1(_serialize, 2), key = _serialize2[0], fnArg = _serialize2[1];
    var initialMountedRef = _$1(false);
    var unmountedRef = _$1(false);
    var keyRef = _$1(key);
    var fetcherRef = _$1(fetcher);
    var configRef = _$1(config);
    var getConfig = function getConfig() {
        return configRef.current;
    };
    var isActive = function isActive() {
        return getConfig().isVisible() && getConfig().isOnline();
    };
    var _createCacheHelper = createCacheHelper(cache, key), _createCacheHelper2 = _slicedToArray$1(_createCacheHelper, 4), getCache = _createCacheHelper2[0], setCache = _createCacheHelper2[1], subscribeCache = _createCacheHelper2[2], getInitialCache = _createCacheHelper2[3];
    var stateDependencies = _$1({}).current;
    var fallback = isUndefined(fallbackData) ? config.fallback[key] : fallbackData;
    var isEqual = function isEqual(prev, current) {
        var equal = true;
        for (var _3 in stateDependencies) {
            var _t = _3;
            if (_t === 'data') {
                if (!compare(current[_t], prev[_t])) {
                    if (isUndefined(prev[_t])) {
                        if (!compare(current[_t], returnedData)) {
                            equal = false;
                        }
                    }
                    else {
                        equal = false;
                    }
                }
            }
            else {
                if (current[_t] !== prev[_t]) {
                    equal = false;
                }
            }
        }
        return equal;
    };
    var getSnapshot = F$3(function () {
        var shouldStartRequest = function () {
            if (!key)
                return false;
            if (!fetcher)
                return false;
            if (!isUndefined(revalidateOnMount))
                return revalidateOnMount;
            if (getConfig().isPaused())
                return false;
            if (suspense)
                return false;
            if (!isUndefined(revalidateIfStale))
                return revalidateIfStale;
            return true;
        }();
        var getSelectedCache = function getSelectedCache(state) {
            var snapshot = mergeObjects(state);
            delete snapshot._k;
            if (!shouldStartRequest) {
                return snapshot;
            }
            return _objectSpread({
                isValidating: true,
                isLoading: true
            }, snapshot);
        };
        var cachedData = getCache();
        var initialData = getInitialCache();
        var clientSnapshot = getSelectedCache(cachedData);
        var serverSnapshot = cachedData === initialData ? clientSnapshot : getSelectedCache(initialData);
        var memorizedSnapshot = clientSnapshot;
        return [function () {
                var newSnapshot = getSelectedCache(getCache());
                return isEqual(newSnapshot, memorizedSnapshot) ? memorizedSnapshot : memorizedSnapshot = newSnapshot;
            }, function () {
                return serverSnapshot;
            }];
    }, [cache, key]);
    var cached = shimExports.useSyncExternalStore(T$2(function (callback) {
        return subscribeCache(key, function (current, prev) {
            if (!isEqual(prev, current))
                callback();
        });
    }, [cache, key]), getSnapshot[0], getSnapshot[1]);
    var isInitialMount = !initialMountedRef.current;
    var hasRevalidator = EVENT_REVALIDATORS[key] && EVENT_REVALIDATORS[key].length > 0;
    var cachedData = cached.data;
    var data = isUndefined(cachedData) ? fallback : cachedData;
    var error = cached.error;
    var laggyDataRef = _$1(data);
    var returnedData = keepPreviousData ? isUndefined(cachedData) ? laggyDataRef.current : cachedData : data;
    var shouldDoInitialRevalidation = function () {
        if (hasRevalidator && !isUndefined(error))
            return false;
        if (isInitialMount && !isUndefined(revalidateOnMount))
            return revalidateOnMount;
        if (getConfig().isPaused())
            return false;
        if (suspense)
            return isUndefined(data) ? false : revalidateIfStale;
        return isUndefined(data) || revalidateIfStale;
    }();
    var defaultValidatingState = !!(key && fetcher && isInitialMount && shouldDoInitialRevalidation);
    var isValidating = isUndefined(cached.isValidating) ? defaultValidatingState : cached.isValidating;
    var isLoading = isUndefined(cached.isLoading) ? defaultValidatingState : cached.isLoading;
    var revalidate = T$2(/*#__PURE__*/ function () {
        var _ref3 = _asyncToGenerator(/*#__PURE__*/ _regeneratorRuntime$1().mark(function _callee(revalidateOpts) {
            var currentFetcher, newData, startAt, loading, opts, shouldStartNewRequest, callbackSafeguard, finalState, finishRequestAndUpdateState, cleanupState, initialState, _FETCH$key, mutationInfo, cacheData, currentConfig, shouldRetryOnError;
            return _regeneratorRuntime$1().wrap(function _callee$(_context) {
                while (1)
                    switch (_context.prev = _context.next) {
                        case 0:
                            currentFetcher = fetcherRef.current;
                            if (!(!key || !currentFetcher || unmountedRef.current || getConfig().isPaused())) {
                                _context.next = 3;
                                break;
                            }
                            return _context.abrupt("return", false);
                        case 3:
                            loading = true;
                            opts = revalidateOpts || {};
                            shouldStartNewRequest = !FETCH[key] || !opts.dedupe;
                            callbackSafeguard = function callbackSafeguard() {
                                if (IS_REACT_LEGACY) {
                                    return !unmountedRef.current && key === keyRef.current && initialMountedRef.current;
                                }
                                return key === keyRef.current;
                            };
                            finalState = {
                                isValidating: false,
                                isLoading: false
                            };
                            finishRequestAndUpdateState = function finishRequestAndUpdateState() {
                                setCache(finalState);
                            };
                            cleanupState = function cleanupState() {
                                var requestInfo = FETCH[key];
                                if (requestInfo && requestInfo[1] === startAt) {
                                    delete FETCH[key];
                                }
                            };
                            initialState = {
                                isValidating: true
                            };
                            if (isUndefined(getCache().data)) {
                                initialState.isLoading = true;
                            }
                            _context.prev = 12;
                            if (shouldStartNewRequest) {
                                setCache(initialState);
                                if (config.loadingTimeout && isUndefined(getCache().data)) {
                                    setTimeout(function () {
                                        if (loading && callbackSafeguard()) {
                                            getConfig().onLoadingSlow(key, config);
                                        }
                                    }, config.loadingTimeout);
                                }
                                FETCH[key] = [currentFetcher(fnArg), getTimestamp()];
                            }
                            _FETCH$key = _slicedToArray$1(FETCH[key], 2);
                            newData = _FETCH$key[0];
                            startAt = _FETCH$key[1];
                            _context.next = 19;
                            return newData;
                        case 19:
                            newData = _context.sent;
                            if (shouldStartNewRequest) {
                                setTimeout(cleanupState, config.dedupingInterval);
                            }
                            if (!(!FETCH[key] || FETCH[key][1] !== startAt)) {
                                _context.next = 24;
                                break;
                            }
                            if (shouldStartNewRequest) {
                                if (callbackSafeguard()) {
                                    getConfig().onDiscarded(key);
                                }
                            }
                            return _context.abrupt("return", false);
                        case 24:
                            finalState.error = UNDEFINED;
                            mutationInfo = MUTATION[key];
                            if (!(!isUndefined(mutationInfo) && (startAt <= mutationInfo[0] || startAt <= mutationInfo[1] || mutationInfo[1] === 0))) {
                                _context.next = 30;
                                break;
                            }
                            finishRequestAndUpdateState();
                            if (shouldStartNewRequest) {
                                if (callbackSafeguard()) {
                                    getConfig().onDiscarded(key);
                                }
                            }
                            return _context.abrupt("return", false);
                        case 30:
                            cacheData = getCache().data;
                            finalState.data = compare(cacheData, newData) ? cacheData : newData;
                            if (shouldStartNewRequest) {
                                if (callbackSafeguard()) {
                                    getConfig().onSuccess(newData, key, config);
                                }
                            }
                            _context.next = 41;
                            break;
                        case 35:
                            _context.prev = 35;
                            _context.t0 = _context["catch"](12);
                            cleanupState();
                            currentConfig = getConfig();
                            shouldRetryOnError = currentConfig.shouldRetryOnError;
                            if (!currentConfig.isPaused()) {
                                finalState.error = _context.t0;
                                if (shouldStartNewRequest && callbackSafeguard()) {
                                    currentConfig.onError(_context.t0, key, currentConfig);
                                    if (shouldRetryOnError === true || isFunction$1(shouldRetryOnError) && shouldRetryOnError(_context.t0)) {
                                        if (isActive()) {
                                            currentConfig.onErrorRetry(_context.t0, key, currentConfig, function (_opts) {
                                                var revalidators = EVENT_REVALIDATORS[key];
                                                if (revalidators && revalidators[0]) {
                                                    revalidators[0](constants.ERROR_REVALIDATE_EVENT, _opts);
                                                }
                                            }, {
                                                retryCount: (opts.retryCount || 0) + 1,
                                                dedupe: true
                                            });
                                        }
                                    }
                                }
                            }
                        case 41:
                            loading = false;
                            finishRequestAndUpdateState();
                            return _context.abrupt("return", true);
                        case 44:
                        case "end":
                            return _context.stop();
                    }
            }, _callee, null, [[12, 35]]);
        }));
        return function (_x) {
            return _ref3.apply(this, arguments);
        };
    }(), [key, cache]);
    var boundMutate = T$2(function () {
        for (var _len4 = arguments.length, args = new Array(_len4), _key5 = 0; _key5 < _len4; _key5++) {
            args[_key5] = arguments[_key5];
        }
        return internalMutate.apply(void 0, [cache, keyRef.current].concat(args));
    }, []);
    useIsomorphicLayoutEffect(function () {
        fetcherRef.current = fetcher;
        configRef.current = config;
        if (!isUndefined(cachedData)) {
            laggyDataRef.current = cachedData;
        }
    });
    useIsomorphicLayoutEffect(function () {
        if (!key)
            return;
        var softRevalidate = revalidate.bind(UNDEFINED, WITH_DEDUPE);
        var nextFocusRevalidatedAt = 0;
        var onRevalidate = function onRevalidate(type) {
            var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            if (type == constants.FOCUS_EVENT) {
                var now = Date.now();
                if (getConfig().revalidateOnFocus && now > nextFocusRevalidatedAt && isActive()) {
                    nextFocusRevalidatedAt = now + getConfig().focusThrottleInterval;
                    softRevalidate();
                }
            }
            else if (type == constants.RECONNECT_EVENT) {
                if (getConfig().revalidateOnReconnect && isActive()) {
                    softRevalidate();
                }
            }
            else if (type == constants.MUTATE_EVENT) {
                return revalidate();
            }
            else if (type == constants.ERROR_REVALIDATE_EVENT) {
                return revalidate(opts);
            }
            return;
        };
        var unsubEvents = subscribeCallback(key, EVENT_REVALIDATORS, onRevalidate);
        unmountedRef.current = false;
        keyRef.current = key;
        initialMountedRef.current = true;
        setCache({
            _k: fnArg
        });
        if (shouldDoInitialRevalidation) {
            if (isUndefined(data) || IS_SERVER) {
                softRevalidate();
            }
            else {
                rAF(softRevalidate);
            }
        }
        return function () {
            unmountedRef.current = true;
            unsubEvents();
        };
    }, [key]);
    useIsomorphicLayoutEffect(function () {
        var timer;
        function next() {
            var interval = isFunction$1(refreshInterval) ? refreshInterval(data) : refreshInterval;
            if (interval && timer !== -1) {
                timer = setTimeout(execute, interval);
            }
        }
        function execute() {
            if (!getCache().error && (refreshWhenHidden || getConfig().isVisible()) && (refreshWhenOffline || getConfig().isOnline())) {
                revalidate(WITH_DEDUPE).then(next);
            }
            else {
                next();
            }
        }
        next();
        return function () {
            if (timer) {
                clearTimeout(timer);
                timer = -1;
            }
        };
    }, [refreshInterval, refreshWhenHidden, refreshWhenOffline, key]);
    x$4(returnedData);
    if (suspense && isUndefined(data) && key) {
        if (!IS_REACT_LEGACY && IS_SERVER) {
            throw new Error('Fallback data is required when using suspense in SSR.');
        }
        fetcherRef.current = fetcher;
        configRef.current = config;
        unmountedRef.current = false;
        throw isUndefined(error) ? revalidate(WITH_DEDUPE) : error;
    }
    return {
        mutate: boundMutate,
        get data() {
            stateDependencies.data = true;
            return returnedData;
        },
        get error() {
            stateDependencies.error = true;
            return error;
        },
        get isValidating() {
            stateDependencies.isValidating = true;
            return isValidating;
        },
        get isLoading() {
            stateDependencies.isLoading = true;
            return isLoading;
        }
    };
};
var useSWR = withArgs(useSWRHandler);
var extractErrorMessage = function extractErrorMessage(error) {
    if (error && _typeof$5(error) === 'object') {
        if ('error_message' in error && typeof error.error_message === 'string') {
            return error.error_message;
        }
        if ('message' in error && typeof error.message === 'string') {
            return error.message;
        }
    }
};

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray2(o)) || allowArrayLike && o && typeof o.length === "number") {
        if (it)
            o = it;
        var i = 0;
        var F = function F() { };
        return { s: F, n: function n() { if (i >= o.length)
                return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
} var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try {
        if (!normalCompletion && it["return"] != null)
            it["return"]();
    }
    finally {
        if (didErr)
            throw err;
    } } }; }
function _toConsumableArray2(arr) { return _arrayWithoutHoles2(arr) || _iterableToArray2(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread2(); }
function _nonIterableSpread2() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray2(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter); }
function _arrayWithoutHoles2(arr) { if (Array.isArray(arr))
    return _arrayLikeToArray2(arr); }
function _regeneratorRuntime() {
    _regeneratorRuntime = function _regeneratorRuntime() { return e; };
    var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
    function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; }
    try {
        define({}, "");
    }
    catch (t) {
        define = function define(t, e, r) { return t[e] = r; };
    }
    function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; }
    function tryCatch(t, e, r) { try {
        return { type: "normal", arg: t.call(e, r) };
    }
    catch (t) {
        return { type: "throw", arg: t };
    } }
    e.wrap = wrap;
    var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {};
    function Generator() { }
    function GeneratorFunction() { }
    function GeneratorFunctionPrototype() { }
    var p = {};
    define(p, a, function () { return this; });
    var d = Object.getPrototypeOf, v = d && d(d(values([])));
    v && v !== r && n.call(v, a) && (p = v);
    var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
    function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); }
    function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) {
        var u = c.arg, h = u.value;
        return h && "object" == _typeof2(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); });
    } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); }
    function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f)
        throw new Error("Generator is already running"); if (o === s) {
        if ("throw" === i)
            throw a;
        return { value: t, done: !0 };
    } for (n.method = i, n.arg = a;;) {
        var c = n.delegate;
        if (c) {
            var u = maybeInvokeDelegate(c, n);
            if (u) {
                if (u === y)
                    continue;
                return u;
            }
        }
        if ("next" === n.method)
            n.sent = n._sent = n.arg;
        else if ("throw" === n.method) {
            if (o === h)
                throw o = s, n.arg;
            n.dispatchException(n.arg);
        }
        else
            "return" === n.method && n.abrupt("return", n.arg);
        o = f;
        var p = tryCatch(e, r, n);
        if ("normal" === p.type) {
            if (o = n.done ? s : l, p.arg === y)
                continue;
            return { value: p.arg, done: n.done };
        }
        "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
    } }; }
    function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t)
        return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type)
        return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); }
    function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); }
    function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; }
    function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); }
    function values(e) { if (e || "" === e) {
        var r = e[a];
        if (r)
            return r.call(e);
        if ("function" == typeof e.next)
            return e;
        if (!isNaN(e.length)) {
            var o = -1, i = function next() { for (; ++o < e.length;)
                if (n.call(e, o))
                    return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; };
            return i.next = i;
        }
    } throw new TypeError(_typeof2(e) + " is not iterable"); }
    return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e)
        r.push(n); return r.reverse(), function next() { for (; r.length;) {
        var t = r.pop();
        if (t in e)
            return next.value = t, next.done = !1, next;
    } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e)
            for (var r in this)
                "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type)
            throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done)
            throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) {
            var i = this.tryEntries[o], a = i.completion;
            if ("root" === i.tryLoc)
                return handle("end");
            if (i.tryLoc <= this.prev) {
                var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc");
                if (c && u) {
                    if (this.prev < i.catchLoc)
                        return handle(i.catchLoc, !0);
                    if (this.prev < i.finallyLoc)
                        return handle(i.finallyLoc);
                }
                else if (c) {
                    if (this.prev < i.catchLoc)
                        return handle(i.catchLoc, !0);
                }
                else {
                    if (!u)
                        throw new Error("try statement without catch or finally");
                    if (this.prev < i.finallyLoc)
                        return handle(i.finallyLoc);
                }
            }
        } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) {
            var o = this.tryEntries[r];
            if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                var i = o;
                break;
            }
        } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type)
            throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) {
            var r = this.tryEntries[e];
            if (r.finallyLoc === t)
                return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
        } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) {
            var r = this.tryEntries[e];
            if (r.tryLoc === t) {
                var n = r.completion;
                if ("throw" === n.type) {
                    var o = n.arg;
                    resetTryEntry(r);
                }
                return o;
            }
        } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e;
}
function _slicedToArray2(arr, i) { return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i) || _unsupportedIterableToArray2(arr, i) || _nonIterableRest2(); }
function _nonIterableRest2() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray2(o, minLen) { if (!o)
    return; if (typeof o === "string")
    return _arrayLikeToArray2(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor)
    n = o.constructor.name; if (n === "Map" || n === "Set")
    return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray2(o, minLen); }
function _arrayLikeToArray2(arr, len) { if (len == null || len > arr.length)
    len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit2(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) {
    var e, n, i, u, a = [], f = !0, o = !1;
    try {
        if (i = (t = t.call(r)).next, 0 === l) {
            if (Object(t) !== t)
                return;
            f = !1;
        }
        else
            for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0)
                ;
    }
    catch (r) {
        o = !0, n = r;
    }
    finally {
        try {
            if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u))
                return;
        }
        finally {
            if (o)
                throw n;
        }
    }
    return a;
} }
function _arrayWithHoles2(arr) { if (Array.isArray(arr))
    return arr; }
function _defineProperty2(obj, key, value) { key = _toPropertyKey(key); if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
}
else {
    obj[key] = value;
} return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof2(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof2(t) || !t)
    return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof2(i))
        return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
} return ("string" === r ? String : Number)(t); }
function _typeof2(o) {
    "@babel/helpers - typeof";
    return _typeof2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof2(o);
}
var makeAdminPortalComponentMountFn = function makeAdminPortalComponentMountFn(component, webComponentName, mountFunctionName) { var WebComponent = CreateSSRSafeWebComponent(component, webComponentName); return function (options) { var _a; var client = options.client, element = options.element; if (!client) {
    throw new Error('A Stytch B2B UI client must be provided.');
} var targetParentDomNode = typeof element === 'string' ? document.querySelector(element) : element; if (!targetParentDomNode) {
    if (typeof element === 'string') {
        throw new Error("The selector you specified (".concat(element, ") applies to no DOM elements that are currently on the page. Make sure the element exists on the page before calling ").concat(mountFunctionName, "()."));
    }
    throw new Error("The element you provided is not a valid DOM element. Make sure the element exists on the page before calling ".concat(mountFunctionName, "()."));
} if (((_a = targetParentDomNode.firstChild) === null || _a === void 0 ? void 0 : _a.nodeName.toLowerCase()) === webComponentName.toLowerCase()) {
    var node = targetParentDomNode.firstChild;
    node.render(options);
    return;
} var loginElement = WebComponent(options); targetParentDomNode.appendChild(loginElement); }; };
var common = { black: '#000', white: '#fff' };
var red = { 50: '#ffebee', 100: '#ffcdd2', 200: '#ef9a9a', 300: '#e57373', 400: '#ef5350', 500: '#f44336', 600: '#e53935', 700: '#d32f2f', 800: '#c62828', 900: '#b71c1c', A100: '#ff8a80', A200: '#ff5252', A400: '#ff1744', A700: '#d50000' };
var pink = { 50: '#fce4ec', 100: '#f8bbd0', 200: '#f48fb1', 300: '#f06292', 400: '#ec407a', 500: '#e91e63', 600: '#d81b60', 700: '#c2185b', 800: '#ad1457', 900: '#880e4f', A100: '#ff80ab', A200: '#ff4081', A400: '#f50057', A700: '#c51162' };
var indigo = { 50: '#e8eaf6', 100: '#c5cae9', 200: '#9fa8da', 300: '#7986cb', 400: '#5c6bc0', 500: '#3f51b5', 600: '#3949ab', 700: '#303f9f', 800: '#283593', 900: '#1a237e', A100: '#8c9eff', A200: '#536dfe', A400: '#3d5afe', A700: '#304ffe' };
var blue = { 50: '#e3f2fd', 100: '#bbdefb', 200: '#90caf9', 300: '#64b5f6', 400: '#42a5f5', 500: '#2196f3', 600: '#1e88e5', 700: '#1976d2', 800: '#1565c0', 900: '#0d47a1', A100: '#82b1ff', A200: '#448aff', A400: '#2979ff', A700: '#2962ff' };
var green = { 50: '#e8f5e9', 100: '#c8e6c9', 200: '#a5d6a7', 300: '#81c784', 400: '#66bb6a', 500: '#4caf50', 600: '#43a047', 700: '#388e3c', 800: '#2e7d32', 900: '#1b5e20', A100: '#b9f6ca', A200: '#69f0ae', A400: '#00e676', A700: '#00c853' };
var orange = { 50: '#fff3e0', 100: '#ffe0b2', 200: '#ffcc80', 300: '#ffb74d', 400: '#ffa726', 500: '#ff9800', 600: '#fb8c00', 700: '#f57c00', 800: '#ef6c00', 900: '#e65100', A100: '#ffd180', A200: '#ffab40', A400: '#ff9100', A700: '#ff6d00' };
var grey = { 50: '#fafafa', 100: '#f5f5f5', 200: '#eeeeee', 300: '#e0e0e0', 400: '#bdbdbd', 500: '#9e9e9e', 600: '#757575', 700: '#616161', 800: '#424242', 900: '#212121', A100: '#d5d5d5', A200: '#aaaaaa', A400: '#303030', A700: '#616161' };
function _extends$5() { _extends$5 = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
        }
    }
} return target; }; return _extends$5.apply(this, arguments); }
function _typeof$4(o) {
    "@babel/helpers - typeof";
    return _typeof$4 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof$4(o);
}
function isPlainObject(item) { return item && _typeof$4(item) === 'object' && item.constructor === Object; }
function deepmerge(target, source) { var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { clone: true }; var output = options.clone ? _extends$5({}, target) : target; if (isPlainObject(target) && isPlainObject(source)) {
    Object.keys(source).forEach(function (key) { if (key === '__proto__') {
        return;
    } if (isPlainObject(source[key]) && key in target) {
        output[key] = deepmerge(target[key], source[key], options);
    }
    else {
        output[key] = source[key];
    } });
} return output; }
function formatMuiErrorMessage(code) { var url = 'https://mui.com/production-error/?code=' + code; for (var i = 1; i < arguments.length; i += 1) {
    url += '&args[]=' + encodeURIComponent(arguments[i]);
} return 'Minified Material-UI error #' + code + '; visit ' + url + ' for the full message.'; }
function clamp(value) { var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1; return Math.min(Math.max(min, value), max); }
function hexToRgb(color) { color = color.substr(1); var re = new RegExp(".{1,".concat(color.length >= 6 ? 2 : 1, "}"), 'g'); var colors = color.match(re); if (colors && colors[0].length === 1) {
    colors = colors.map(function (n) { return n + n; });
} return colors ? "rgb".concat(colors.length === 4 ? 'a' : '', "(").concat(colors.map(function (n, index) { return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1000) / 1000; }).join(', '), ")") : ''; }
function hslToRgb(color) { color = decomposeColor(color); var _color = color, values = _color.values; var h = values[0]; var s = values[1] / 100; var l = values[2] / 100; var a = s * Math.min(l, 1 - l); var f = function f(n) { var k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (n + h / 30) % 12; return l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1); }; var type = 'rgb'; var rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)]; if (color.type === 'hsla') {
    type += 'a';
    rgb.push(values[3]);
} return recomposeColor({ type: type, values: rgb }); }
function decomposeColor(color) { if (color.type) {
    return color;
} if (color.charAt(0) === '#') {
    return decomposeColor(hexToRgb(color));
} var marker = color.indexOf('('); var type = color.substring(0, marker); if (['rgb', 'rgba', 'hsl', 'hsla'].indexOf(type) === -1) {
    throw new Error(formatMuiErrorMessage(3, color));
} var values = color.substring(marker + 1, color.length - 1).split(','); values = values.map(function (value) { return parseFloat(value); }); return { type: type, values: values }; }
function recomposeColor(color) { var type = color.type; var values = color.values; if (type.indexOf('rgb') !== -1) {
    values = values.map(function (n, i) { return i < 3 ? parseInt(n, 10) : n; });
}
else if (type.indexOf('hsl') !== -1) {
    values[1] = "".concat(values[1], "%");
    values[2] = "".concat(values[2], "%");
} return "".concat(type, "(").concat(values.join(', '), ")"); }
function getContrastRatio(foreground, background) { var lumA = getLuminance(foreground); var lumB = getLuminance(background); return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05); }
function getLuminance(color) { color = decomposeColor(color); var rgb = color.type === 'hsl' ? decomposeColor(hslToRgb(color)).values : color.values; rgb = rgb.map(function (val) { val /= 255; return val <= 0.03928 ? val / 12.92 : Math.pow((val + 0.055) / 1.055, 2.4); }); return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3)); }
function emphasize(color) { var coefficient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.15; return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient); }
function alpha(color, value) { color = decomposeColor(color); value = clamp(value); if (color.type === 'rgb' || color.type === 'hsl') {
    color.type += 'a';
} color.values[3] = value; return recomposeColor(color); }
function darken(color, coefficient) { color = decomposeColor(color); coefficient = clamp(coefficient); if (color.type.indexOf('hsl') !== -1) {
    color.values[2] *= 1 - coefficient;
}
else if (color.type.indexOf('rgb') !== -1) {
    for (var i = 0; i < 3; i += 1) {
        color.values[i] *= 1 - coefficient;
    }
} return recomposeColor(color); }
function lighten(color, coefficient) { color = decomposeColor(color); coefficient = clamp(coefficient); if (color.type.indexOf('hsl') !== -1) {
    color.values[2] += (100 - color.values[2]) * coefficient;
}
else if (color.type.indexOf('rgb') !== -1) {
    for (var i = 0; i < 3; i += 1) {
        color.values[i] += (255 - color.values[i]) * coefficient;
    }
} return recomposeColor(color); }
function _typeof$3(o) {
    "@babel/helpers - typeof";
    return _typeof$3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof$3(o);
}
function toPrimitive$1(t, r) { if ("object" != _typeof$3(t) || !t)
    return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof$3(i))
        return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
} return ("string" === r ? String : Number)(t); }
function toPropertyKey$1(t) { var i = toPrimitive$1(t, "string"); return "symbol" == _typeof$3(i) ? i : i + ""; }
function _defineProperty(obj, key, value) { key = toPropertyKey$1(key); if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
}
else {
    obj[key] = value;
} return obj; }
function _objectWithoutPropertiesLoose$3(source, excluded) { if (source == null)
    return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
        continue;
    target[key] = source[key];
} return target; }
function _objectWithoutProperties$2(source, excluded) { if (source == null)
    return {}; var target = _objectWithoutPropertiesLoose$3(source, excluded); var key, i; if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0)
            continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key))
            continue;
        target[key] = source[key];
    }
} return target; }
function _extends$4() { _extends$4 = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
        }
    }
} return target; }; return _extends$4.apply(this, arguments); }
var keys = ['xs', 'sm', 'md', 'lg', 'xl'];
function createBreakpoints(breakpoints) { var _breakpoints$values = breakpoints.values, values = _breakpoints$values === void 0 ? { xs: 0, sm: 600, md: 960, lg: 1280, xl: 1920 } : _breakpoints$values, _breakpoints$unit = breakpoints.unit, unit = _breakpoints$unit === void 0 ? 'px' : _breakpoints$unit, _breakpoints$step = breakpoints.step, step = _breakpoints$step === void 0 ? 5 : _breakpoints$step, other = _objectWithoutProperties$2(breakpoints, ["values", "unit", "step"]); function up(key) { var value = typeof values[key] === 'number' ? values[key] : key; return "@media (min-width:".concat(value).concat(unit, ")"); } function down(key) { var endIndex = keys.indexOf(key) + 1; var upperbound = values[keys[endIndex]]; if (endIndex === keys.length) {
    return up('xs');
} var value = typeof upperbound === 'number' && endIndex > 0 ? upperbound : key; return "@media (max-width:".concat(value - step / 100).concat(unit, ")"); } function between(start, end) { var endIndex = keys.indexOf(end); if (endIndex === keys.length - 1) {
    return up(start);
} return "@media (min-width:".concat(typeof values[start] === 'number' ? values[start] : start).concat(unit, ") and ") + "(max-width:".concat((endIndex !== -1 && typeof values[keys[endIndex + 1]] === 'number' ? values[keys[endIndex + 1]] : end) - step / 100).concat(unit, ")"); } function only(key) { return between(key, key); } function width(key) { return values[key]; } return _extends$4({ keys: keys, values: values, up: up, down: down, between: between, only: only, width: width }, other); }
function createMixins(breakpoints, spacing, mixins) { var _toolbar; return _extends$4({ gutters: function gutters() { var styles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; console.warn(['Material-UI: theme.mixins.gutters() is deprecated.', 'You can use the source of the mixin directly:', "\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3),\n      },\n      "].join('\n')); return _extends$4({ paddingLeft: spacing(2), paddingRight: spacing(2) }, styles, _defineProperty({}, breakpoints.up('sm'), _extends$4({ paddingLeft: spacing(3), paddingRight: spacing(3) }, styles[breakpoints.up('sm')]))); }, toolbar: (_toolbar = { minHeight: 56 }, _defineProperty(_toolbar, "".concat(breakpoints.up('xs'), " and (orientation: landscape)"), { minHeight: 48 }), _defineProperty(_toolbar, breakpoints.up('sm'), { minHeight: 64 }), _toolbar) }, mixins); }
var light = { text: { primary: 'rgba(0, 0, 0, 0.87)', secondary: 'rgba(0, 0, 0, 0.54)', disabled: 'rgba(0, 0, 0, 0.38)', hint: 'rgba(0, 0, 0, 0.38)' }, divider: 'rgba(0, 0, 0, 0.12)', background: { paper: common.white, "default": grey[50] }, action: { active: 'rgba(0, 0, 0, 0.54)', hover: 'rgba(0, 0, 0, 0.04)', hoverOpacity: 0.04, selected: 'rgba(0, 0, 0, 0.08)', selectedOpacity: 0.08, disabled: 'rgba(0, 0, 0, 0.26)', disabledBackground: 'rgba(0, 0, 0, 0.12)', disabledOpacity: 0.38, focus: 'rgba(0, 0, 0, 0.12)', focusOpacity: 0.12, activatedOpacity: 0.12 } };
var dark = { text: { primary: common.white, secondary: 'rgba(255, 255, 255, 0.7)', disabled: 'rgba(255, 255, 255, 0.5)', hint: 'rgba(255, 255, 255, 0.5)', icon: 'rgba(255, 255, 255, 0.5)' }, divider: 'rgba(255, 255, 255, 0.12)', background: { paper: grey[800], "default": '#303030' }, action: { active: common.white, hover: 'rgba(255, 255, 255, 0.08)', hoverOpacity: 0.08, selected: 'rgba(255, 255, 255, 0.16)', selectedOpacity: 0.16, disabled: 'rgba(255, 255, 255, 0.3)', disabledBackground: 'rgba(255, 255, 255, 0.12)', disabledOpacity: 0.38, focus: 'rgba(255, 255, 255, 0.12)', focusOpacity: 0.12, activatedOpacity: 0.24 } };
function addLightOrDark(intent, direction, shade, tonalOffset) { var tonalOffsetLight = tonalOffset.light || tonalOffset; var tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5; if (!intent[direction]) {
    if (intent.hasOwnProperty(shade)) {
        intent[direction] = intent[shade];
    }
    else if (direction === 'light') {
        intent.light = lighten(intent.main, tonalOffsetLight);
    }
    else if (direction === 'dark') {
        intent.dark = darken(intent.main, tonalOffsetDark);
    }
} }
function createPalette(palette) { var _palette$primary = palette.primary, primary = _palette$primary === void 0 ? { light: indigo[300], main: indigo[500], dark: indigo[700] } : _palette$primary, _palette$secondary = palette.secondary, secondary = _palette$secondary === void 0 ? { light: pink.A200, main: pink.A400, dark: pink.A700 } : _palette$secondary, _palette$error = palette.error, error = _palette$error === void 0 ? { light: red[300], main: red[500], dark: red[700] } : _palette$error, _palette$warning = palette.warning, warning = _palette$warning === void 0 ? { light: orange[300], main: orange[500], dark: orange[700] } : _palette$warning, _palette$info = palette.info, info = _palette$info === void 0 ? { light: blue[300], main: blue[500], dark: blue[700] } : _palette$info, _palette$success = palette.success, success = _palette$success === void 0 ? { light: green[300], main: green[500], dark: green[700] } : _palette$success, _palette$type = palette.type, type = _palette$type === void 0 ? 'light' : _palette$type, _palette$contrastThre = palette.contrastThreshold, contrastThreshold = _palette$contrastThre === void 0 ? 3 : _palette$contrastThre, _palette$tonalOffset = palette.tonalOffset, tonalOffset = _palette$tonalOffset === void 0 ? 0.2 : _palette$tonalOffset, other = _objectWithoutProperties$2(palette, ["primary", "secondary", "error", "warning", "info", "success", "type", "contrastThreshold", "tonalOffset"]); function getContrastText(background) { var contrastText = getContrastRatio(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary; return contrastText; } var augmentColor = function augmentColor(color) { var mainShade = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500; var lightShade = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 300; var darkShade = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 700; color = _extends$4({}, color); if (!color.main && color[mainShade]) {
    color.main = color[mainShade];
} if (!color.main) {
    throw new Error(formatMuiErrorMessage(4, mainShade));
} if (typeof color.main !== 'string') {
    throw new Error(formatMuiErrorMessage(5, JSON.stringify(color.main)));
} addLightOrDark(color, 'light', lightShade, tonalOffset); addLightOrDark(color, 'dark', darkShade, tonalOffset); if (!color.contrastText) {
    color.contrastText = getContrastText(color.main);
} return color; }; var types = { dark: dark, light: light }; var paletteOutput = deepmerge(_extends$4({ common: common, type: type, primary: augmentColor(primary), secondary: augmentColor(secondary, 'A400', 'A200', 'A700'), error: augmentColor(error), warning: augmentColor(warning), info: augmentColor(info), success: augmentColor(success), grey: grey, contrastThreshold: contrastThreshold, getContrastText: getContrastText, augmentColor: augmentColor, tonalOffset: tonalOffset }, types[type]), other); return paletteOutput; }
function round$1(value) { return Math.round(value * 1e5) / 1e5; }
function roundWithDeprecationWarning(value) { return round$1(value); }
var caseAllCaps = { textTransform: 'uppercase' };
var defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';
function createTypography(palette, typography) { var _ref = typeof typography === 'function' ? typography(palette) : typography, _ref$fontFamily = _ref.fontFamily, fontFamily = _ref$fontFamily === void 0 ? defaultFontFamily : _ref$fontFamily, _ref$fontSize = _ref.fontSize, fontSize = _ref$fontSize === void 0 ? 14 : _ref$fontSize, _ref$fontWeightLight = _ref.fontWeightLight, fontWeightLight = _ref$fontWeightLight === void 0 ? 300 : _ref$fontWeightLight, _ref$fontWeightRegula = _ref.fontWeightRegular, fontWeightRegular = _ref$fontWeightRegula === void 0 ? 400 : _ref$fontWeightRegula, _ref$fontWeightMedium = _ref.fontWeightMedium, fontWeightMedium = _ref$fontWeightMedium === void 0 ? 500 : _ref$fontWeightMedium, _ref$fontWeightBold = _ref.fontWeightBold, fontWeightBold = _ref$fontWeightBold === void 0 ? 700 : _ref$fontWeightBold, _ref$htmlFontSize = _ref.htmlFontSize, htmlFontSize = _ref$htmlFontSize === void 0 ? 16 : _ref$htmlFontSize, allVariants = _ref.allVariants, pxToRem2 = _ref.pxToRem, other = _objectWithoutProperties$2(_ref, ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "fontWeightBold", "htmlFontSize", "allVariants", "pxToRem"]); var coef = fontSize / 14; var pxToRem = pxToRem2 || function (size) { return "".concat(size / htmlFontSize * coef, "rem"); }; var buildVariant = function buildVariant(fontWeight, size, lineHeight, letterSpacing, casing) { return _extends$4({ fontFamily: fontFamily, fontWeight: fontWeight, fontSize: pxToRem(size), lineHeight: lineHeight }, fontFamily === defaultFontFamily ? { letterSpacing: "".concat(round$1(letterSpacing / size), "em") } : {}, casing, allVariants); }; var variants = { h1: buildVariant(fontWeightLight, 96, 1.167, -1.5), h2: buildVariant(fontWeightLight, 60, 1.2, -0.5), h3: buildVariant(fontWeightRegular, 48, 1.167, 0), h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25), h5: buildVariant(fontWeightRegular, 24, 1.334, 0), h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15), subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15), subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1), body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15), body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15), button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps), caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4), overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps) }; return deepmerge(_extends$4({ htmlFontSize: htmlFontSize, pxToRem: pxToRem, round: roundWithDeprecationWarning, fontFamily: fontFamily, fontSize: fontSize, fontWeightLight: fontWeightLight, fontWeightRegular: fontWeightRegular, fontWeightMedium: fontWeightMedium, fontWeightBold: fontWeightBold }, variants), other, { clone: false }); }
var shadowKeyUmbraOpacity = 0.2;
var shadowKeyPenumbraOpacity = 0.14;
var shadowAmbientShadowOpacity = 0.12;
function createShadow() { return ["".concat(arguments.length <= 0 ? undefined : arguments[0], "px ").concat(arguments.length <= 1 ? undefined : arguments[1], "px ").concat(arguments.length <= 2 ? undefined : arguments[2], "px ").concat(arguments.length <= 3 ? undefined : arguments[3], "px rgba(0,0,0,").concat(shadowKeyUmbraOpacity, ")"), "".concat(arguments.length <= 4 ? undefined : arguments[4], "px ").concat(arguments.length <= 5 ? undefined : arguments[5], "px ").concat(arguments.length <= 6 ? undefined : arguments[6], "px ").concat(arguments.length <= 7 ? undefined : arguments[7], "px rgba(0,0,0,").concat(shadowKeyPenumbraOpacity, ")"), "".concat(arguments.length <= 8 ? undefined : arguments[8], "px ").concat(arguments.length <= 9 ? undefined : arguments[9], "px ").concat(arguments.length <= 10 ? undefined : arguments[10], "px ").concat(arguments.length <= 11 ? undefined : arguments[11], "px rgba(0,0,0,").concat(shadowAmbientShadowOpacity, ")")].join(','); }
var shadows = ['none', createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];
var shape = { borderRadius: 4 };
function createUnarySpacing(theme) { var themeSpacing = theme.spacing || 8; if (typeof themeSpacing === 'number') {
    return function (abs) { return themeSpacing * abs; };
} if (Array.isArray(themeSpacing)) {
    return function (abs) { return themeSpacing[abs]; };
} if (typeof themeSpacing === 'function') {
    return themeSpacing;
} return function () { return undefined; }; }
function createSpacing() { var spacingInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8; if (spacingInput.mui) {
    return spacingInput;
} var transform = createUnarySpacing({ spacing: spacingInput }); var spacing = function spacing() { for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
} if (args.length === 0) {
    return transform(1);
} if (args.length === 1) {
    return transform(args[0]);
} return args.map(function (argument) { if (typeof argument === 'string') {
    return argument;
} var output = transform(argument); return typeof output === 'number' ? "".concat(output, "px") : output; }).join(' '); }; Object.defineProperty(spacing, 'unit', { get: function get() { return spacingInput; } }); spacing.mui = true; return spacing; }
var easing = { easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)', easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)', easeIn: 'cubic-bezier(0.4, 0, 1, 1)', sharp: 'cubic-bezier(0.4, 0, 0.6, 1)' };
var duration = { shortest: 150, shorter: 200, "short": 250, standard: 300, complex: 375, enteringScreen: 225, leavingScreen: 195 };
function formatMs(milliseconds) { return "".concat(Math.round(milliseconds), "ms"); }
var transitions = { easing: easing, duration: duration, create: function create() { var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['all']; var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; var _options$duration = options.duration, durationOption = _options$duration === void 0 ? duration.standard : _options$duration, _options$easing = options.easing, easingOption = _options$easing === void 0 ? easing.easeInOut : _options$easing, _options$delay = options.delay, delay = _options$delay === void 0 ? 0 : _options$delay; _objectWithoutProperties$2(options, ["duration", "easing", "delay"]); return (Array.isArray(props) ? props : [props]).map(function (animatedProp) { return "".concat(animatedProp, " ").concat(typeof durationOption === 'string' ? durationOption : formatMs(durationOption), " ").concat(easingOption, " ").concat(typeof delay === 'string' ? delay : formatMs(delay)); }).join(','); }, getAutoHeightDuration: function getAutoHeightDuration(height) { if (!height) {
        return 0;
    } var constant = height / 36; return Math.round((4 + 15 * Math.pow(constant, 0.25) + constant / 5) * 10); } };
var zIndex = { mobileStepper: 1000, speedDial: 1050, appBar: 1100, drawer: 1200, modal: 1300, snackbar: 1400, tooltip: 1500 };
function createTheme() { var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; var _options$breakpoints = options.breakpoints, breakpointsInput = _options$breakpoints === void 0 ? {} : _options$breakpoints, _options$mixins = options.mixins, mixinsInput = _options$mixins === void 0 ? {} : _options$mixins, _options$palette = options.palette, paletteInput = _options$palette === void 0 ? {} : _options$palette, spacingInput = options.spacing, _options$typography = options.typography, typographyInput = _options$typography === void 0 ? {} : _options$typography, other = _objectWithoutProperties$2(options, ["breakpoints", "mixins", "palette", "spacing", "typography"]); var palette = createPalette(paletteInput); var breakpoints = createBreakpoints(breakpointsInput); var spacing = createSpacing(spacingInput); var muiTheme = deepmerge({ breakpoints: breakpoints, direction: 'ltr', mixins: createMixins(breakpoints, spacing, mixinsInput), overrides: {}, palette: palette, props: {}, shadows: shadows, typography: createTypography(palette, typographyInput), spacing: spacing, shape: shape, transitions: transitions, zIndex: zIndex }, other); for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
} muiTheme = args.reduce(function (acc, argument) { return deepmerge(acc, argument); }, muiTheme); return muiTheme; }
var hasSymbol = typeof Symbol === 'function' && Symbol["for"];
var nested = hasSymbol ? Symbol["for"]('mui.nested') : '__THEME_NESTED__';
var pseudoClasses = ['checked', 'disabled', 'error', 'focused', 'focusVisible', 'required', 'expanded', 'selected'];
function createGenerateClassName() { var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; var _options$disableGloba = options.disableGlobal, disableGlobal = _options$disableGloba === void 0 ? false : _options$disableGloba, _options$productionPr = options.productionPrefix, productionPrefix = _options$productionPr === void 0 ? 'jss' : _options$productionPr, _options$seed = options.seed, seed = _options$seed === void 0 ? '' : _options$seed; var seedPrefix = seed === '' ? '' : "".concat(seed, "-"); var ruleCounter = 0; var getNextCounterId = function getNextCounterId() { ruleCounter += 1; return ruleCounter; }; return function (rule, styleSheet) { var name = styleSheet.options.name; if (name && name.indexOf('Mui') === 0 && !styleSheet.options.link && !disableGlobal) {
    if (pseudoClasses.indexOf(rule.key) !== -1) {
        return "Mui-".concat(rule.key);
    }
    var prefix = "".concat(seedPrefix).concat(name, "-").concat(rule.key);
    if (!styleSheet.options.theme[nested] || seed !== '') {
        return prefix;
    }
    return "".concat(prefix, "-").concat(getNextCounterId());
} {
    return "".concat(seedPrefix).concat(productionPrefix).concat(getNextCounterId());
} }; }
function getThemeProps(params) { var theme = params.theme, name = params.name, props = params.props; if (!theme || !theme.props || !theme.props[name]) {
    return props;
} var defaultProps = theme.props[name]; var propName; for (propName in defaultProps) {
    if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
    }
} return props; }
function _extends$3() { _extends$3 = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
        }
    }
} return target; }; return _extends$3.apply(this, arguments); }
var _typeof$2 = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) { return _typeof2(obj); } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj); };
var isBrowser$1 = (typeof window === "undefined" ? "undefined" : _typeof$2(window)) === "object" && (typeof document === "undefined" ? "undefined" : _typeof$2(document)) === 'object' && document.nodeType === 9;
function _typeof$1(o) {
    "@babel/helpers - typeof";
    return _typeof$1 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof$1(o);
}
function toPrimitive(t, r) { if ("object" != _typeof$1(t) || !t)
    return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) {
    var i = e.call(t, r);
    if ("object" != _typeof$1(i))
        return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
} return String(t); }
function toPropertyKey(t) { var i = toPrimitive(t, "string"); return "symbol" == _typeof$1(i) ? i : String(i); }
function _defineProperties$1(target, props) { for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
        descriptor.writable = true;
    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);
} }
function _createClass$1(Constructor, protoProps, staticProps) { if (protoProps)
    _defineProperties$1(Constructor.prototype, protoProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
function _assertThisInitialized(self) { if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
} return self; }
function _objectWithoutPropertiesLoose$2(source, excluded) { if (source == null)
    return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
        continue;
    target[key] = source[key];
} return target; }
var plainObjectConstrurctor = {}.constructor;
function cloneStyle(style) { if (style == null || _typeof2(style) !== 'object')
    return style; if (Array.isArray(style))
    return style.map(cloneStyle); if (style.constructor !== plainObjectConstrurctor)
    return style; var newStyle = {}; for (var name in style) {
    newStyle[name] = cloneStyle(style[name]);
} return newStyle; }
function createRule(name, decl, options) { if (name === void 0) {
    name = 'unnamed';
} var jss = options.jss; var declCopy = cloneStyle(decl); var rule = jss.plugins.onCreateRule(name, declCopy, options); if (rule)
    return rule; if (name[0] === '@')
    ; return null; }
var join = function join(value, by) { var result = ''; for (var i = 0; i < value.length; i++) {
    if (value[i] === '!important')
        break;
    if (result)
        result += by;
    result += value[i];
} return result; };
var toCssValue = function toCssValue(value) { if (!Array.isArray(value))
    return value; var cssValue = ''; if (Array.isArray(value[0])) {
    for (var i = 0; i < value.length; i++) {
        if (value[i] === '!important')
            break;
        if (cssValue)
            cssValue += ', ';
        cssValue += join(value[i], ' ');
    }
}
else
    cssValue = join(value, ', '); if (value[value.length - 1] === '!important') {
    cssValue += ' !important';
} return cssValue; };
function getWhitespaceSymbols(options) { if (options && options.format === false) {
    return { linebreak: '', space: '' };
} return { linebreak: '\n', space: ' ' }; }
function indentStr(str, indent) { var result = ''; for (var index = 0; index < indent; index++) {
    result += '  ';
} return result + str; }
function toCss(selector, style, options) { if (options === void 0) {
    options = {};
} var result = ''; if (!style)
    return result; var _options = options, _options$indent = _options.indent, indent = _options$indent === void 0 ? 0 : _options$indent; var fallbacks = style.fallbacks; if (options.format === false) {
    indent = -Infinity;
} var _getWhitespaceSymbols = getWhitespaceSymbols(options), linebreak = _getWhitespaceSymbols.linebreak, space = _getWhitespaceSymbols.space; if (selector)
    indent++; if (fallbacks) {
    if (Array.isArray(fallbacks)) {
        for (var index = 0; index < fallbacks.length; index++) {
            var fallback = fallbacks[index];
            for (var prop in fallback) {
                var value = fallback[prop];
                if (value != null) {
                    if (result)
                        result += linebreak;
                    result += indentStr(prop + ":" + space + toCssValue(value) + ";", indent);
                }
            }
        }
    }
    else {
        for (var _prop in fallbacks) {
            var _value = fallbacks[_prop];
            if (_value != null) {
                if (result)
                    result += linebreak;
                result += indentStr(_prop + ":" + space + toCssValue(_value) + ";", indent);
            }
        }
    }
} for (var _prop2 in style) {
    var _value2 = style[_prop2];
    if (_value2 != null && _prop2 !== 'fallbacks') {
        if (result)
            result += linebreak;
        result += indentStr(_prop2 + ":" + space + toCssValue(_value2) + ";", indent);
    }
} if (!result && !options.allowEmpty)
    return result; if (!selector)
    return result; indent--; if (result)
    result = "" + linebreak + result + linebreak; return indentStr("" + selector + space + "{" + result, indent) + indentStr('}', indent); }
var escapeRegex = /([[\].#*$><+~=|^:(),"'`\s])/g;
var nativeEscape = typeof CSS !== 'undefined' && CSS.escape;
var escape = function escape(str) { return nativeEscape ? nativeEscape(str) : str.replace(escapeRegex, '\\$1'); };
var BaseStyleRule = /*#__PURE__*/ function () { function BaseStyleRule(key, style, options) { this.type = 'style'; this.isProcessed = false; var sheet = options.sheet, Renderer = options.Renderer; this.key = key; this.options = options; this.style = style; if (sheet)
    this.renderer = sheet.renderer;
else if (Renderer)
    this.renderer = new Renderer(); } var _proto = BaseStyleRule.prototype; _proto.prop = function prop(name, value, options) { if (value === undefined)
    return this.style[name]; var force = options ? options.force : false; if (!force && this.style[name] === value)
    return this; var newValue = value; if (!options || options.process !== false) {
    newValue = this.options.jss.plugins.onChangeValue(value, name, this);
} var isEmpty = newValue == null || newValue === false; var isDefined = (name in this.style); if (isEmpty && !isDefined && !force)
    return this; var remove = isEmpty && isDefined; if (remove)
    delete this.style[name];
else
    this.style[name] = newValue; if (this.renderable && this.renderer) {
    if (remove)
        this.renderer.removeProperty(this.renderable, name);
    else
        this.renderer.setProperty(this.renderable, name, newValue);
    return this;
} var sheet = this.options.sheet; if (sheet && sheet.attached)
    ; return this; }; return BaseStyleRule; }();
var StyleRule = /*#__PURE__*/ function (_BaseStyleRule) { _inheritsLoose(StyleRule, _BaseStyleRule); function StyleRule(key, style, options) { var _this; _this = _BaseStyleRule.call(this, key, style, options) || this; var selector = options.selector, scoped = options.scoped, sheet = options.sheet, generateId = options.generateId; if (selector) {
    _this.selectorText = selector;
}
else if (scoped !== false) {
    _this.id = generateId(_assertThisInitialized(_assertThisInitialized(_this)), sheet);
    _this.selectorText = "." + escape(_this.id);
} return _this; } var _proto2 = StyleRule.prototype; _proto2.applyTo = function applyTo(renderable) { var renderer = this.renderer; if (renderer) {
    var json = this.toJSON();
    for (var prop in json) {
        renderer.setProperty(renderable, prop, json[prop]);
    }
} return this; }; _proto2.toJSON = function toJSON() { var json = {}; for (var prop in this.style) {
    var value = this.style[prop];
    if (_typeof2(value) !== 'object')
        json[prop] = value;
    else if (Array.isArray(value))
        json[prop] = toCssValue(value);
} return json; }; _proto2.toString = function toString(options) { var sheet = this.options.sheet; var link = sheet ? sheet.options.link : false; var opts = link ? _extends$3({}, options, { allowEmpty: true }) : options; return toCss(this.selectorText, this.style, opts); }; _createClass$1(StyleRule, [{ key: "selector", set: function set(selector) { if (selector === this.selectorText)
            return; this.selectorText = selector; var renderer = this.renderer, renderable = this.renderable; if (!renderable || !renderer)
            return; var hasChanged = renderer.setSelector(renderable, selector); if (!hasChanged) {
            renderer.replaceRule(renderable, this);
        } }, get: function get() { return this.selectorText; } }]); return StyleRule; }(BaseStyleRule);
var pluginStyleRule = { onCreateRule: function onCreateRule(key, style, options) { if (key[0] === '@' || options.parent && options.parent.type === 'keyframes') {
        return null;
    } return new StyleRule(key, style, options); } };
var defaultToStringOptions = { indent: 1, children: true };
var atRegExp = /@([\w-]+)/;
var ConditionalRule = /*#__PURE__*/ function () { function ConditionalRule(key, styles, options) { this.type = 'conditional'; this.isProcessed = false; this.key = key; var atMatch = key.match(atRegExp); this.at = atMatch ? atMatch[1] : 'unknown'; this.query = options.name || "@" + this.at; this.options = options; this.rules = new RuleList(_extends$3({}, options, { parent: this })); for (var name in styles) {
    this.rules.add(name, styles[name]);
} this.rules.process(); } var _proto = ConditionalRule.prototype; _proto.getRule = function getRule(name) { return this.rules.get(name); }; _proto.indexOf = function indexOf(rule) { return this.rules.indexOf(rule); }; _proto.addRule = function addRule(name, style, options) { var rule = this.rules.add(name, style, options); if (!rule)
    return null; this.options.jss.plugins.onProcessRule(rule); return rule; }; _proto.replaceRule = function replaceRule(name, style, options) { var newRule = this.rules.replace(name, style, options); if (newRule)
    this.options.jss.plugins.onProcessRule(newRule); return newRule; }; _proto.toString = function toString(options) { if (options === void 0) {
    options = defaultToStringOptions;
} var _getWhitespaceSymbols = getWhitespaceSymbols(options), linebreak = _getWhitespaceSymbols.linebreak; if (options.indent == null)
    options.indent = defaultToStringOptions.indent; if (options.children == null)
    options.children = defaultToStringOptions.children; if (options.children === false) {
    return this.query + " {}";
} var children = this.rules.toString(options); return children ? this.query + " {" + linebreak + children + linebreak + "}" : ''; }; return ConditionalRule; }();
var keyRegExp = /@container|@media|@supports\s+/;
var pluginConditionalRule = { onCreateRule: function onCreateRule(key, styles, options) { return keyRegExp.test(key) ? new ConditionalRule(key, styles, options) : null; } };
var defaultToStringOptions$1 = { indent: 1, children: true };
var nameRegExp = /@keyframes\s+([\w-]+)/;
var KeyframesRule = /*#__PURE__*/ function () { function KeyframesRule(key, frames, options) { this.type = 'keyframes'; this.at = '@keyframes'; this.isProcessed = false; var nameMatch = key.match(nameRegExp); if (nameMatch && nameMatch[1]) {
    this.name = nameMatch[1];
}
else {
    this.name = 'noname';
} this.key = this.type + "-" + this.name; this.options = options; var scoped = options.scoped, sheet = options.sheet, generateId = options.generateId; this.id = scoped === false ? this.name : escape(generateId(this, sheet)); this.rules = new RuleList(_extends$3({}, options, { parent: this })); for (var name in frames) {
    this.rules.add(name, frames[name], _extends$3({}, options, { parent: this }));
} this.rules.process(); } var _proto = KeyframesRule.prototype; _proto.toString = function toString(options) { if (options === void 0) {
    options = defaultToStringOptions$1;
} var _getWhitespaceSymbols = getWhitespaceSymbols(options), linebreak = _getWhitespaceSymbols.linebreak; if (options.indent == null)
    options.indent = defaultToStringOptions$1.indent; if (options.children == null)
    options.children = defaultToStringOptions$1.children; if (options.children === false) {
    return this.at + " " + this.id + " {}";
} var children = this.rules.toString(options); if (children)
    children = "" + linebreak + children + linebreak; return this.at + " " + this.id + " {" + children + "}"; }; return KeyframesRule; }();
var keyRegExp$1 = /@keyframes\s+/;
var refRegExp$1 = /\$([\w-]+)/g;
var findReferencedKeyframe = function findReferencedKeyframe(val, keyframes) { if (typeof val === 'string') {
    return val.replace(refRegExp$1, function (match, name) { if (name in keyframes) {
        return keyframes[name];
    } return match; });
} return val; };
var replaceRef = function replaceRef(style, prop, keyframes) { var value = style[prop]; var refKeyframe = findReferencedKeyframe(value, keyframes); if (refKeyframe !== value) {
    style[prop] = refKeyframe;
} };
var pluginKeyframesRule = { onCreateRule: function onCreateRule(key, frames, options) { return typeof key === 'string' && keyRegExp$1.test(key) ? new KeyframesRule(key, frames, options) : null; }, onProcessStyle: function onProcessStyle(style, rule, sheet) { if (rule.type !== 'style' || !sheet)
        return style; if ('animation-name' in style)
        replaceRef(style, 'animation-name', sheet.keyframes); if ('animation' in style)
        replaceRef(style, 'animation', sheet.keyframes); return style; }, onChangeValue: function onChangeValue(val, prop, rule) { var sheet = rule.options.sheet; if (!sheet) {
        return val;
    } switch (prop) {
        case 'animation': return findReferencedKeyframe(val, sheet.keyframes);
        case 'animation-name': return findReferencedKeyframe(val, sheet.keyframes);
        default: return val;
    } } };
var KeyframeRule = /*#__PURE__*/ function (_BaseStyleRule) { _inheritsLoose(KeyframeRule, _BaseStyleRule); function KeyframeRule() { return _BaseStyleRule.apply(this, arguments) || this; } var _proto = KeyframeRule.prototype; _proto.toString = function toString(options) { var sheet = this.options.sheet; var link = sheet ? sheet.options.link : false; var opts = link ? _extends$3({}, options, { allowEmpty: true }) : options; return toCss(this.key, this.style, opts); }; return KeyframeRule; }(BaseStyleRule);
var pluginKeyframeRule = { onCreateRule: function onCreateRule(key, style, options) { if (options.parent && options.parent.type === 'keyframes') {
        return new KeyframeRule(key, style, options);
    } return null; } };
var FontFaceRule = /*#__PURE__*/ function () { function FontFaceRule(key, style, options) { this.type = 'font-face'; this.at = '@font-face'; this.isProcessed = false; this.key = key; this.style = style; this.options = options; } var _proto = FontFaceRule.prototype; _proto.toString = function toString(options) { var _getWhitespaceSymbols = getWhitespaceSymbols(options), linebreak = _getWhitespaceSymbols.linebreak; if (Array.isArray(this.style)) {
    var str = '';
    for (var index = 0; index < this.style.length; index++) {
        str += toCss(this.at, this.style[index]);
        if (this.style[index + 1])
            str += linebreak;
    }
    return str;
} return toCss(this.at, this.style, options); }; return FontFaceRule; }();
var keyRegExp$2 = /@font-face/;
var pluginFontFaceRule = { onCreateRule: function onCreateRule(key, style, options) { return keyRegExp$2.test(key) ? new FontFaceRule(key, style, options) : null; } };
var ViewportRule = /*#__PURE__*/ function () { function ViewportRule(key, style, options) { this.type = 'viewport'; this.at = '@viewport'; this.isProcessed = false; this.key = key; this.style = style; this.options = options; } var _proto = ViewportRule.prototype; _proto.toString = function toString(options) { return toCss(this.key, this.style, options); }; return ViewportRule; }();
var pluginViewportRule = { onCreateRule: function onCreateRule(key, style, options) { return key === '@viewport' || key === '@-ms-viewport' ? new ViewportRule(key, style, options) : null; } };
var SimpleRule = /*#__PURE__*/ function () { function SimpleRule(key, value, options) { this.type = 'simple'; this.isProcessed = false; this.key = key; this.value = value; this.options = options; } var _proto = SimpleRule.prototype; _proto.toString = function toString(options) { if (Array.isArray(this.value)) {
    var str = '';
    for (var index = 0; index < this.value.length; index++) {
        str += this.key + " " + this.value[index] + ";";
        if (this.value[index + 1])
            str += '\n';
    }
    return str;
} return this.key + " " + this.value + ";"; }; return SimpleRule; }();
var keysMap = { '@charset': true, '@import': true, '@namespace': true };
var pluginSimpleRule = { onCreateRule: function onCreateRule(key, value, options) { return key in keysMap ? new SimpleRule(key, value, options) : null; } };
var plugins$1 = [pluginStyleRule, pluginConditionalRule, pluginKeyframesRule, pluginKeyframeRule, pluginFontFaceRule, pluginViewportRule, pluginSimpleRule];
var defaultUpdateOptions = { process: true };
var forceUpdateOptions = { force: true, process: true };
var RuleList = /*#__PURE__*/ function () { function RuleList(options) { this.map = {}; this.raw = {}; this.index = []; this.counter = 0; this.options = options; this.classes = options.classes; this.keyframes = options.keyframes; } var _proto = RuleList.prototype; _proto.add = function add(name, decl, ruleOptions) { var _this$options = this.options, parent = _this$options.parent, sheet = _this$options.sheet, jss = _this$options.jss, Renderer = _this$options.Renderer, generateId = _this$options.generateId, scoped = _this$options.scoped; var options = _extends$3({ classes: this.classes, parent: parent, sheet: sheet, jss: jss, Renderer: Renderer, generateId: generateId, scoped: scoped, name: name, keyframes: this.keyframes, selector: undefined }, ruleOptions); var key = name; if (name in this.raw) {
    key = name + "-d" + this.counter++;
} this.raw[key] = decl; if (key in this.classes) {
    options.selector = "." + escape(this.classes[key]);
} var rule = createRule(key, decl, options); if (!rule)
    return null; this.register(rule); var index = options.index === undefined ? this.index.length : options.index; this.index.splice(index, 0, rule); return rule; }; _proto.replace = function replace(name, decl, ruleOptions) { var oldRule = this.get(name); var oldIndex = this.index.indexOf(oldRule); if (oldRule) {
    this.remove(oldRule);
} var options = ruleOptions; if (oldIndex !== -1)
    options = _extends$3({}, ruleOptions, { index: oldIndex }); return this.add(name, decl, options); }; _proto.get = function get(nameOrSelector) { return this.map[nameOrSelector]; }; _proto.remove = function remove(rule) { this.unregister(rule); delete this.raw[rule.key]; this.index.splice(this.index.indexOf(rule), 1); }; _proto.indexOf = function indexOf(rule) { return this.index.indexOf(rule); }; _proto.process = function process() { var plugins = this.options.jss.plugins; this.index.slice(0).forEach(plugins.onProcessRule, plugins); }; _proto.register = function register(rule) { this.map[rule.key] = rule; if (rule instanceof StyleRule) {
    this.map[rule.selector] = rule;
    if (rule.id)
        this.classes[rule.key] = rule.id;
}
else if (rule instanceof KeyframesRule && this.keyframes) {
    this.keyframes[rule.name] = rule.id;
} }; _proto.unregister = function unregister(rule) { delete this.map[rule.key]; if (rule instanceof StyleRule) {
    delete this.map[rule.selector];
    delete this.classes[rule.key];
}
else if (rule instanceof KeyframesRule) {
    delete this.keyframes[rule.name];
} }; _proto.update = function update() { var name; var data; var options; if (typeof (arguments.length <= 0 ? undefined : arguments[0]) === 'string') {
    name = arguments.length <= 0 ? undefined : arguments[0];
    data = arguments.length <= 1 ? undefined : arguments[1];
    options = arguments.length <= 2 ? undefined : arguments[2];
}
else {
    data = arguments.length <= 0 ? undefined : arguments[0];
    options = arguments.length <= 1 ? undefined : arguments[1];
    name = null;
} if (name) {
    this.updateOne(this.get(name), data, options);
}
else {
    for (var index = 0; index < this.index.length; index++) {
        this.updateOne(this.index[index], data, options);
    }
} }; _proto.updateOne = function updateOne(rule, data, options) { if (options === void 0) {
    options = defaultUpdateOptions;
} var _this$options2 = this.options, plugins = _this$options2.jss.plugins, sheet = _this$options2.sheet; if (rule.rules instanceof RuleList) {
    rule.rules.update(data, options);
    return;
} var style = rule.style; plugins.onUpdate(data, rule, sheet, options); if (options.process && style && style !== rule.style) {
    plugins.onProcessStyle(rule.style, rule, sheet);
    for (var prop in rule.style) {
        var nextValue = rule.style[prop];
        var prevValue = style[prop];
        if (nextValue !== prevValue) {
            rule.prop(prop, nextValue, forceUpdateOptions);
        }
    }
    for (var _prop in style) {
        var _nextValue = rule.style[_prop];
        var _prevValue = style[_prop];
        if (_nextValue == null && _nextValue !== _prevValue) {
            rule.prop(_prop, null, forceUpdateOptions);
        }
    }
} }; _proto.toString = function toString(options) { var str = ''; var sheet = this.options.sheet; var link = sheet ? sheet.options.link : false; var _getWhitespaceSymbols = getWhitespaceSymbols(options), linebreak = _getWhitespaceSymbols.linebreak; for (var index = 0; index < this.index.length; index++) {
    var rule = this.index[index];
    var css = rule.toString(options);
    if (!css && !link)
        continue;
    if (str)
        str += linebreak;
    str += css;
} return str; }; return RuleList; }();
var StyleSheet = /*#__PURE__*/ function () { function StyleSheet(styles, options) { this.attached = false; this.deployed = false; this.classes = {}; this.keyframes = {}; this.options = _extends$3({}, options, { sheet: this, parent: this, classes: this.classes, keyframes: this.keyframes }); if (options.Renderer) {
    this.renderer = new options.Renderer(this);
} this.rules = new RuleList(this.options); for (var name in styles) {
    this.rules.add(name, styles[name]);
} this.rules.process(); } var _proto = StyleSheet.prototype; _proto.attach = function attach() { if (this.attached)
    return this; if (this.renderer)
    this.renderer.attach(); this.attached = true; if (!this.deployed)
    this.deploy(); return this; }; _proto.detach = function detach() { if (!this.attached)
    return this; if (this.renderer)
    this.renderer.detach(); this.attached = false; return this; }; _proto.addRule = function addRule(name, decl, options) { var queue = this.queue; if (this.attached && !queue)
    this.queue = []; var rule = this.rules.add(name, decl, options); if (!rule)
    return null; this.options.jss.plugins.onProcessRule(rule); if (this.attached) {
    if (!this.deployed)
        return rule;
    if (queue)
        queue.push(rule);
    else {
        this.insertRule(rule);
        if (this.queue) {
            this.queue.forEach(this.insertRule, this);
            this.queue = undefined;
        }
    }
    return rule;
} this.deployed = false; return rule; }; _proto.replaceRule = function replaceRule(nameOrSelector, decl, options) { var oldRule = this.rules.get(nameOrSelector); if (!oldRule)
    return this.addRule(nameOrSelector, decl, options); var newRule = this.rules.replace(nameOrSelector, decl, options); if (newRule) {
    this.options.jss.plugins.onProcessRule(newRule);
} if (this.attached) {
    if (!this.deployed)
        return newRule;
    if (this.renderer) {
        if (!newRule) {
            this.renderer.deleteRule(oldRule);
        }
        else if (oldRule.renderable) {
            this.renderer.replaceRule(oldRule.renderable, newRule);
        }
    }
    return newRule;
} this.deployed = false; return newRule; }; _proto.insertRule = function insertRule(rule) { if (this.renderer) {
    this.renderer.insertRule(rule);
} }; _proto.addRules = function addRules(styles, options) { var added = []; for (var name in styles) {
    var rule = this.addRule(name, styles[name], options);
    if (rule)
        added.push(rule);
} return added; }; _proto.getRule = function getRule(nameOrSelector) { return this.rules.get(nameOrSelector); }; _proto.deleteRule = function deleteRule(name) { var rule = _typeof2(name) === 'object' ? name : this.rules.get(name); if (!rule || this.attached && !rule.renderable) {
    return false;
} this.rules.remove(rule); if (this.attached && rule.renderable && this.renderer) {
    return this.renderer.deleteRule(rule.renderable);
} return true; }; _proto.indexOf = function indexOf(rule) { return this.rules.indexOf(rule); }; _proto.deploy = function deploy() { if (this.renderer)
    this.renderer.deploy(); this.deployed = true; return this; }; _proto.update = function update() { var _this$rules; (_this$rules = this.rules).update.apply(_this$rules, arguments); return this; }; _proto.updateOne = function updateOne(rule, data, options) { this.rules.updateOne(rule, data, options); return this; }; _proto.toString = function toString(options) { return this.rules.toString(options); }; return StyleSheet; }();
var PluginsRegistry = /*#__PURE__*/ function () { function PluginsRegistry() { this.plugins = { internal: [], external: [] }; this.registry = {}; } var _proto = PluginsRegistry.prototype; _proto.onCreateRule = function onCreateRule(name, decl, options) { for (var i = 0; i < this.registry.onCreateRule.length; i++) {
    var rule = this.registry.onCreateRule[i](name, decl, options);
    if (rule)
        return rule;
} return null; }; _proto.onProcessRule = function onProcessRule(rule) { if (rule.isProcessed)
    return; var sheet = rule.options.sheet; for (var i = 0; i < this.registry.onProcessRule.length; i++) {
    this.registry.onProcessRule[i](rule, sheet);
} if (rule.style)
    this.onProcessStyle(rule.style, rule, sheet); rule.isProcessed = true; }; _proto.onProcessStyle = function onProcessStyle(style, rule, sheet) { for (var i = 0; i < this.registry.onProcessStyle.length; i++) {
    rule.style = this.registry.onProcessStyle[i](rule.style, rule, sheet);
} }; _proto.onProcessSheet = function onProcessSheet(sheet) { for (var i = 0; i < this.registry.onProcessSheet.length; i++) {
    this.registry.onProcessSheet[i](sheet);
} }; _proto.onUpdate = function onUpdate(data, rule, sheet, options) { for (var i = 0; i < this.registry.onUpdate.length; i++) {
    this.registry.onUpdate[i](data, rule, sheet, options);
} }; _proto.onChangeValue = function onChangeValue(value, prop, rule) { var processedValue = value; for (var i = 0; i < this.registry.onChangeValue.length; i++) {
    processedValue = this.registry.onChangeValue[i](processedValue, prop, rule);
} return processedValue; }; _proto.use = function use(newPlugin, options) { if (options === void 0) {
    options = { queue: 'external' };
} var plugins = this.plugins[options.queue]; if (plugins.indexOf(newPlugin) !== -1) {
    return;
} plugins.push(newPlugin); this.registry = [].concat(this.plugins.external, this.plugins.internal).reduce(function (registry, plugin) { for (var name in plugin) {
    if (name in registry) {
        registry[name].push(plugin[name]);
    }
} return registry; }, { onCreateRule: [], onProcessRule: [], onProcessStyle: [], onProcessSheet: [], onChangeValue: [], onUpdate: [] }); }; return PluginsRegistry; }();
var SheetsRegistry = /*#__PURE__*/ function () { function SheetsRegistry() { this.registry = []; } var _proto = SheetsRegistry.prototype; _proto.add = function add(sheet) { var registry = this.registry; var index = sheet.options.index; if (registry.indexOf(sheet) !== -1)
    return; if (registry.length === 0 || index >= this.index) {
    registry.push(sheet);
    return;
} for (var i = 0; i < registry.length; i++) {
    if (registry[i].options.index > index) {
        registry.splice(i, 0, sheet);
        return;
    }
} }; _proto.reset = function reset() { this.registry = []; }; _proto.remove = function remove(sheet) { var index = this.registry.indexOf(sheet); this.registry.splice(index, 1); }; _proto.toString = function toString(_temp) { var _ref = _temp === void 0 ? {} : _temp, attached = _ref.attached, options = _objectWithoutPropertiesLoose$2(_ref, ["attached"]); var _getWhitespaceSymbols = getWhitespaceSymbols(options), linebreak = _getWhitespaceSymbols.linebreak; var css = ''; for (var i = 0; i < this.registry.length; i++) {
    var sheet = this.registry[i];
    if (attached != null && sheet.attached !== attached) {
        continue;
    }
    if (css)
        css += linebreak;
    css += sheet.toString(options);
} return css; }; _createClass$1(SheetsRegistry, [{ key: "index", get: function get() { return this.registry.length === 0 ? 0 : this.registry[this.registry.length - 1].options.index; } }]); return SheetsRegistry; }();
var sheets = new SheetsRegistry();
var globalThis$1 = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' && window.Math === Math ? window : typeof self !== 'undefined' && self.Math === Math ? self : Function('return this')();
var ns = '2f1acc6c3a606b082e5eef5e54414ffb';
if (globalThis$1[ns] == null)
    globalThis$1[ns] = 0;
var moduleId = globalThis$1[ns]++;
var createGenerateId = function createGenerateId(options) { if (options === void 0) {
    options = {};
} var ruleCounter = 0; var generateId = function generateId(rule, sheet) { ruleCounter += 1; var jssId = ''; var prefix = ''; if (sheet) {
    if (sheet.options.classNamePrefix) {
        prefix = sheet.options.classNamePrefix;
    }
    if (sheet.options.jss.id != null) {
        jssId = String(sheet.options.jss.id);
    }
} if (options.minify) {
    return "" + (prefix || 'c') + moduleId + jssId + ruleCounter;
} return prefix + rule.key + "-" + moduleId + (jssId ? "-" + jssId : '') + "-" + ruleCounter; }; return generateId; };
var memoize = function memoize(fn) { var value; return function () { if (!value)
    value = fn(); return value; }; };
var getPropertyValue = function getPropertyValue(cssRule, prop) { try {
    if (cssRule.attributeStyleMap) {
        return cssRule.attributeStyleMap.get(prop);
    }
    return cssRule.style.getPropertyValue(prop);
}
catch (err) {
    return '';
} };
var setProperty = function setProperty(cssRule, prop, value) { try {
    var cssValue = value;
    if (Array.isArray(value)) {
        cssValue = toCssValue(value);
    }
    if (cssRule.attributeStyleMap) {
        cssRule.attributeStyleMap.set(prop, cssValue);
    }
    else {
        var indexOfImportantFlag = cssValue ? cssValue.indexOf('!important') : -1;
        var cssValueWithoutImportantFlag = indexOfImportantFlag > -1 ? cssValue.substr(0, indexOfImportantFlag - 1) : cssValue;
        cssRule.style.setProperty(prop, cssValueWithoutImportantFlag, indexOfImportantFlag > -1 ? 'important' : '');
    }
}
catch (err) {
    return false;
} return true; };
var removeProperty = function removeProperty(cssRule, prop) { try {
    if (cssRule.attributeStyleMap) {
        cssRule.attributeStyleMap["delete"](prop);
    }
    else {
        cssRule.style.removeProperty(prop);
    }
}
catch (err) { } };
var setSelector = function setSelector(cssRule, selectorText) { cssRule.selectorText = selectorText; return cssRule.selectorText === selectorText; };
var getHead = memoize(function () { return document.querySelector('head'); });
function findHigherSheet(registry, options) { for (var i = 0; i < registry.length; i++) {
    var sheet = registry[i];
    if (sheet.attached && sheet.options.index > options.index && sheet.options.insertionPoint === options.insertionPoint) {
        return sheet;
    }
} return null; }
function findHighestSheet(registry, options) { for (var i = registry.length - 1; i >= 0; i--) {
    var sheet = registry[i];
    if (sheet.attached && sheet.options.insertionPoint === options.insertionPoint) {
        return sheet;
    }
} return null; }
function findCommentNode(text) { var head = getHead(); for (var i = 0; i < head.childNodes.length; i++) {
    var node = head.childNodes[i];
    if (node.nodeType === 8 && node.nodeValue.trim() === text) {
        return node;
    }
} return null; }
function findPrevNode(options) { var registry = sheets.registry; if (registry.length > 0) {
    var sheet = findHigherSheet(registry, options);
    if (sheet && sheet.renderer) {
        return { parent: sheet.renderer.element.parentNode, node: sheet.renderer.element };
    }
    sheet = findHighestSheet(registry, options);
    if (sheet && sheet.renderer) {
        return { parent: sheet.renderer.element.parentNode, node: sheet.renderer.element.nextSibling };
    }
} var insertionPoint = options.insertionPoint; if (insertionPoint && typeof insertionPoint === 'string') {
    var comment = findCommentNode(insertionPoint);
    if (comment) {
        return { parent: comment.parentNode, node: comment.nextSibling };
    }
} return false; }
function insertStyle(style, options) { var insertionPoint = options.insertionPoint; var nextNode = findPrevNode(options); if (nextNode !== false && nextNode.parent) {
    nextNode.parent.insertBefore(style, nextNode.node);
    return;
} if (insertionPoint && typeof insertionPoint.nodeType === 'number') {
    var insertionPointElement = insertionPoint;
    var parentNode = insertionPointElement.parentNode;
    if (parentNode)
        parentNode.insertBefore(style, insertionPointElement.nextSibling);
    return;
} getHead().appendChild(style); }
var getNonce = memoize(function () { var node = document.querySelector('meta[property="csp-nonce"]'); return node ? node.getAttribute('content') : null; });
var _insertRule = function insertRule(container, rule, index) { try {
    if ('insertRule' in container) {
        container.insertRule(rule, index);
    }
    else if ('appendRule' in container) {
        container.appendRule(rule);
    }
}
catch (err) {
    return false;
} return container.cssRules[index]; };
var getValidRuleInsertionIndex = function getValidRuleInsertionIndex(container, index) { var maxIndex = container.cssRules.length; if (index === undefined || index > maxIndex) {
    return maxIndex;
} return index; };
var createStyle = function createStyle() { var el = document.createElement('style'); el.textContent = '\n'; return el; };
var DomRenderer = /*#__PURE__*/ function () { function DomRenderer(sheet) { this.getPropertyValue = getPropertyValue; this.setProperty = setProperty; this.removeProperty = removeProperty; this.setSelector = setSelector; this.hasInsertedRules = false; this.cssRules = []; if (sheet)
    sheets.add(sheet); this.sheet = sheet; var _ref = this.sheet ? this.sheet.options : {}, media = _ref.media, meta = _ref.meta, element = _ref.element; this.element = element || createStyle(); this.element.setAttribute('data-jss', ''); if (media)
    this.element.setAttribute('media', media); if (meta)
    this.element.setAttribute('data-meta', meta); var nonce = getNonce(); if (nonce)
    this.element.setAttribute('nonce', nonce); } var _proto = DomRenderer.prototype; _proto.attach = function attach() { if (this.element.parentNode || !this.sheet)
    return; insertStyle(this.element, this.sheet.options); var deployed = Boolean(this.sheet && this.sheet.deployed); if (this.hasInsertedRules && deployed) {
    this.hasInsertedRules = false;
    this.deploy();
} }; _proto.detach = function detach() { if (!this.sheet)
    return; var parentNode = this.element.parentNode; if (parentNode)
    parentNode.removeChild(this.element); if (this.sheet.options.link) {
    this.cssRules = [];
    this.element.textContent = '\n';
} }; _proto.deploy = function deploy() { var sheet = this.sheet; if (!sheet)
    return; if (sheet.options.link) {
    this.insertRules(sheet.rules);
    return;
} this.element.textContent = "\n" + sheet.toString() + "\n"; }; _proto.insertRules = function insertRules(rules, nativeParent) { for (var i = 0; i < rules.index.length; i++) {
    this.insertRule(rules.index[i], i, nativeParent);
} }; _proto.insertRule = function insertRule(rule, index, nativeParent) { if (nativeParent === void 0) {
    nativeParent = this.element.sheet;
} if (rule.rules) {
    var parent = rule;
    var latestNativeParent = nativeParent;
    if (rule.type === 'conditional' || rule.type === 'keyframes') {
        var _insertionIndex = getValidRuleInsertionIndex(nativeParent, index);
        latestNativeParent = _insertRule(nativeParent, parent.toString({ children: false }), _insertionIndex);
        if (latestNativeParent === false) {
            return false;
        }
        this.refCssRule(rule, _insertionIndex, latestNativeParent);
    }
    this.insertRules(parent.rules, latestNativeParent);
    return latestNativeParent;
} var ruleStr = rule.toString(); if (!ruleStr)
    return false; var insertionIndex = getValidRuleInsertionIndex(nativeParent, index); var nativeRule = _insertRule(nativeParent, ruleStr, insertionIndex); if (nativeRule === false) {
    return false;
} this.hasInsertedRules = true; this.refCssRule(rule, insertionIndex, nativeRule); return nativeRule; }; _proto.refCssRule = function refCssRule(rule, index, cssRule) { rule.renderable = cssRule; if (rule.options.parent instanceof StyleSheet) {
    this.cssRules.splice(index, 0, cssRule);
} }; _proto.deleteRule = function deleteRule(cssRule) { var sheet = this.element.sheet; var index = this.indexOf(cssRule); if (index === -1)
    return false; sheet.deleteRule(index); this.cssRules.splice(index, 1); return true; }; _proto.indexOf = function indexOf(cssRule) { return this.cssRules.indexOf(cssRule); }; _proto.replaceRule = function replaceRule(cssRule, rule) { var index = this.indexOf(cssRule); if (index === -1)
    return false; this.element.sheet.deleteRule(index); this.cssRules.splice(index, 1); return this.insertRule(rule, index); }; _proto.getRules = function getRules() { return this.element.sheet.cssRules; }; return DomRenderer; }();
var instanceCounter = 0;
var Jss = /*#__PURE__*/ function () { function Jss(options) { this.id = instanceCounter++; this.version = "10.10.0"; this.plugins = new PluginsRegistry(); this.options = { id: { minify: false }, createGenerateId: createGenerateId, Renderer: isBrowser$1 ? DomRenderer : null, plugins: [] }; this.generateId = createGenerateId({ minify: false }); for (var i = 0; i < plugins$1.length; i++) {
    this.plugins.use(plugins$1[i], { queue: 'internal' });
} this.setup(options); } var _proto = Jss.prototype; _proto.setup = function setup(options) { if (options === void 0) {
    options = {};
} if (options.createGenerateId) {
    this.options.createGenerateId = options.createGenerateId;
} if (options.id) {
    this.options.id = _extends$3({}, this.options.id, options.id);
} if (options.createGenerateId || options.id) {
    this.generateId = this.options.createGenerateId(this.options.id);
} if (options.insertionPoint != null)
    this.options.insertionPoint = options.insertionPoint; if ('Renderer' in options) {
    this.options.Renderer = options.Renderer;
} if (options.plugins)
    this.use.apply(this, options.plugins); return this; }; _proto.createStyleSheet = function createStyleSheet(styles, options) { if (options === void 0) {
    options = {};
} var _options = options, index = _options.index; if (typeof index !== 'number') {
    index = sheets.index === 0 ? 0 : sheets.index + 1;
} var sheet = new StyleSheet(styles, _extends$3({}, options, { jss: this, generateId: options.generateId || this.generateId, insertionPoint: this.options.insertionPoint, Renderer: this.options.Renderer, index: index })); this.plugins.onProcessSheet(sheet); return sheet; }; _proto.removeStyleSheet = function removeStyleSheet(sheet) { sheet.detach(); sheets.remove(sheet); return this; }; _proto.createRule = function createRule$1(name, style, options) { if (style === void 0) {
    style = {};
} if (options === void 0) {
    options = {};
} if (_typeof2(name) === 'object') {
    return this.createRule(undefined, name, style);
} var ruleOptions = _extends$3({}, options, { name: name, jss: this, Renderer: this.options.Renderer }); if (!ruleOptions.generateId)
    ruleOptions.generateId = this.generateId; if (!ruleOptions.classes)
    ruleOptions.classes = {}; if (!ruleOptions.keyframes)
    ruleOptions.keyframes = {}; var rule = createRule(name, style, ruleOptions); if (rule)
    this.plugins.onProcessRule(rule); return rule; }; _proto.use = function use() { var _this = this; for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {
    plugins[_key] = arguments[_key];
} plugins.forEach(function (plugin) { _this.plugins.use(plugin); }); return this; }; return Jss; }();
var createJss = function createJss(options) { return new Jss(options); };
var hasCSSTOMSupport = (typeof CSS === "undefined" ? "undefined" : _typeof2(CSS)) === 'object' && CSS != null && 'number' in CSS;
function getDynamicStyles(styles) { var to = null; for (var key in styles) {
    var value = styles[key];
    var type = _typeof2(value);
    if (type === 'function') {
        if (!to)
            to = {};
        to[key] = value;
    }
    else if (type === 'object' && value !== null && !Array.isArray(value)) {
        var extracted = getDynamicStyles(value);
        if (extracted) {
            if (!to)
                to = {};
            to[key] = extracted;
        }
    }
} return to; }
createJss();
var now = Date.now();
var fnValuesNs = "fnValues" + now;
var fnRuleNs = "fnStyle" + ++now;
var functionPlugin = function functionPlugin() { return { onCreateRule: function onCreateRule(name, decl, options) { if (typeof decl !== 'function')
        return null; var rule = createRule(name, {}, options); rule[fnRuleNs] = decl; return rule; }, onProcessStyle: function onProcessStyle(style, rule) { if (fnValuesNs in rule || fnRuleNs in rule)
        return style; var fnValues = {}; for (var prop in style) {
        var value = style[prop];
        if (typeof value !== 'function')
            continue;
        delete style[prop];
        fnValues[prop] = value;
    } rule[fnValuesNs] = fnValues; return style; }, onUpdate: function onUpdate(data, rule, sheet, options) { var styleRule = rule; var fnRule = styleRule[fnRuleNs]; if (fnRule) {
        styleRule.style = fnRule(data) || {};
    } var fnValues = styleRule[fnValuesNs]; if (fnValues) {
        for (var _prop in fnValues) {
            styleRule.prop(_prop, fnValues[_prop](data), options);
        }
    } } }; };
var at = '@global';
var atPrefix = '@global ';
var GlobalContainerRule = /*#__PURE__*/ function () { function GlobalContainerRule(key, styles, options) { this.type = 'global'; this.at = at; this.isProcessed = false; this.key = key; this.options = options; this.rules = new RuleList(_extends$3({}, options, { parent: this })); for (var selector in styles) {
    this.rules.add(selector, styles[selector]);
} this.rules.process(); } var _proto = GlobalContainerRule.prototype; _proto.getRule = function getRule(name) { return this.rules.get(name); }; _proto.addRule = function addRule(name, style, options) { var rule = this.rules.add(name, style, options); if (rule)
    this.options.jss.plugins.onProcessRule(rule); return rule; }; _proto.replaceRule = function replaceRule(name, style, options) { var newRule = this.rules.replace(name, style, options); if (newRule)
    this.options.jss.plugins.onProcessRule(newRule); return newRule; }; _proto.indexOf = function indexOf(rule) { return this.rules.indexOf(rule); }; _proto.toString = function toString(options) { return this.rules.toString(options); }; return GlobalContainerRule; }();
var GlobalPrefixedRule = /*#__PURE__*/ function () { function GlobalPrefixedRule(key, style, options) { this.type = 'global'; this.at = at; this.isProcessed = false; this.key = key; this.options = options; var selector = key.substr(atPrefix.length); this.rule = options.jss.createRule(selector, style, _extends$3({}, options, { parent: this })); } var _proto2 = GlobalPrefixedRule.prototype; _proto2.toString = function toString(options) { return this.rule ? this.rule.toString(options) : ''; }; return GlobalPrefixedRule; }();
var separatorRegExp$1 = /\s*,\s*/g;
function addScope(selector, scope) { var parts = selector.split(separatorRegExp$1); var scoped = ''; for (var i = 0; i < parts.length; i++) {
    scoped += scope + " " + parts[i].trim();
    if (parts[i + 1])
        scoped += ', ';
} return scoped; }
function handleNestedGlobalContainerRule(rule, sheet) { var options = rule.options, style = rule.style; var rules = style ? style[at] : null; if (!rules)
    return; for (var name in rules) {
    sheet.addRule(name, rules[name], _extends$3({}, options, { selector: addScope(name, rule.selector) }));
} delete style[at]; }
function handlePrefixedGlobalRule(rule, sheet) { var options = rule.options, style = rule.style; for (var prop in style) {
    if (prop[0] !== '@' || prop.substr(0, at.length) !== at)
        continue;
    var selector = addScope(prop.substr(at.length), rule.selector);
    sheet.addRule(selector, style[prop], _extends$3({}, options, { selector: selector }));
    delete style[prop];
} }
function jssGlobal() { function onCreateRule(name, styles, options) { if (!name)
    return null; if (name === at) {
    return new GlobalContainerRule(name, styles, options);
} if (name[0] === '@' && name.substr(0, atPrefix.length) === atPrefix) {
    return new GlobalPrefixedRule(name, styles, options);
} var parent = options.parent; if (parent) {
    if (parent.type === 'global' || parent.options.parent && parent.options.parent.type === 'global') {
        options.scoped = false;
    }
} if (!options.selector && options.scoped === false) {
    options.selector = name;
} return null; } function onProcessRule(rule, sheet) { if (rule.type !== 'style' || !sheet)
    return; handleNestedGlobalContainerRule(rule, sheet); handlePrefixedGlobalRule(rule, sheet); } return { onCreateRule: onCreateRule, onProcessRule: onProcessRule }; }
var separatorRegExp = /\s*,\s*/g;
var parentRegExp = /&/g;
var refRegExp = /\$([\w-]+)/g;
function jssNested() { function getReplaceRef(container, sheet) { return function (match, key) { var rule = container.getRule(key) || sheet && sheet.getRule(key); if (rule) {
    return rule.selector;
} return key; }; } function replaceParentRefs(nestedProp, parentProp) { var parentSelectors = parentProp.split(separatorRegExp); var nestedSelectors = nestedProp.split(separatorRegExp); var result = ''; for (var i = 0; i < parentSelectors.length; i++) {
    var parent = parentSelectors[i];
    for (var j = 0; j < nestedSelectors.length; j++) {
        var nested = nestedSelectors[j];
        if (result)
            result += ', ';
        result += nested.indexOf('&') !== -1 ? nested.replace(parentRegExp, parent) : parent + " " + nested;
    }
} return result; } function getOptions(rule, container, prevOptions) { if (prevOptions)
    return _extends$3({}, prevOptions, { index: prevOptions.index + 1 }); var nestingLevel = rule.options.nestingLevel; nestingLevel = nestingLevel === undefined ? 1 : nestingLevel + 1; var options = _extends$3({}, rule.options, { nestingLevel: nestingLevel, index: container.indexOf(rule) + 1 }); delete options.name; return options; } function onProcessStyle(style, rule, sheet) { if (rule.type !== 'style')
    return style; var styleRule = rule; var container = styleRule.options.parent; var options; var replaceRef; for (var prop in style) {
    var isNested = prop.indexOf('&') !== -1;
    var isNestedConditional = prop[0] === '@';
    if (!isNested && !isNestedConditional)
        continue;
    options = getOptions(styleRule, container, options);
    if (isNested) {
        var selector = replaceParentRefs(prop, styleRule.selector);
        if (!replaceRef)
            replaceRef = getReplaceRef(container, sheet);
        selector = selector.replace(refRegExp, replaceRef);
        var name = styleRule.key + "-" + prop;
        if ('replaceRule' in container) {
            container.replaceRule(name, style[prop], _extends$3({}, options, { selector: selector }));
        }
        else {
            container.addRule(name, style[prop], _extends$3({}, options, { selector: selector }));
        }
    }
    else if (isNestedConditional) {
        container.addRule(prop, {}, options).addRule(styleRule.key, style[prop], { selector: styleRule.selector });
    }
    delete style[prop];
} return style; } return { onProcessStyle: onProcessStyle }; }
var uppercasePattern = /[A-Z]/g;
var msPattern = /^ms-/;
var cache$2 = {};
function toHyphenLower(match) { return '-' + match.toLowerCase(); }
function hyphenateStyleName(name) { if (cache$2.hasOwnProperty(name)) {
    return cache$2[name];
} var hName = name.replace(uppercasePattern, toHyphenLower); return cache$2[name] = msPattern.test(hName) ? '-' + hName : hName; }
function convertCase(style) { var converted = {}; for (var prop in style) {
    var key = prop.indexOf('--') === 0 ? prop : hyphenateStyleName(prop);
    converted[key] = style[prop];
} if (style.fallbacks) {
    if (Array.isArray(style.fallbacks))
        converted.fallbacks = style.fallbacks.map(convertCase);
    else
        converted.fallbacks = convertCase(style.fallbacks);
} return converted; }
function camelCase() { function onProcessStyle(style) { if (Array.isArray(style)) {
    for (var index = 0; index < style.length; index++) {
        style[index] = convertCase(style[index]);
    }
    return style;
} return convertCase(style); } function onChangeValue(value, prop, rule) { if (prop.indexOf('--') === 0) {
    return value;
} var hyphenatedProp = hyphenateStyleName(prop); if (prop === hyphenatedProp)
    return value; rule.prop(hyphenatedProp, value); return null; } return { onProcessStyle: onProcessStyle, onChangeValue: onChangeValue }; }
var px = hasCSSTOMSupport && CSS ? CSS.px : 'px';
var ms = hasCSSTOMSupport && CSS ? CSS.ms : 'ms';
var percent = hasCSSTOMSupport && CSS ? CSS.percent : '%';
var defaultUnits = { 'animation-delay': ms, 'animation-duration': ms, 'background-position': px, 'background-position-x': px, 'background-position-y': px, 'background-size': px, border: px, 'border-bottom': px, 'border-bottom-left-radius': px, 'border-bottom-right-radius': px, 'border-bottom-width': px, 'border-left': px, 'border-left-width': px, 'border-radius': px, 'border-right': px, 'border-right-width': px, 'border-top': px, 'border-top-left-radius': px, 'border-top-right-radius': px, 'border-top-width': px, 'border-width': px, 'border-block': px, 'border-block-end': px, 'border-block-end-width': px, 'border-block-start': px, 'border-block-start-width': px, 'border-block-width': px, 'border-inline': px, 'border-inline-end': px, 'border-inline-end-width': px, 'border-inline-start': px, 'border-inline-start-width': px, 'border-inline-width': px, 'border-start-start-radius': px, 'border-start-end-radius': px, 'border-end-start-radius': px, 'border-end-end-radius': px, margin: px, 'margin-bottom': px, 'margin-left': px, 'margin-right': px, 'margin-top': px, 'margin-block': px, 'margin-block-end': px, 'margin-block-start': px, 'margin-inline': px, 'margin-inline-end': px, 'margin-inline-start': px, padding: px, 'padding-bottom': px, 'padding-left': px, 'padding-right': px, 'padding-top': px, 'padding-block': px, 'padding-block-end': px, 'padding-block-start': px, 'padding-inline': px, 'padding-inline-end': px, 'padding-inline-start': px, 'mask-position-x': px, 'mask-position-y': px, 'mask-size': px, height: px, width: px, 'min-height': px, 'max-height': px, 'min-width': px, 'max-width': px, bottom: px, left: px, top: px, right: px, inset: px, 'inset-block': px, 'inset-block-end': px, 'inset-block-start': px, 'inset-inline': px, 'inset-inline-end': px, 'inset-inline-start': px, 'box-shadow': px, 'text-shadow': px, 'column-gap': px, 'column-rule': px, 'column-rule-width': px, 'column-width': px, 'font-size': px, 'font-size-delta': px, 'letter-spacing': px, 'text-decoration-thickness': px, 'text-indent': px, 'text-stroke': px, 'text-stroke-width': px, 'word-spacing': px, motion: px, 'motion-offset': px, outline: px, 'outline-offset': px, 'outline-width': px, perspective: px, 'perspective-origin-x': percent, 'perspective-origin-y': percent, 'transform-origin': percent, 'transform-origin-x': percent, 'transform-origin-y': percent, 'transform-origin-z': percent, 'transition-delay': ms, 'transition-duration': ms, 'vertical-align': px, 'flex-basis': px, 'shape-margin': px, size: px, gap: px, grid: px, 'grid-gap': px, 'row-gap': px, 'grid-row-gap': px, 'grid-column-gap': px, 'grid-template-rows': px, 'grid-template-columns': px, 'grid-auto-rows': px, 'grid-auto-columns': px, 'box-shadow-x': px, 'box-shadow-y': px, 'box-shadow-blur': px, 'box-shadow-spread': px, 'font-line-height': px, 'text-shadow-x': px, 'text-shadow-y': px, 'text-shadow-blur': px };
function addCamelCasedVersion(obj) { var regExp = /(-[a-z])/g; var replace = function replace(str) { return str[1].toUpperCase(); }; var newObj = {}; for (var key in obj) {
    newObj[key] = obj[key];
    newObj[key.replace(regExp, replace)] = obj[key];
} return newObj; }
var units = addCamelCasedVersion(defaultUnits);
function iterate(prop, value, options) { if (value == null)
    return value; if (Array.isArray(value)) {
    for (var i = 0; i < value.length; i++) {
        value[i] = iterate(prop, value[i], options);
    }
}
else if (_typeof2(value) === 'object') {
    if (prop === 'fallbacks') {
        for (var innerProp in value) {
            value[innerProp] = iterate(innerProp, value[innerProp], options);
        }
    }
    else {
        for (var _innerProp in value) {
            value[_innerProp] = iterate(prop + "-" + _innerProp, value[_innerProp], options);
        }
    }
}
else if (typeof value === 'number' && isNaN(value) === false) {
    var unit = options[prop] || units[prop];
    if (unit && !(value === 0 && unit === px)) {
        return typeof unit === 'function' ? unit(value).toString() : "" + value + unit;
    }
    return value.toString();
} return value; }
function defaultUnit(options) { if (options === void 0) {
    options = {};
} var camelCasedOptions = addCamelCasedVersion(options); function onProcessStyle(style, rule) { if (rule.type !== 'style')
    return style; for (var prop in style) {
    style[prop] = iterate(prop, style[prop], camelCasedOptions);
} return style; } function onChangeValue(value, prop) { return iterate(prop, value, camelCasedOptions); } return { onProcessStyle: onProcessStyle, onChangeValue: onChangeValue }; }
function _arrayLikeToArray$1(arr, len) { if (len == null || len > arr.length)
    len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i]; return arr2; }
function _arrayWithoutHoles$1(arr) { if (Array.isArray(arr))
    return _arrayLikeToArray$1(arr); }
function _iterableToArray$1(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter); }
function _unsupportedIterableToArray$1(o, minLen) { if (!o)
    return; if (typeof o === "string")
    return _arrayLikeToArray$1(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor)
    n = o.constructor.name; if (n === "Map" || n === "Set")
    return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray$1(o, minLen); }
function _nonIterableSpread$1() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _toConsumableArray$1(arr) { return _arrayWithoutHoles$1(arr) || _iterableToArray$1(arr) || _unsupportedIterableToArray$1(arr) || _nonIterableSpread$1(); }
var js = '';
var css = '';
var vendor = '';
var browser = '';
var isTouch = isBrowser$1 && 'ontouchstart' in document.documentElement;
if (isBrowser$1) {
    var jsCssMap = { Moz: '-moz-', ms: '-ms-', O: '-o-', Webkit: '-webkit-' };
    var _document$createEleme = document.createElement('p'), style = _document$createEleme.style;
    var testProp = 'Transform';
    for (var key in jsCssMap) {
        if (key + testProp in style) {
            js = key;
            css = jsCssMap[key];
            break;
        }
    }
    if (js === 'Webkit' && 'msHyphens' in style) {
        js = 'ms';
        css = jsCssMap.ms;
        browser = 'edge';
    }
    if (js === 'Webkit' && '-apple-trailing-word' in style) {
        vendor = 'apple';
    }
}
var prefix = { js: js, css: css, vendor: vendor, browser: browser, isTouch: isTouch };
function supportedKeyframes(key) { if (key[1] === '-')
    return key; if (prefix.js === 'ms')
    return key; return "@" + prefix.css + "keyframes" + key.substr(10); }
var appearence = { noPrefill: ['appearance'], supportedProperty: function supportedProperty(prop) { if (prop !== 'appearance')
        return false; if (prefix.js === 'ms')
        return "-webkit-" + prop; return prefix.css + prop; } };
var colorAdjust = { noPrefill: ['color-adjust'], supportedProperty: function supportedProperty(prop) { if (prop !== 'color-adjust')
        return false; if (prefix.js === 'Webkit')
        return prefix.css + "print-" + prop; return prop; } };
var regExp = /[-\s]+(.)?/g;
function toUpper(match, c) { return c ? c.toUpperCase() : ''; }
function camelize(str) { return str.replace(regExp, toUpper); }
function pascalize(str) { return camelize("-" + str); }
var mask = { noPrefill: ['mask'], supportedProperty: function supportedProperty(prop, style) { if (!/^mask/.test(prop))
        return false; if (prefix.js === 'Webkit') {
        var longhand = 'mask-image';
        if (camelize(longhand) in style) {
            return prop;
        }
        if (prefix.js + pascalize(longhand) in style) {
            return prefix.css + prop;
        }
    } return prop; } };
var textOrientation = { noPrefill: ['text-orientation'], supportedProperty: function supportedProperty(prop) { if (prop !== 'text-orientation')
        return false; if (prefix.vendor === 'apple' && !prefix.isTouch) {
        return prefix.css + prop;
    } return prop; } };
var transform = { noPrefill: ['transform'], supportedProperty: function supportedProperty(prop, style, options) { if (prop !== 'transform')
        return false; if (options.transform) {
        return prop;
    } return prefix.css + prop; } };
var transition = { noPrefill: ['transition'], supportedProperty: function supportedProperty(prop, style, options) { if (prop !== 'transition')
        return false; if (options.transition) {
        return prop;
    } return prefix.css + prop; } };
var writingMode = { noPrefill: ['writing-mode'], supportedProperty: function supportedProperty(prop) { if (prop !== 'writing-mode')
        return false; if (prefix.js === 'Webkit' || prefix.js === 'ms' && prefix.browser !== 'edge') {
        return prefix.css + prop;
    } return prop; } };
var userSelect = { noPrefill: ['user-select'], supportedProperty: function supportedProperty(prop) { if (prop !== 'user-select')
        return false; if (prefix.js === 'Moz' || prefix.js === 'ms' || prefix.vendor === 'apple') {
        return prefix.css + prop;
    } return prop; } };
var breakPropsOld = { supportedProperty: function supportedProperty(prop, style) { if (!/^break-/.test(prop))
        return false; if (prefix.js === 'Webkit') {
        var jsProp = "WebkitColumn" + pascalize(prop);
        return jsProp in style ? prefix.css + "column-" + prop : false;
    } if (prefix.js === 'Moz') {
        var _jsProp = "page" + pascalize(prop);
        return _jsProp in style ? "page-" + prop : false;
    } return false; } };
var inlineLogicalOld = { supportedProperty: function supportedProperty(prop, style) { if (!/^(border|margin|padding)-inline/.test(prop))
        return false; if (prefix.js === 'Moz')
        return prop; var newProp = prop.replace('-inline', ''); return prefix.js + pascalize(newProp) in style ? prefix.css + newProp : false; } };
var unprefixed = { supportedProperty: function supportedProperty(prop, style) { return camelize(prop) in style ? prop : false; } };
var prefixed = { supportedProperty: function supportedProperty(prop, style) { var pascalized = pascalize(prop); if (prop[0] === '-')
        return prop; if (prop[0] === '-' && prop[1] === '-')
        return prop; if (prefix.js + pascalized in style)
        return prefix.css + prop; if (prefix.js !== 'Webkit' && "Webkit" + pascalized in style)
        return "-webkit-" + prop; return false; } };
var scrollSnap = { supportedProperty: function supportedProperty(prop) { if (prop.substring(0, 11) !== 'scroll-snap')
        return false; if (prefix.js === 'ms') {
        return "" + prefix.css + prop;
    } return prop; } };
var overscrollBehavior = { supportedProperty: function supportedProperty(prop) { if (prop !== 'overscroll-behavior')
        return false; if (prefix.js === 'ms') {
        return prefix.css + "scroll-chaining";
    } return prop; } };
var propMap = { 'flex-grow': 'flex-positive', 'flex-shrink': 'flex-negative', 'flex-basis': 'flex-preferred-size', 'justify-content': 'flex-pack', order: 'flex-order', 'align-items': 'flex-align', 'align-content': 'flex-line-pack' };
var flex2012 = { supportedProperty: function supportedProperty(prop, style) { var newProp = propMap[prop]; if (!newProp)
        return false; return prefix.js + pascalize(newProp) in style ? prefix.css + newProp : false; } };
var propMap$1 = { flex: 'box-flex', 'flex-grow': 'box-flex', 'flex-direction': ['box-orient', 'box-direction'], order: 'box-ordinal-group', 'align-items': 'box-align', 'flex-flow': ['box-orient', 'box-direction'], 'justify-content': 'box-pack' };
var propKeys = Object.keys(propMap$1);
var prefixCss = function prefixCss(p) { return prefix.css + p; };
var flex2009 = { supportedProperty: function supportedProperty(prop, style, _ref) { var multiple = _ref.multiple; if (propKeys.indexOf(prop) > -1) {
        var newProp = propMap$1[prop];
        if (!Array.isArray(newProp)) {
            return prefix.js + pascalize(newProp) in style ? prefix.css + newProp : false;
        }
        if (!multiple)
            return false;
        for (var i = 0; i < newProp.length; i++) {
            if (!(prefix.js + pascalize(newProp[0]) in style)) {
                return false;
            }
        }
        return newProp.map(prefixCss);
    } return false; } };
var plugins = [appearence, colorAdjust, mask, textOrientation, transform, transition, writingMode, userSelect, breakPropsOld, inlineLogicalOld, unprefixed, prefixed, scrollSnap, overscrollBehavior, flex2012, flex2009];
var propertyDetectors = plugins.filter(function (p) { return p.supportedProperty; }).map(function (p) { return p.supportedProperty; });
var noPrefill = plugins.filter(function (p) { return p.noPrefill; }).reduce(function (a, p) { a.push.apply(a, _toConsumableArray$1(p.noPrefill)); return a; }, []);
var el;
var cache = {};
if (isBrowser$1) {
    el = document.createElement('p');
    var computed = window.getComputedStyle(document.documentElement, '');
    for (var key$1 in computed) {
        if (!isNaN(key$1))
            cache[computed[key$1]] = computed[key$1];
    }
    noPrefill.forEach(function (x) { return delete cache[x]; });
}
function supportedProperty(prop, options) { if (options === void 0) {
    options = {};
} if (!el)
    return prop; if (cache[prop] != null) {
    return cache[prop];
} if (prop === 'transition' || prop === 'transform') {
    options[prop] = prop in el.style;
} for (var i = 0; i < propertyDetectors.length; i++) {
    cache[prop] = propertyDetectors[i](prop, el.style, options);
    if (cache[prop])
        break;
} try {
    el.style[prop] = '';
}
catch (err) {
    return false;
} return cache[prop]; }
var cache$1 = {};
var transitionProperties = { transition: 1, 'transition-property': 1, '-webkit-transition': 1, '-webkit-transition-property': 1 };
var transPropsRegExp = /(^\s*[\w-]+)|, (\s*[\w-]+)(?![^()]*\))/g;
var el$1;
function prefixTransitionCallback(match, p1, p2) { if (p1 === 'var')
    return 'var'; if (p1 === 'all')
    return 'all'; if (p2 === 'all')
    return ', all'; var prefixedValue = p1 ? supportedProperty(p1) : ", " + supportedProperty(p2); if (!prefixedValue)
    return p1 || p2; return prefixedValue; }
if (isBrowser$1)
    el$1 = document.createElement('p');
function supportedValue(property, value) { var prefixedValue = value; if (!el$1 || property === 'content')
    return value; if (typeof prefixedValue !== 'string' || !isNaN(parseInt(prefixedValue, 10))) {
    return prefixedValue;
} var cacheKey = property + prefixedValue; if (cache$1[cacheKey] != null) {
    return cache$1[cacheKey];
} try {
    el$1.style[property] = prefixedValue;
}
catch (err) {
    cache$1[cacheKey] = false;
    return false;
} if (transitionProperties[property]) {
    prefixedValue = prefixedValue.replace(transPropsRegExp, prefixTransitionCallback);
}
else if (el$1.style[property] === '') {
    prefixedValue = prefix.css + prefixedValue;
    if (prefixedValue === '-ms-flex')
        el$1.style[property] = '-ms-flexbox';
    el$1.style[property] = prefixedValue;
    if (el$1.style[property] === '') {
        cache$1[cacheKey] = false;
        return false;
    }
} el$1.style[property] = ''; cache$1[cacheKey] = prefixedValue; return cache$1[cacheKey]; }
function jssVendorPrefixer() { function onProcessRule(rule) { if (rule.type === 'keyframes') {
    var atRule = rule;
    atRule.at = supportedKeyframes(atRule.at);
} } function prefixStyle(style) { for (var prop in style) {
    var value = style[prop];
    if (prop === 'fallbacks' && Array.isArray(value)) {
        style[prop] = value.map(prefixStyle);
        continue;
    }
    var changeProp = false;
    var supportedProp = supportedProperty(prop);
    if (supportedProp && supportedProp !== prop)
        changeProp = true;
    var changeValue = false;
    var supportedValue$1 = supportedValue(supportedProp, toCssValue(value));
    if (supportedValue$1 && supportedValue$1 !== value)
        changeValue = true;
    if (changeProp || changeValue) {
        if (changeProp)
            delete style[prop];
        style[supportedProp || prop] = supportedValue$1 || value;
    }
} return style; } function onProcessStyle(style, rule) { if (rule.type !== 'style')
    return style; return prefixStyle(style); } function onChangeValue(value, prop) { return supportedValue(prop, toCssValue(value)) || value; } return { onProcessRule: onProcessRule, onProcessStyle: onProcessStyle, onChangeValue: onChangeValue }; }
function jssPropsSort() { var sort = function sort(prop0, prop1) { if (prop0.length === prop1.length) {
    return prop0 > prop1 ? 1 : -1;
} return prop0.length - prop1.length; }; return { onProcessStyle: function onProcessStyle(style, rule) { if (rule.type !== 'style')
        return style; var newStyle = {}; var props = Object.keys(style).sort(sort); for (var i = 0; i < props.length; i++) {
        newStyle[props[i]] = style[props[i]];
    } return newStyle; } }; }
function jssPreset() { return { plugins: [functionPlugin(), jssGlobal(), jssNested(), camelCase(), defaultUnit(), typeof window === 'undefined' ? null : jssVendorPrefixer(), jssPropsSort()] }; }
function _objectWithoutPropertiesLoose$1(source, excluded) { if (source == null)
    return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
        continue;
    target[key] = source[key];
} return target; }
function _objectWithoutProperties$1(source, excluded) { if (source == null)
    return {}; var target = _objectWithoutPropertiesLoose$1(source, excluded); var key, i; if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0)
            continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key))
            continue;
        target[key] = source[key];
    }
} return target; }
function _extends$2() { _extends$2 = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
        }
    }
} return target; }; return _extends$2.apply(this, arguments); }
function mergeClasses() { var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; var baseClasses = options.baseClasses, newClasses = options.newClasses; options.Component; if (!newClasses) {
    return baseClasses;
} var nextClasses = _extends$2({}, baseClasses); Object.keys(newClasses).forEach(function (key) { if (newClasses[key]) {
    nextClasses[key] = "".concat(baseClasses[key], " ").concat(newClasses[key]);
} }); return nextClasses; }
var multiKeyStore = { set: function set(cache, key1, key2, value) { var subCache = cache.get(key1); if (!subCache) {
        subCache = new Map();
        cache.set(key1, subCache);
    } subCache.set(key2, value); }, get: function get(cache, key1, key2) { var subCache = cache.get(key1); return subCache ? subCache.get(key2) : undefined; }, "delete": function _delete(cache, key1, key2) { var subCache = cache.get(key1); subCache["delete"](key2); } };
var ThemeContext = /*#__PURE__*/ wn.createContext(null);
function useTheme$1() { var theme = wn.useContext(ThemeContext); return theme; }
var jss = createJss(jssPreset());
var generateClassName = createGenerateClassName();
var sheetsManager = new Map();
var defaultOptions = { disableGeneration: false, generateClassName: generateClassName, jss: jss, sheetsCache: null, sheetsManager: sheetsManager, sheetsRegistry: null };
var StylesContext = /*#__PURE__*/ wn.createContext(defaultOptions);
var indexCounter = -1e9;
function increment() { indexCounter += 1; return indexCounter; }
var noopTheme = {};
function getStylesCreator(stylesOrCreator) { var themingEnabled = typeof stylesOrCreator === 'function'; return { create: function create(theme, name) { var styles; try {
        styles = themingEnabled ? stylesOrCreator(theme) : stylesOrCreator;
    }
    catch (err) {
        throw err;
    } if (!name || !theme.overrides || !theme.overrides[name]) {
        return styles;
    } var overrides = theme.overrides[name]; var stylesWithOverrides = _extends$2({}, styles); Object.keys(overrides).forEach(function (key) { stylesWithOverrides[key] = deepmerge(stylesWithOverrides[key], overrides[key]); }); return stylesWithOverrides; }, options: {} }; }
function getClasses(_ref, classes, Component) { var state = _ref.state, stylesOptions = _ref.stylesOptions; if (stylesOptions.disableGeneration) {
    return classes || {};
} if (!state.cacheClasses) {
    state.cacheClasses = { value: null, lastProp: null, lastJSS: {} };
} var generate = false; if (state.classes !== state.cacheClasses.lastJSS) {
    state.cacheClasses.lastJSS = state.classes;
    generate = true;
} if (classes !== state.cacheClasses.lastProp) {
    state.cacheClasses.lastProp = classes;
    generate = true;
} if (generate) {
    state.cacheClasses.value = mergeClasses({ baseClasses: state.cacheClasses.lastJSS, newClasses: classes, Component: Component });
} return state.cacheClasses.value; }
function attach(_ref2, props) { var state = _ref2.state, theme = _ref2.theme, stylesOptions = _ref2.stylesOptions, stylesCreator = _ref2.stylesCreator, name = _ref2.name; if (stylesOptions.disableGeneration) {
    return;
} var sheetManager = multiKeyStore.get(stylesOptions.sheetsManager, stylesCreator, theme); if (!sheetManager) {
    sheetManager = { refs: 0, staticSheet: null, dynamicStyles: null };
    multiKeyStore.set(stylesOptions.sheetsManager, stylesCreator, theme, sheetManager);
} var options = _extends$2({}, stylesCreator.options, stylesOptions, { theme: theme, flip: typeof stylesOptions.flip === 'boolean' ? stylesOptions.flip : theme.direction === 'rtl' }); options.generateId = options.serverGenerateClassName || options.generateClassName; var sheetsRegistry = stylesOptions.sheetsRegistry; if (sheetManager.refs === 0) {
    var staticSheet;
    if (stylesOptions.sheetsCache) {
        staticSheet = multiKeyStore.get(stylesOptions.sheetsCache, stylesCreator, theme);
    }
    var styles = stylesCreator.create(theme, name);
    if (!staticSheet) {
        staticSheet = stylesOptions.jss.createStyleSheet(styles, _extends$2({ link: false }, options));
        staticSheet.attach();
        if (stylesOptions.sheetsCache) {
            multiKeyStore.set(stylesOptions.sheetsCache, stylesCreator, theme, staticSheet);
        }
    }
    if (sheetsRegistry) {
        sheetsRegistry.add(staticSheet);
    }
    sheetManager.staticSheet = staticSheet;
    sheetManager.dynamicStyles = getDynamicStyles(styles);
} if (sheetManager.dynamicStyles) {
    var dynamicSheet = stylesOptions.jss.createStyleSheet(sheetManager.dynamicStyles, _extends$2({ link: true }, options));
    dynamicSheet.update(props);
    dynamicSheet.attach();
    state.dynamicSheet = dynamicSheet;
    state.classes = mergeClasses({ baseClasses: sheetManager.staticSheet.classes, newClasses: dynamicSheet.classes });
    if (sheetsRegistry) {
        sheetsRegistry.add(dynamicSheet);
    }
}
else {
    state.classes = sheetManager.staticSheet.classes;
} sheetManager.refs += 1; }
function update$1(_ref3, props) { var state = _ref3.state; if (state.dynamicSheet) {
    state.dynamicSheet.update(props);
} }
function detach(_ref4) { var state = _ref4.state, theme = _ref4.theme, stylesOptions = _ref4.stylesOptions, stylesCreator = _ref4.stylesCreator; if (stylesOptions.disableGeneration) {
    return;
} var sheetManager = multiKeyStore.get(stylesOptions.sheetsManager, stylesCreator, theme); sheetManager.refs -= 1; var sheetsRegistry = stylesOptions.sheetsRegistry; if (sheetManager.refs === 0) {
    multiKeyStore["delete"](stylesOptions.sheetsManager, stylesCreator, theme);
    stylesOptions.jss.removeStyleSheet(sheetManager.staticSheet);
    if (sheetsRegistry) {
        sheetsRegistry.remove(sheetManager.staticSheet);
    }
} if (state.dynamicSheet) {
    stylesOptions.jss.removeStyleSheet(state.dynamicSheet);
    if (sheetsRegistry) {
        sheetsRegistry.remove(state.dynamicSheet);
    }
} }
function useSynchronousEffect(func, values) { var key = wn.useRef([]); var output; var currentKey = wn.useMemo(function () { return {}; }, values); if (key.current !== currentKey) {
    key.current = currentKey;
    output = func();
} wn.useEffect(function () { return function () { if (output) {
    output();
} }; }, [currentKey]); }
function makeStyles$1(stylesOrCreator) { var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; var name = options.name, classNamePrefixOption = options.classNamePrefix, Component = options.Component, _options$defaultTheme = options.defaultTheme, defaultTheme = _options$defaultTheme === void 0 ? noopTheme : _options$defaultTheme, stylesOptions2 = _objectWithoutProperties$1(options, ["name", "classNamePrefix", "Component", "defaultTheme"]); var stylesCreator = getStylesCreator(stylesOrCreator); var classNamePrefix = name || classNamePrefixOption || 'makeStyles'; stylesCreator.options = { index: increment(), name: name, meta: classNamePrefix, classNamePrefix: classNamePrefix }; var useStyles = function useStyles() { var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; var theme = useTheme$1() || defaultTheme; var stylesOptions = _extends$2({}, wn.useContext(StylesContext), stylesOptions2); var instance = wn.useRef(); var shouldUpdate = wn.useRef(); useSynchronousEffect(function () { var current = { name: name, state: {}, stylesCreator: stylesCreator, stylesOptions: stylesOptions, theme: theme }; attach(current, props); shouldUpdate.current = false; instance.current = current; return function () { detach(current); }; }, [theme, stylesCreator]); wn.useEffect(function () { if (shouldUpdate.current) {
    update$1(instance.current, props);
} shouldUpdate.current = true; }); var classes = getClasses(instance.current, props.classes, Component); return classes; }; return useStyles; }
function r(e) { var t, f, n = ""; if ("string" == typeof e || "number" == typeof e)
    n += e;
else if ("object" == _typeof2(e))
    if (Array.isArray(e))
        for (t = 0; t < e.length; t++)
            e[t] && (f = r(e[t])) && (n && (n += " "), n += f);
    else
        for (t in e)
            e[t] && (n && (n += " "), n += t); return n; }
function clsx() { for (var e, t, f = 0, n = ""; f < arguments.length;)
    (e = arguments[f++]) && (t = r(e)) && (n && (n += " "), n += t); return n; }
function mergeOuterLocalTheme(outerTheme, localTheme) { if (typeof localTheme === 'function') {
    var mergedTheme = localTheme(outerTheme);
    return mergedTheme;
} return _extends$2({}, outerTheme, localTheme); }
function ThemeProvider(props) { var children = props.children, localTheme = props.theme; var outerTheme = useTheme$1(); var theme = wn.useMemo(function () { var output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme); if (output != null) {
    output[nested] = outerTheme !== null;
} return output; }, [localTheme, outerTheme]); return /*#__PURE__*/ wn.createElement(ThemeContext.Provider, { value: theme }, children); }
var withStyles$1 = function withStyles(stylesOrCreator) { var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; return function (Component) { var defaultTheme = options.defaultTheme, _options$withTheme = options.withTheme, withTheme = _options$withTheme === void 0 ? false : _options$withTheme, name = options.name, stylesOptions = _objectWithoutProperties$1(options, ["defaultTheme", "withTheme", "name"]); var classNamePrefix = name; var useStyles = makeStyles$1(stylesOrCreator, _extends$2({ defaultTheme: defaultTheme, Component: Component, name: name || Component.displayName, classNamePrefix: classNamePrefix }, stylesOptions)); var WithStyles = /*#__PURE__*/ wn.forwardRef(function WithStyles(props, ref) { props.classes; var innerRef = props.innerRef, other = _objectWithoutProperties$1(props, ["classes", "innerRef"]); var classes = useStyles(_extends$2({}, Component.defaultProps, props)); var theme; var more = other; if (typeof name === 'string' || withTheme) {
    theme = useTheme$1() || defaultTheme;
    if (name) {
        more = getThemeProps({ theme: theme, name: name, props: other });
    }
    if (withTheme && !more.theme) {
        more.theme = theme;
    }
} return /*#__PURE__*/ wn.createElement(Component, _extends$2({ ref: innerRef || ref, classes: classes }, more)); }); hoistNonReactStatics$1(WithStyles, Component); return WithStyles; }; };
var defaultTheme = createTheme();
function makeStyles(stylesOrCreator) { var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; return makeStyles$1(stylesOrCreator, _extends$4({ defaultTheme: defaultTheme }, options)); }
function useTheme() { var theme = useTheme$1() || defaultTheme; return theme; }
function withStyles(stylesOrCreator, options) { return withStyles$1(stylesOrCreator, _extends$4({ defaultTheme: defaultTheme }, options)); }
function capitalize(string) { if (typeof string !== 'string') {
    throw new Error(formatMuiErrorMessage(7));
} return string.charAt(0).toUpperCase() + string.slice(1); }
function createChainedFunction() { for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
} return funcs.reduce(function (acc, func) { if (func == null) {
    return acc;
} return function chainedFunction() { for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
} acc.apply(this, args); func.apply(this, args); }; }, function () { }); }
var styles$J = function styles(theme) { return { root: { userSelect: 'none', width: '1em', height: '1em', display: 'inline-block', fill: 'currentColor', flexShrink: 0, fontSize: theme.typography.pxToRem(24), transition: theme.transitions.create('fill', { duration: theme.transitions.duration.shorter }) }, colorPrimary: { color: theme.palette.primary.main }, colorSecondary: { color: theme.palette.secondary.main }, colorAction: { color: theme.palette.action.active }, colorError: { color: theme.palette.error.main }, colorDisabled: { color: theme.palette.action.disabled }, fontSizeInherit: { fontSize: 'inherit' }, fontSizeSmall: { fontSize: theme.typography.pxToRem(20) }, fontSizeLarge: { fontSize: theme.typography.pxToRem(35) } }; };
var SvgIcon = /*#__PURE__*/ N$1(function SvgIcon(props, ref) { var children = props.children, classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'inherit' : _props$color, _props$component = props.component, Component = _props$component === void 0 ? 'svg' : _props$component, _props$fontSize = props.fontSize, fontSize = _props$fontSize === void 0 ? 'medium' : _props$fontSize, htmlColor = props.htmlColor, titleAccess = props.titleAccess, _props$viewBox = props.viewBox, viewBox = _props$viewBox === void 0 ? '0 0 24 24' : _props$viewBox, other = _objectWithoutProperties$2(props, ["children", "classes", "className", "color", "component", "fontSize", "htmlColor", "titleAccess", "viewBox"]); return /*#__PURE__*/ y$3(Component, _extends$4({ className: clsx(classes.root, className, color !== 'inherit' && classes["color".concat(capitalize(color))], fontSize !== 'default' && fontSize !== 'medium' && classes["fontSize".concat(capitalize(fontSize))]), focusable: "false", viewBox: viewBox, color: htmlColor, "aria-hidden": titleAccess ? undefined : true, role: titleAccess ? 'img' : undefined, ref: ref }, other), children, titleAccess ? /*#__PURE__*/ y$3("title", null, titleAccess) : null); });
SvgIcon.muiName = 'SvgIcon';
var SvgIcon$1 = withStyles(styles$J, { name: 'MuiSvgIcon' })(SvgIcon);
function createSvgIcon$1(path, displayName) { var Component = function Component(props, ref) { return /*#__PURE__*/ wn.createElement(SvgIcon$1, _extends$4({ ref: ref }, props), path); }; Component.muiName = SvgIcon$1.muiName; return /*#__PURE__*/ wn.memo(/*#__PURE__*/ wn.forwardRef(Component)); }
function debounce$1(func) { var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 166; var timeout; function debounced() { for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
} var that = this; var later = function later() { func.apply(that, args); }; clearTimeout(timeout); timeout = setTimeout(later, wait); } debounced.clear = function () { clearTimeout(timeout); }; return debounced; }
function deprecatedPropType(validator, reason) { {
    return function () { return null; };
} }
function isMuiElement(element, muiNames) { return /*#__PURE__*/ /*#__PURE__*/ fn(element) && muiNames.indexOf(element.type.muiName) !== -1; }
function ownerDocument(node) { return node && node.ownerDocument || document; }
function ownerWindow(node) { var doc = ownerDocument(node); return doc.defaultView || window; }
function requirePropFactory(componentNameInError) { {
    return function () { return null; };
} }
function setRef(ref, value) { if (typeof ref === 'function') {
    ref(value);
}
else if (ref) {
    ref.current = value;
} }
function unsupportedProp(props, propName, componentName, location, propFullName) { {
    return null;
} }
function useControlled(_ref) { var controlled = _ref.controlled, defaultProp = _ref["default"]; _ref.name; _ref.state; var _React$useRef = _$1(controlled !== undefined), isControlled = _React$useRef.current; var _React$useState = h$4(defaultProp), valueState = _React$useState[0], setValue = _React$useState[1]; var value = isControlled ? controlled : valueState; var setValueIfUncontrolled = T$2(function (newValue) { if (!isControlled) {
    setValue(newValue);
} }, []); return [value, setValueIfUncontrolled]; }
var useEnhancedEffect$7 = typeof window !== 'undefined' ? y$2 : p$3;
function useEventCallback(fn) { var ref = _$1(fn); useEnhancedEffect$7(function () { ref.current = fn; }); return T$2(function () { return ref.current.apply(void 0, arguments); }, []); }
function useForkRef(refA, refB) { return F$3(function () { if (refA == null && refB == null) {
    return null;
} return function (refValue) { setRef(refA, refValue); setRef(refB, refValue); }; }, [refA, refB]); }
function useId(idOverride) { var _React$useState = h$4(idOverride), defaultId = _React$useState[0], setDefaultId = _React$useState[1]; var id = idOverride || defaultId; p$3(function () { if (defaultId == null) {
    setDefaultId("mui-".concat(Math.round(Math.random() * 1e5)));
} }, [defaultId]); return id; }
var hadKeyboardEvent = true;
var hadFocusVisibleRecently = false;
var hadFocusVisibleRecentlyTimeout = null;
var inputTypesWhitelist = { text: true, search: true, url: true, tel: true, email: true, password: true, number: true, date: true, month: true, week: true, time: true, datetime: true, 'datetime-local': true };
function focusTriggersKeyboardModality(node) { var type = node.type, tagName = node.tagName; if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) {
    return true;
} if (tagName === 'TEXTAREA' && !node.readOnly) {
    return true;
} if (node.isContentEditable) {
    return true;
} return false; }
function handleKeyDown(event) { if (event.metaKey || event.altKey || event.ctrlKey) {
    return;
} hadKeyboardEvent = true; }
function handlePointerDown() { hadKeyboardEvent = false; }
function handleVisibilityChange() { if (this.visibilityState === 'hidden') {
    if (hadFocusVisibleRecently) {
        hadKeyboardEvent = true;
    }
} }
function prepare(doc) { doc.addEventListener('keydown', handleKeyDown, true); doc.addEventListener('mousedown', handlePointerDown, true); doc.addEventListener('pointerdown', handlePointerDown, true); doc.addEventListener('touchstart', handlePointerDown, true); doc.addEventListener('visibilitychange', handleVisibilityChange, true); }
function isFocusVisible(event) { var target = event.target; try {
    return target.matches(':focus-visible');
}
catch (error) { } return hadKeyboardEvent || focusTriggersKeyboardModality(target); }
function handleBlurVisible() { hadFocusVisibleRecently = true; window.clearTimeout(hadFocusVisibleRecentlyTimeout); hadFocusVisibleRecentlyTimeout = window.setTimeout(function () { hadFocusVisibleRecently = false; }, 100); }
function useIsFocusVisible() { var ref = T$2(function (instance) { var node = vn(instance); if (node != null) {
    prepare(node.ownerDocument);
} }, []); return { isFocusVisible: isFocusVisible, onBlurVisible: handleBlurVisible, ref: ref }; }
var utils = /*#__PURE__*/ Object.freeze({ __proto__: null, capitalize: capitalize, createChainedFunction: createChainedFunction, createSvgIcon: createSvgIcon$1, debounce: debounce$1, deprecatedPropType: deprecatedPropType, isMuiElement: isMuiElement, ownerDocument: ownerDocument, ownerWindow: ownerWindow, requirePropFactory: requirePropFactory, setRef: setRef, unstable_useId: useId, unsupportedProp: unsupportedProp, useControlled: useControlled, useEventCallback: useEventCallback, useForkRef: useForkRef, useIsFocusVisible: useIsFocusVisible });
function _arrayWithHoles(arr) { if (Array.isArray(arr))
    return arr; }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length)
    len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i]; return arr2; }
function _unsupportedIterableToArray(o, minLen) { if (!o)
    return; if (typeof o === "string")
    return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor)
    n = o.constructor.name; if (n === "Map" || n === "Set")
    return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) {
    var e, n, i, u, a = [], f = !0, o = !1;
    try {
        if (i = (t = t.call(r)).next, 0 === l)
            ;
        else
            for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0)
                ;
    }
    catch (r) {
        o = !0, n = r;
    }
    finally {
        try {
            if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u))
                return;
        }
        finally {
            if (o)
                throw n;
        }
    }
    return a;
} }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
var config = { disabled: false };
var TransitionGroupContext = /*#__PURE__*/ wn.createContext(null);
var forceReflow = function forceReflow(node) { return node.scrollTop; };
var UNMOUNTED = 'unmounted';
var EXITED = 'exited';
var ENTERING = 'entering';
var ENTERED = 'entered';
var EXITING = 'exiting';
var Transition = /*#__PURE__*/ function (_React$Component) { _inheritsLoose(Transition, _React$Component); function Transition(props, context) { var _this; _this = _React$Component.call(this, props, context) || this; var parentGroup = context; var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear; var initialStatus; _this.appearStatus = null; if (props["in"]) {
    if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
    }
    else {
        initialStatus = ENTERED;
    }
}
else {
    if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
    }
    else {
        initialStatus = EXITED;
    }
} _this.state = { status: initialStatus }; _this.nextCallback = null; return _this; } Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) { var nextIn = _ref["in"]; if (nextIn && prevState.status === UNMOUNTED) {
    return { status: EXITED };
} return null; }; var _proto = Transition.prototype; _proto.componentDidMount = function componentDidMount() { this.updateStatus(true, this.appearStatus); }; _proto.componentDidUpdate = function componentDidUpdate(prevProps) { var nextStatus = null; if (prevProps !== this.props) {
    var status = this.state.status;
    if (this.props["in"]) {
        if (status !== ENTERING && status !== ENTERED) {
            nextStatus = ENTERING;
        }
    }
    else {
        if (status === ENTERING || status === ENTERED) {
            nextStatus = EXITING;
        }
    }
} this.updateStatus(false, nextStatus); }; _proto.componentWillUnmount = function componentWillUnmount() { this.cancelNextCallback(); }; _proto.getTimeouts = function getTimeouts() { var timeout = this.props.timeout; var exit, enter, appear; exit = enter = appear = timeout; if (timeout != null && typeof timeout !== 'number') {
    exit = timeout.exit;
    enter = timeout.enter;
    appear = timeout.appear !== undefined ? timeout.appear : enter;
} return { exit: exit, enter: enter, appear: appear }; }; _proto.updateStatus = function updateStatus(mounting, nextStatus) { if (mounting === void 0) {
    mounting = false;
} if (nextStatus !== null) {
    this.cancelNextCallback();
    if (nextStatus === ENTERING) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
            var node = this.props.nodeRef ? this.props.nodeRef.current : wn.findDOMNode(this);
            if (node)
                forceReflow(node);
        }
        this.performEnter(mounting);
    }
    else {
        this.performExit();
    }
}
else if (this.props.unmountOnExit && this.state.status === EXITED) {
    this.setState({ status: UNMOUNTED });
} }; _proto.performEnter = function performEnter(mounting) { var _this2 = this; var enter = this.props.enter; var appearing = this.context ? this.context.isMounting : mounting; var _ref2 = this.props.nodeRef ? [appearing] : [wn.findDOMNode(this), appearing], maybeNode = _ref2[0], maybeAppearing = _ref2[1]; var timeouts = this.getTimeouts(); var enterTimeout = appearing ? timeouts.appear : timeouts.enter; if (!mounting && !enter || config.disabled) {
    this.safeSetState({ status: ENTERED }, function () { _this2.props.onEntered(maybeNode); });
    return;
} this.props.onEnter(maybeNode, maybeAppearing); this.safeSetState({ status: ENTERING }, function () { _this2.props.onEntering(maybeNode, maybeAppearing); _this2.onTransitionEnd(enterTimeout, function () { _this2.safeSetState({ status: ENTERED }, function () { _this2.props.onEntered(maybeNode, maybeAppearing); }); }); }); }; _proto.performExit = function performExit() { var _this3 = this; var exit = this.props.exit; var timeouts = this.getTimeouts(); var maybeNode = this.props.nodeRef ? undefined : wn.findDOMNode(this); if (!exit || config.disabled) {
    this.safeSetState({ status: EXITED }, function () { _this3.props.onExited(maybeNode); });
    return;
} this.props.onExit(maybeNode); this.safeSetState({ status: EXITING }, function () { _this3.props.onExiting(maybeNode); _this3.onTransitionEnd(timeouts.exit, function () { _this3.safeSetState({ status: EXITED }, function () { _this3.props.onExited(maybeNode); }); }); }); }; _proto.cancelNextCallback = function cancelNextCallback() { if (this.nextCallback !== null) {
    this.nextCallback.cancel();
    this.nextCallback = null;
} }; _proto.safeSetState = function safeSetState(nextState, callback) { callback = this.setNextCallback(callback); this.setState(nextState, callback); }; _proto.setNextCallback = function setNextCallback(callback) { var _this4 = this; var active = true; this.nextCallback = function (event) { if (active) {
    active = false;
    _this4.nextCallback = null;
    callback(event);
} }; this.nextCallback.cancel = function () { active = false; }; return this.nextCallback; }; _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) { this.setNextCallback(handler); var node = this.props.nodeRef ? this.props.nodeRef.current : wn.findDOMNode(this); var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener; if (!node || doesNotHaveTimeoutOrListener) {
    setTimeout(this.nextCallback, 0);
    return;
} if (this.props.addEndListener) {
    var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback], maybeNode = _ref3[0], maybeNextCallback = _ref3[1];
    this.props.addEndListener(maybeNode, maybeNextCallback);
} if (timeout != null) {
    setTimeout(this.nextCallback, timeout);
} }; _proto.render = function render() { var status = this.state.status; if (status === UNMOUNTED) {
    return null;
} var _this$props = this.props, children = _this$props.children; _this$props["in"]; _this$props.mountOnEnter; _this$props.unmountOnExit; _this$props.appear; _this$props.enter; _this$props.exit; _this$props.timeout; _this$props.addEndListener; _this$props.onEnter; _this$props.onEntering; _this$props.onEntered; _this$props.onExit; _this$props.onExiting; _this$props.onExited; _this$props.nodeRef; var childProps = _objectWithoutPropertiesLoose$2(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]); return /*#__PURE__*/ wn.createElement(TransitionGroupContext.Provider, { value: null }, typeof children === 'function' ? children(status, childProps) : /*#__PURE__*/ wn.cloneElement(wn.Children.only(children), childProps)); }; return Transition; }(wn.Component);
Transition.contextType = TransitionGroupContext;
Transition.propTypes = {};
function noop$1() { }
Transition.defaultProps = { "in": false, mountOnEnter: false, unmountOnExit: false, appear: false, enter: true, exit: true, onEnter: noop$1, onEntering: noop$1, onEntered: noop$1, onExit: noop$1, onExiting: noop$1, onExited: noop$1 };
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;
function getChildMapping(children, mapFn) { var mapper = function mapper(child) { return mapFn && /*#__PURE__*/ fn(child) ? mapFn(child) : child; }; var result = Object.create(null); if (children)
    A$3.map(children, function (c) { return c; }).forEach(function (child) { result[child.key] = mapper(child); }); return result; }
function mergeChildMappings(prev, next) { prev = prev || {}; next = next || {}; function getValueForKey(key) { return key in next ? next[key] : prev[key]; } var nextKeysPending = Object.create(null); var pendingKeys = []; for (var prevKey in prev) {
    if (prevKey in next) {
        if (pendingKeys.length) {
            nextKeysPending[prevKey] = pendingKeys;
            pendingKeys = [];
        }
    }
    else {
        pendingKeys.push(prevKey);
    }
} var i; var childMapping = {}; for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
        for (i = 0; i < nextKeysPending[nextKey].length; i++) {
            var pendingNextKey = nextKeysPending[nextKey][i];
            childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
        }
    }
    childMapping[nextKey] = getValueForKey(nextKey);
} for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
} return childMapping; }
function getProp(child, prop, props) { return props[prop] != null ? props[prop] : child.props[prop]; }
function getInitialChildMapping(props, onExited) { return getChildMapping(props.children, function (child) { return /*#__PURE__*/ sn(child, { onExited: onExited.bind(null, child), "in": true, appear: getProp(child, 'appear', props), enter: getProp(child, 'enter', props), exit: getProp(child, 'exit', props) }); }); }
function getNextChildMapping(nextProps, prevChildMapping, onExited) { var nextChildMapping = getChildMapping(nextProps.children); var children = mergeChildMappings(prevChildMapping, nextChildMapping); Object.keys(children).forEach(function (key) { var child = children[key]; if (!fn(child))
    return; var hasPrev = (key in prevChildMapping); var hasNext = (key in nextChildMapping); var prevChild = prevChildMapping[key]; var isLeaving = /*#__PURE__*/ fn(prevChild) && !prevChild.props["in"]; if (hasNext && (!hasPrev || isLeaving)) {
    children[key] = /*#__PURE__*/ sn(child, { onExited: onExited.bind(null, child), "in": true, exit: getProp(child, 'exit', nextProps), enter: getProp(child, 'enter', nextProps) });
}
else if (!hasNext && hasPrev && !isLeaving) {
    children[key] = /*#__PURE__*/ sn(child, { "in": false });
}
else if (hasNext && hasPrev && /*#__PURE__*/ fn(prevChild)) {
    children[key] = /*#__PURE__*/ sn(child, { onExited: onExited.bind(null, child), "in": prevChild.props["in"], exit: getProp(child, 'exit', nextProps), enter: getProp(child, 'enter', nextProps) });
} }); return children; }
var values = Object.values || function (obj) { return Object.keys(obj).map(function (k) { return obj[k]; }); };
var defaultProps = { component: 'div', childFactory: function childFactory(child) { return child; } };
var TransitionGroup = /*#__PURE__*/ function (_React$Component) { _inheritsLoose(TransitionGroup, _React$Component); function TransitionGroup(props, context) { var _this; _this = _React$Component.call(this, props, context) || this; var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); _this.state = { contextValue: { isMounting: true }, handleExited: handleExited, firstRender: true }; return _this; } var _proto = TransitionGroup.prototype; _proto.componentDidMount = function componentDidMount() { this.mounted = true; this.setState({ contextValue: { isMounting: false } }); }; _proto.componentWillUnmount = function componentWillUnmount() { this.mounted = false; }; TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) { var prevChildMapping = _ref.children, handleExited = _ref.handleExited, firstRender = _ref.firstRender; return { children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited), firstRender: false }; }; _proto.handleExited = function handleExited(child, node) { var currentChildMapping = getChildMapping(this.props.children); if (child.key in currentChildMapping)
    return; if (child.props.onExited) {
    child.props.onExited(node);
} if (this.mounted) {
    this.setState(function (state) { var children = _extends$3({}, state.children); delete children[child.key]; return { children: children }; });
} }; _proto.render = function render() { var _this$props = this.props, Component = _this$props.component, childFactory = _this$props.childFactory, props = _objectWithoutPropertiesLoose$2(_this$props, ["component", "childFactory"]); var contextValue = this.state.contextValue; var children = values(this.state.children).map(childFactory); delete props.appear; delete props.enter; delete props.exit; if (Component === null) {
    return /*#__PURE__*/ wn.createElement(TransitionGroupContext.Provider, { value: contextValue }, children);
} return /*#__PURE__*/ wn.createElement(TransitionGroupContext.Provider, { value: contextValue }, /*#__PURE__*/ wn.createElement(Component, props, children)); }; return TransitionGroup; }(wn.Component);
TransitionGroup.propTypes = {};
TransitionGroup.defaultProps = defaultProps;
var reflow = function reflow(node) { return node.scrollTop; };
function getTransitionProps(props, options) { var timeout = props.timeout, _props$style = props.style, style = _props$style === void 0 ? {} : _props$style; return { duration: style.transitionDuration || typeof timeout === 'number' ? timeout : timeout[options.mode] || 0, delay: style.transitionDelay }; }
var styles$I = function styles(theme) { return { root: { height: 0, overflow: 'hidden', transition: theme.transitions.create('height') }, entered: { height: 'auto', overflow: 'visible' }, hidden: { visibility: 'hidden' }, wrapper: { display: 'flex' }, wrapperInner: { width: '100%' } }; };
var Collapse = /*#__PURE__*/ N$1(function Collapse(props, ref) { var children = props.children, classes = props.classes, className = props.className, collapsedHeight = props.collapsedHeight, _props$collapsedSize = props.collapsedSize, collapsedSizeProp = _props$collapsedSize === void 0 ? '0px' : _props$collapsedSize, _props$component = props.component, Component = _props$component === void 0 ? 'div' : _props$component, _props$disableStrictM = props.disableStrictModeCompat, disableStrictModeCompat = _props$disableStrictM === void 0 ? false : _props$disableStrictM, inProp = props["in"], onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, style = props.style, _props$timeout = props.timeout, timeout = _props$timeout === void 0 ? duration.standard : _props$timeout, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Transition : _props$TransitionComp, other = _objectWithoutProperties$2(props, ["children", "classes", "className", "collapsedHeight", "collapsedSize", "component", "disableStrictModeCompat", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"]); var theme = useTheme(); var timer = _$1(); var wrapperRef = _$1(null); var autoTransitionDuration = _$1(); var collapsedSize = typeof (collapsedHeight || collapsedSizeProp) === 'number' ? "".concat(collapsedHeight || collapsedSizeProp, "px") : collapsedHeight || collapsedSizeProp; p$3(function () { return function () { clearTimeout(timer.current); }; }, []); var enableStrictModeCompat = theme.unstable_strictMode && !disableStrictModeCompat; var nodeRef = _$1(null); var handleRef = useForkRef(ref, enableStrictModeCompat ? nodeRef : undefined); var normalizedTransitionCallback = function normalizedTransitionCallback(callback) { return function (nodeOrAppearing, maybeAppearing) { if (callback) {
    var _ref = enableStrictModeCompat ? [nodeRef.current, nodeOrAppearing] : [nodeOrAppearing, maybeAppearing], _ref2 = _slicedToArray(_ref, 2), node = _ref2[0], isAppearing = _ref2[1];
    if (isAppearing === undefined) {
        callback(node);
    }
    else {
        callback(node, isAppearing);
    }
} }; }; var handleEnter = normalizedTransitionCallback(function (node, isAppearing) { node.style.height = collapsedSize; if (onEnter) {
    onEnter(node, isAppearing);
} }); var handleEntering = normalizedTransitionCallback(function (node, isAppearing) { var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0; var _getTransitionProps = getTransitionProps({ style: style, timeout: timeout }, { mode: 'enter' }), transitionDuration = _getTransitionProps.duration; if (timeout === 'auto') {
    var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);
    node.style.transitionDuration = "".concat(duration2, "ms");
    autoTransitionDuration.current = duration2;
}
else {
    node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : "".concat(transitionDuration, "ms");
} node.style.height = "".concat(wrapperHeight, "px"); if (onEntering) {
    onEntering(node, isAppearing);
} }); var handleEntered = normalizedTransitionCallback(function (node, isAppearing) { node.style.height = 'auto'; if (onEntered) {
    onEntered(node, isAppearing);
} }); var handleExit = normalizedTransitionCallback(function (node) { var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0; node.style.height = "".concat(wrapperHeight, "px"); if (onExit) {
    onExit(node);
} }); var handleExited = normalizedTransitionCallback(onExited); var handleExiting = normalizedTransitionCallback(function (node) { var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0; var _getTransitionProps2 = getTransitionProps({ style: style, timeout: timeout }, { mode: 'exit' }), transitionDuration = _getTransitionProps2.duration; if (timeout === 'auto') {
    var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);
    node.style.transitionDuration = "".concat(duration2, "ms");
    autoTransitionDuration.current = duration2;
}
else {
    node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : "".concat(transitionDuration, "ms");
} node.style.height = collapsedSize; if (onExiting) {
    onExiting(node);
} }); var addEndListener = function addEndListener(nodeOrNext, maybeNext) { var next = enableStrictModeCompat ? nodeOrNext : maybeNext; if (timeout === 'auto') {
    timer.current = setTimeout(next, autoTransitionDuration.current || 0);
} }; return /*#__PURE__*/ y$3(TransitionComponent, _extends$4({ "in": inProp, onEnter: handleEnter, onEntered: handleEntered, onEntering: handleEntering, onExit: handleExit, onExited: handleExited, onExiting: handleExiting, addEndListener: addEndListener, nodeRef: enableStrictModeCompat ? nodeRef : undefined, timeout: timeout === 'auto' ? null : timeout }, other), function (state, childProps) { return /*#__PURE__*/ y$3(Component, _extends$4({ className: clsx(classes.root, classes.container, className, { 'entered': classes.entered, 'exited': !inProp && collapsedSize === '0px' && classes.hidden }[state]), style: _extends$4({ minHeight: collapsedSize }, style), ref: handleRef }, childProps), /*#__PURE__*/ y$3("div", { className: classes.wrapper, ref: wrapperRef }, /*#__PURE__*/ y$3("div", { className: classes.wrapperInner }, children))); }); });
Collapse.muiSupportAuto = true;
var Collapse$1 = withStyles(styles$I, { name: 'MuiCollapse' })(Collapse);
var styles$H = function styles(theme) { var elevations = {}; theme.shadows.forEach(function (shadow, index) { elevations["elevation".concat(index)] = { boxShadow: shadow }; }); return _extends$4({ root: { backgroundColor: theme.palette.background.paper, color: theme.palette.text.primary, transition: theme.transitions.create('box-shadow') }, rounded: { borderRadius: theme.shape.borderRadius }, outlined: { border: "1px solid ".concat(theme.palette.divider) } }, elevations); };
var Paper = /*#__PURE__*/ N$1(function Paper(props, ref) { var classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? 'div' : _props$component, _props$square = props.square, square = _props$square === void 0 ? false : _props$square, _props$elevation = props.elevation, elevation = _props$elevation === void 0 ? 1 : _props$elevation, _props$variant = props.variant, variant = _props$variant === void 0 ? 'elevation' : _props$variant, other = _objectWithoutProperties$2(props, ["classes", "className", "component", "square", "elevation", "variant"]); return /*#__PURE__*/ y$3(Component, _extends$4({ className: clsx(classes.root, className, variant === 'outlined' ? classes.outlined : classes["elevation".concat(elevation)], !square && classes.rounded), ref: ref }, other)); });
var Paper$1 = withStyles(styles$H, { name: 'MuiPaper' })(Paper);
var AccordionContext = /*#__PURE__*/ F$4({});
var styles$G = function styles(theme) { var transition = { duration: theme.transitions.duration.shortest }; return { root: { position: 'relative', transition: theme.transitions.create(['margin'], transition), '&:before': { position: 'absolute', left: 0, top: -1, right: 0, height: 1, content: '""', opacity: 1, backgroundColor: theme.palette.divider, transition: theme.transitions.create(['opacity', 'background-color'], transition) }, '&:first-child': { '&:before': { display: 'none' } }, '&$expanded': { margin: '16px 0', '&:first-child': { marginTop: 0 }, '&:last-child': { marginBottom: 0 }, '&:before': { opacity: 0 } }, '&$expanded + &': { '&:before': { display: 'none' } }, '&$disabled': { backgroundColor: theme.palette.action.disabledBackground } }, rounded: { borderRadius: 0, '&:first-child': { borderTopLeftRadius: theme.shape.borderRadius, borderTopRightRadius: theme.shape.borderRadius }, '&:last-child': { borderBottomLeftRadius: theme.shape.borderRadius, borderBottomRightRadius: theme.shape.borderRadius, '@supports (-ms-ime-align: auto)': { borderBottomLeftRadius: 0, borderBottomRightRadius: 0 } } }, expanded: {}, disabled: {} }; };
var Accordion$1 = /*#__PURE__*/ N$1(function Accordion(props, ref) { var childrenProp = props.children, classes = props.classes, className = props.className, _props$defaultExpande = props.defaultExpanded, defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, expandedProp = props.expanded, onChange = props.onChange, _props$square = props.square, square = _props$square === void 0 ? false : _props$square, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Collapse$1 : _props$TransitionComp, TransitionProps = props.TransitionProps, other = _objectWithoutProperties$2(props, ["children", "classes", "className", "defaultExpanded", "disabled", "expanded", "onChange", "square", "TransitionComponent", "TransitionProps"]); var _useControlled = useControlled({ controlled: expandedProp, "default": defaultExpanded, name: 'Accordion', state: 'expanded' }), _useControlled2 = _slicedToArray(_useControlled, 2), expanded = _useControlled2[0], setExpandedState = _useControlled2[1]; var handleChange = T$2(function (event) { setExpandedState(!expanded); if (onChange) {
    onChange(event, !expanded);
} }, [expanded, onChange, setExpandedState]); var _React$Children$toArr = A$3.toArray(childrenProp), _React$Children$toArr2 = _toArray(_React$Children$toArr), summary = _React$Children$toArr2[0], children = _React$Children$toArr2.slice(1); var contextValue = F$3(function () { return { expanded: expanded, disabled: disabled, toggle: handleChange }; }, [expanded, disabled, handleChange]); return /*#__PURE__*/ y$3(Paper$1, _extends$4({ className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded), ref: ref, square: square }, other), /*#__PURE__*/ y$3(AccordionContext.Provider, { value: contextValue }, summary), /*#__PURE__*/ y$3(TransitionComponent, _extends$4({ "in": expanded, timeout: "auto" }, TransitionProps), /*#__PURE__*/ y$3("div", { "aria-labelledby": summary.props.id, id: summary.props['aria-controls'], role: "region" }, children))); });
var MUIAccordion = withStyles(styles$G, { name: 'MuiAccordion' })(Accordion$1);
var styles$F = function styles(theme) { return { root: { display: 'flex', padding: theme.spacing(1, 2, 2) } }; };
var AccordionDetails$1 = /*#__PURE__*/ N$1(function AccordionDetails(props, ref) { var classes = props.classes, className = props.className, other = _objectWithoutProperties$2(props, ["classes", "className"]); return /*#__PURE__*/ y$3("div", _extends$4({ className: clsx(classes.root, className), ref: ref }, other)); });
var MUIAccordionDetails = withStyles(styles$F, { name: 'MuiAccordionDetails' })(AccordionDetails$1);
function _arrayWithoutHoles(arr) { if (Array.isArray(arr))
    return _arrayLikeToArray(arr); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
var useEnhancedEffect$6 = typeof window === 'undefined' ? p$3 : y$2;
function Ripple(props) { var classes = props.classes, _props$pulsate = props.pulsate, pulsate = _props$pulsate === void 0 ? false : _props$pulsate, rippleX = props.rippleX, rippleY = props.rippleY, rippleSize = props.rippleSize, inProp = props["in"], _props$onExited = props.onExited, onExited = _props$onExited === void 0 ? function () { } : _props$onExited, timeout = props.timeout; var _React$useState = h$4(false), leaving = _React$useState[0], setLeaving = _React$useState[1]; var rippleClassName = clsx(classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate); var rippleStyles = { width: rippleSize, height: rippleSize, top: -(rippleSize / 2) + rippleY, left: -(rippleSize / 2) + rippleX }; var childClassName = clsx(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate); var handleExited = useEventCallback(onExited); useEnhancedEffect$6(function () { if (!inProp) {
    setLeaving(true);
    var timeoutId = setTimeout(handleExited, timeout);
    return function () { clearTimeout(timeoutId); };
} return undefined; }, [handleExited, inProp, timeout]); return /*#__PURE__*/ y$3("span", { className: rippleClassName, style: rippleStyles }, /*#__PURE__*/ y$3("span", { className: childClassName })); }
var DURATION = 550;
var DELAY_RIPPLE = 80;
var styles$E = function styles(theme) { return { root: { overflow: 'hidden', pointerEvents: 'none', position: 'absolute', zIndex: 0, top: 0, right: 0, bottom: 0, left: 0, borderRadius: 'inherit' }, ripple: { opacity: 0, position: 'absolute' }, rippleVisible: { opacity: 0.3, transform: 'scale(1)', animation: "$enter ".concat(DURATION, "ms ").concat(theme.transitions.easing.easeInOut) }, ripplePulsate: { animationDuration: "".concat(theme.transitions.duration.shorter, "ms") }, child: { opacity: 1, display: 'block', width: '100%', height: '100%', borderRadius: '50%', backgroundColor: 'currentColor' }, childLeaving: { opacity: 0, animation: "$exit ".concat(DURATION, "ms ").concat(theme.transitions.easing.easeInOut) }, childPulsate: { position: 'absolute', left: 0, top: 0, animation: "$pulsate 2500ms ".concat(theme.transitions.easing.easeInOut, " 200ms infinite") }, '@keyframes enter': { '0%': { transform: 'scale(0)', opacity: 0.1 }, '100%': { transform: 'scale(1)', opacity: 0.3 } }, '@keyframes exit': { '0%': { opacity: 1 }, '100%': { opacity: 0 } }, '@keyframes pulsate': { '0%': { transform: 'scale(1)' }, '50%': { transform: 'scale(0.92)' }, '100%': { transform: 'scale(1)' } } }; };
var TouchRipple = /*#__PURE__*/ N$1(function TouchRipple(props, ref) { var _props$center = props.center, centerProp = _props$center === void 0 ? false : _props$center, classes = props.classes, className = props.className, other = _objectWithoutProperties$2(props, ["center", "classes", "className"]); var _React$useState = h$4([]), ripples = _React$useState[0], setRipples = _React$useState[1]; var nextKey = _$1(0); var rippleCallback = _$1(null); p$3(function () { if (rippleCallback.current) {
    rippleCallback.current();
    rippleCallback.current = null;
} }, [ripples]); var ignoringMouseDown = _$1(false); var startTimer = _$1(null); var startTimerCommit = _$1(null); var container = _$1(null); p$3(function () { return function () { clearTimeout(startTimer.current); }; }, []); var startCommit = T$2(function (params) { var pulsate = params.pulsate, rippleX = params.rippleX, rippleY = params.rippleY, rippleSize = params.rippleSize, cb = params.cb; setRipples(function (oldRipples) { return [].concat(_toConsumableArray(oldRipples), [/*#__PURE__*/ y$3(Ripple, { key: nextKey.current, classes: classes, timeout: DURATION, pulsate: pulsate, rippleX: rippleX, rippleY: rippleY, rippleSize: rippleSize })]); }); nextKey.current += 1; rippleCallback.current = cb; }, [classes]); var start = T$2(function () { var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; var cb = arguments.length > 2 ? arguments[2] : undefined; var _options$pulsate = options.pulsate, pulsate = _options$pulsate === void 0 ? false : _options$pulsate, _options$center = options.center, center = _options$center === void 0 ? centerProp || options.pulsate : _options$center, _options$fakeElement = options.fakeElement, fakeElement = _options$fakeElement === void 0 ? false : _options$fakeElement; if (event.type === 'mousedown' && ignoringMouseDown.current) {
    ignoringMouseDown.current = false;
    return;
} if (event.type === 'touchstart') {
    ignoringMouseDown.current = true;
} var element = fakeElement ? null : container.current; var rect = element ? element.getBoundingClientRect() : { width: 0, height: 0, left: 0, top: 0 }; var rippleX; var rippleY; var rippleSize; if (center || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {
    rippleX = Math.round(rect.width / 2);
    rippleY = Math.round(rect.height / 2);
}
else {
    var _ref = event.touches ? event.touches[0] : event, clientX = _ref.clientX, clientY = _ref.clientY;
    rippleX = Math.round(clientX - rect.left);
    rippleY = Math.round(clientY - rect.top);
} if (center) {
    rippleSize = Math.sqrt((2 * Math.pow(rect.width, 2) + Math.pow(rect.height, 2)) / 3);
    if (rippleSize % 2 === 0) {
        rippleSize += 1;
    }
}
else {
    var sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;
    var sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;
    rippleSize = Math.sqrt(Math.pow(sizeX, 2) + Math.pow(sizeY, 2));
} if (event.touches) {
    if (startTimerCommit.current === null) {
        startTimerCommit.current = function () { startCommit({ pulsate: pulsate, rippleX: rippleX, rippleY: rippleY, rippleSize: rippleSize, cb: cb }); };
        startTimer.current = setTimeout(function () { if (startTimerCommit.current) {
            startTimerCommit.current();
            startTimerCommit.current = null;
        } }, DELAY_RIPPLE);
    }
}
else {
    startCommit({ pulsate: pulsate, rippleX: rippleX, rippleY: rippleY, rippleSize: rippleSize, cb: cb });
} }, [centerProp, startCommit]); var pulsate = T$2(function () { start({}, { pulsate: true }); }, [start]); var stop = T$2(function (event, cb) { clearTimeout(startTimer.current); if (event.type === 'touchend' && startTimerCommit.current) {
    event.persist();
    startTimerCommit.current();
    startTimerCommit.current = null;
    startTimer.current = setTimeout(function () { stop(event, cb); });
    return;
} startTimerCommit.current = null; setRipples(function (oldRipples) { if (oldRipples.length > 0) {
    return oldRipples.slice(1);
} return oldRipples; }); rippleCallback.current = cb; }, []); A$4(ref, function () { return { pulsate: pulsate, start: start, stop: stop }; }, [pulsate, start, stop]); return /*#__PURE__*/ y$3("span", _extends$4({ className: clsx(classes.root, className), ref: container }, other), /*#__PURE__*/ y$3(TransitionGroup, { component: null, exit: true }, ripples)); });
var TouchRipple$1 = withStyles(styles$E, { flip: false, name: 'MuiTouchRipple' })(/*#__PURE__*/ w$3(TouchRipple));
var styles$D = { root: { display: 'inline-flex', alignItems: 'center', justifyContent: 'center', position: 'relative', WebkitTapHighlightColor: 'transparent', backgroundColor: 'transparent', outline: 0, border: 0, margin: 0, borderRadius: 0, padding: 0, cursor: 'pointer', userSelect: 'none', verticalAlign: 'middle', '-moz-appearance': 'none', '-webkit-appearance': 'none', textDecoration: 'none', color: 'inherit', '&::-moz-focus-inner': { borderStyle: 'none' }, '&$disabled': { pointerEvents: 'none', cursor: 'default' }, '@media print': { colorAdjust: 'exact' } }, disabled: {}, focusVisible: {} };
var ButtonBase = /*#__PURE__*/ N$1(function ButtonBase(props, ref) { var action = props.action, buttonRefProp = props.buttonRef, _props$centerRipple = props.centerRipple, centerRipple = _props$centerRipple === void 0 ? false : _props$centerRipple, children = props.children, classes = props.classes, className = props.className, _props$component = props.component, component = _props$component === void 0 ? 'button' : _props$component, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, _props$disableRipple = props.disableRipple, disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple, _props$disableTouchRi = props.disableTouchRipple, disableTouchRipple = _props$disableTouchRi === void 0 ? false : _props$disableTouchRi, _props$focusRipple = props.focusRipple, focusRipple = _props$focusRipple === void 0 ? false : _props$focusRipple, focusVisibleClassName = props.focusVisibleClassName, onBlur = props.onBlur, onClick = props.onClick, onFocus = props.onFocus, onFocusVisible = props.onFocusVisible, onKeyDown = props.onKeyDown, onKeyUp = props.onKeyUp, onMouseDown = props.onMouseDown, onMouseLeave = props.onMouseLeave, onMouseUp = props.onMouseUp, onTouchEnd = props.onTouchEnd, onTouchMove = props.onTouchMove, onTouchStart = props.onTouchStart, onDragLeave = props.onDragLeave, _props$tabIndex = props.tabIndex, tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex, TouchRippleProps = props.TouchRippleProps, _props$type = props.type, type = _props$type === void 0 ? 'button' : _props$type, other = _objectWithoutProperties$2(props, ["action", "buttonRef", "centerRipple", "children", "classes", "className", "component", "disabled", "disableRipple", "disableTouchRipple", "focusRipple", "focusVisibleClassName", "onBlur", "onClick", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseLeave", "onMouseUp", "onTouchEnd", "onTouchMove", "onTouchStart", "onDragLeave", "tabIndex", "TouchRippleProps", "type"]); var buttonRef = _$1(null); function getButtonNode() { return vn(buttonRef.current); } var rippleRef = _$1(null); var _React$useState = h$4(false), focusVisible = _React$useState[0], setFocusVisible = _React$useState[1]; if (disabled && focusVisible) {
    setFocusVisible(false);
} var _useIsFocusVisible = useIsFocusVisible(), isFocusVisible = _useIsFocusVisible.isFocusVisible, onBlurVisible = _useIsFocusVisible.onBlurVisible, focusVisibleRef = _useIsFocusVisible.ref; A$4(action, function () { return { focusVisible: function focusVisible() { setFocusVisible(true); buttonRef.current.focus(); } }; }, []); p$3(function () { if (focusVisible && focusRipple && !disableRipple) {
    rippleRef.current.pulsate();
} }, [disableRipple, focusRipple, focusVisible]); function useRippleHandler(rippleAction, eventCallback) { var skipRippleAction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : disableTouchRipple; return useEventCallback(function (event) { if (eventCallback) {
    eventCallback(event);
} var ignore = skipRippleAction; if (!ignore && rippleRef.current) {
    rippleRef.current[rippleAction](event);
} return true; }); } var handleMouseDown = useRippleHandler('start', onMouseDown); var handleDragLeave = useRippleHandler('stop', onDragLeave); var handleMouseUp = useRippleHandler('stop', onMouseUp); var handleMouseLeave = useRippleHandler('stop', function (event) { if (focusVisible) {
    event.preventDefault();
} if (onMouseLeave) {
    onMouseLeave(event);
} }); var handleTouchStart = useRippleHandler('start', onTouchStart); var handleTouchEnd = useRippleHandler('stop', onTouchEnd); var handleTouchMove = useRippleHandler('stop', onTouchMove); var handleBlur = useRippleHandler('stop', function (event) { if (focusVisible) {
    onBlurVisible(event);
    setFocusVisible(false);
} if (onBlur) {
    onBlur(event);
} }, false); var handleFocus = useEventCallback(function (event) { if (!buttonRef.current) {
    buttonRef.current = event.currentTarget;
} if (isFocusVisible(event)) {
    setFocusVisible(true);
    if (onFocusVisible) {
        onFocusVisible(event);
    }
} if (onFocus) {
    onFocus(event);
} }); var isNonNativeButton = function isNonNativeButton() { var button = getButtonNode(); return component && component !== 'button' && !(button.tagName === 'A' && button.href); }; var keydownRef = _$1(false); var handleKeyDown = useEventCallback(function (event) { if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {
    keydownRef.current = true;
    event.persist();
    rippleRef.current.stop(event, function () { rippleRef.current.start(event); });
} if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {
    event.preventDefault();
} if (onKeyDown) {
    onKeyDown(event);
} if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {
    event.preventDefault();
    if (onClick) {
        onClick(event);
    }
} }); var handleKeyUp = useEventCallback(function (event) { if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {
    keydownRef.current = false;
    event.persist();
    rippleRef.current.stop(event, function () { rippleRef.current.pulsate(event); });
} if (onKeyUp) {
    onKeyUp(event);
} if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {
    onClick(event);
} }); var ComponentProp = component; if (ComponentProp === 'button' && other.href) {
    ComponentProp = 'a';
} var buttonProps = {}; if (ComponentProp === 'button') {
    buttonProps.type = type;
    buttonProps.disabled = disabled;
}
else {
    if (ComponentProp !== 'a' || !other.href) {
        buttonProps.role = 'button';
    }
    buttonProps['aria-disabled'] = disabled;
} var handleUserRef = useForkRef(buttonRefProp, ref); var handleOwnRef = useForkRef(focusVisibleRef, buttonRef); var handleRef = useForkRef(handleUserRef, handleOwnRef); var _React$useState2 = h$4(false), mountedState = _React$useState2[0], setMountedState = _React$useState2[1]; p$3(function () { setMountedState(true); }, []); var enableTouchRipple = mountedState && !disableRipple && !disabled; return /*#__PURE__*/ y$3(ComponentProp, _extends$4({ className: clsx(classes.root, className, focusVisible && [classes.focusVisible, focusVisibleClassName], disabled && classes.disabled), onBlur: handleBlur, onClick: onClick, onFocus: handleFocus, onKeyDown: handleKeyDown, onKeyUp: handleKeyUp, onMouseDown: handleMouseDown, onMouseLeave: handleMouseLeave, onMouseUp: handleMouseUp, onDragLeave: handleDragLeave, onTouchEnd: handleTouchEnd, onTouchMove: handleTouchMove, onTouchStart: handleTouchStart, ref: handleRef, tabIndex: disabled ? -1 : tabIndex }, buttonProps, other), children, enableTouchRipple ? /*#__PURE__*/ y$3(TouchRipple$1, _extends$4({ ref: rippleRef, center: centerRipple }, TouchRippleProps)) : null); });
var ButtonBase$1 = withStyles(styles$D, { name: 'MuiButtonBase' })(ButtonBase);
var styles$C = function styles(theme) { return { root: { textAlign: 'center', flex: '0 0 auto', fontSize: theme.typography.pxToRem(24), padding: 12, borderRadius: '50%', overflow: 'visible', color: theme.palette.action.active, transition: theme.transitions.create('background-color', { duration: theme.transitions.duration.shortest }), '&:hover': { backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity), '@media (hover: none)': { backgroundColor: 'transparent' } }, '&$disabled': { backgroundColor: 'transparent', color: theme.palette.action.disabled } }, edgeStart: { marginLeft: -12, '$sizeSmall&': { marginLeft: -3 } }, edgeEnd: { marginRight: -12, '$sizeSmall&': { marginRight: -3 } }, colorInherit: { color: 'inherit' }, colorPrimary: { color: theme.palette.primary.main, '&:hover': { backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity), '@media (hover: none)': { backgroundColor: 'transparent' } } }, colorSecondary: { color: theme.palette.secondary.main, '&:hover': { backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity), '@media (hover: none)': { backgroundColor: 'transparent' } } }, disabled: {}, sizeSmall: { padding: 3, fontSize: theme.typography.pxToRem(18) }, label: { width: '100%', display: 'flex', alignItems: 'inherit', justifyContent: 'inherit' } }; };
var IconButton = /*#__PURE__*/ N$1(function IconButton(props, ref) { var _props$edge = props.edge, edge = _props$edge === void 0 ? false : _props$edge, children = props.children, classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'default' : _props$color, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, _props$disableFocusRi = props.disableFocusRipple, disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi, _props$size = props.size, size = _props$size === void 0 ? 'medium' : _props$size, other = _objectWithoutProperties$2(props, ["edge", "children", "classes", "className", "color", "disabled", "disableFocusRipple", "size"]); return /*#__PURE__*/ y$3(ButtonBase$1, _extends$4({ className: clsx(classes.root, className, color !== 'default' && classes["color".concat(capitalize(color))], disabled && classes.disabled, size === "small" && classes["size".concat(capitalize(size))], { 'start': classes.edgeStart, 'end': classes.edgeEnd }[edge]), centerRipple: true, focusRipple: !disableFocusRipple, disabled: disabled, ref: ref }, other), /*#__PURE__*/ y$3("span", { className: classes.label }, children)); });
var IconButton$1 = withStyles(styles$C, { name: 'MuiIconButton' })(IconButton);
var styles$B = function styles(theme) { var transition = { duration: theme.transitions.duration.shortest }; return { root: { display: 'flex', minHeight: 8 * 6, transition: theme.transitions.create(['min-height', 'background-color'], transition), padding: theme.spacing(0, 2), '&:hover:not($disabled)': { cursor: 'pointer' }, '&$expanded': { minHeight: 64 }, '&$focused, &$focusVisible': { backgroundColor: theme.palette.action.focus }, '&$disabled': { opacity: theme.palette.action.disabledOpacity } }, expanded: {}, focused: {}, focusVisible: {}, disabled: {}, content: { display: 'flex', flexGrow: 1, transition: theme.transitions.create(['margin'], transition), margin: '12px 0', '&$expanded': { margin: '20px 0' } }, expandIcon: { transform: 'rotate(0deg)', transition: theme.transitions.create('transform', transition), '&:hover': { backgroundColor: 'transparent' }, '&$expanded': { transform: 'rotate(180deg)' } } }; };
var AccordionSummary$1 = /*#__PURE__*/ N$1(function AccordionSummary(props, ref) { var children = props.children, classes = props.classes, className = props.className, expandIcon = props.expandIcon, focusVisibleClassName = props.focusVisibleClassName, _props$IconButtonProp = props.IconButtonProps, IconButtonProps = _props$IconButtonProp === void 0 ? {} : _props$IconButtonProp, onClick = props.onClick, other = _objectWithoutProperties$2(props, ["children", "classes", "className", "expandIcon", "focusVisibleClassName", "IconButtonProps", "onClick"]); var _React$useContext = q$5(AccordionContext), _React$useContext$dis = _React$useContext.disabled, disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis, expanded = _React$useContext.expanded, toggle = _React$useContext.toggle; var handleChange = function handleChange(event) { if (toggle) {
    toggle(event);
} if (onClick) {
    onClick(event);
} }; return /*#__PURE__*/ y$3(ButtonBase$1, _extends$4({ focusRipple: false, disableRipple: true, disabled: disabled, component: "div", "aria-expanded": expanded, className: clsx(classes.root, className, disabled && classes.disabled, expanded && classes.expanded), focusVisibleClassName: clsx(classes.focusVisible, classes.focused, focusVisibleClassName), onClick: handleChange, ref: ref }, other), /*#__PURE__*/ y$3("div", { className: clsx(classes.content, expanded && classes.expanded) }, children), expandIcon && /*#__PURE__*/ y$3(IconButton$1, _extends$4({ className: clsx(classes.expandIcon, expanded && classes.expanded), edge: "end", component: "div", tabIndex: null, role: null, "aria-hidden": true }, IconButtonProps), expandIcon)); });
var MUIAccordionSummary = withStyles(styles$B, { name: 'MuiAccordionSummary' })(AccordionSummary$1);
var styles$A = { entering: { opacity: 1 }, entered: { opacity: 1 } };
var defaultTimeout = { enter: duration.enteringScreen, exit: duration.leavingScreen };
var Fade = /*#__PURE__*/ N$1(function Fade(props, ref) { var children = props.children, _props$disableStrictM = props.disableStrictModeCompat, disableStrictModeCompat = _props$disableStrictM === void 0 ? false : _props$disableStrictM, inProp = props["in"], onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, style = props.style, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Transition : _props$TransitionComp, _props$timeout = props.timeout, timeout = _props$timeout === void 0 ? defaultTimeout : _props$timeout, other = _objectWithoutProperties$2(props, ["children", "disableStrictModeCompat", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "TransitionComponent", "timeout"]); var theme = useTheme(); var enableStrictModeCompat = theme.unstable_strictMode && !disableStrictModeCompat; var nodeRef = _$1(null); var foreignRef = useForkRef(children.ref, ref); var handleRef = useForkRef(enableStrictModeCompat ? nodeRef : undefined, foreignRef); var normalizedTransitionCallback = function normalizedTransitionCallback(callback) { return function (nodeOrAppearing, maybeAppearing) { if (callback) {
    var _ref = enableStrictModeCompat ? [nodeRef.current, nodeOrAppearing] : [nodeOrAppearing, maybeAppearing], _ref2 = _slicedToArray(_ref, 2), node = _ref2[0], isAppearing = _ref2[1];
    if (isAppearing === undefined) {
        callback(node);
    }
    else {
        callback(node, isAppearing);
    }
} }; }; var handleEntering = normalizedTransitionCallback(onEntering); var handleEnter = normalizedTransitionCallback(function (node, isAppearing) { reflow(node); var transitionProps = getTransitionProps({ style: style, timeout: timeout }, { mode: 'enter' }); node.style.webkitTransition = theme.transitions.create('opacity', transitionProps); node.style.transition = theme.transitions.create('opacity', transitionProps); if (onEnter) {
    onEnter(node, isAppearing);
} }); var handleEntered = normalizedTransitionCallback(onEntered); var handleExiting = normalizedTransitionCallback(onExiting); var handleExit = normalizedTransitionCallback(function (node) { var transitionProps = getTransitionProps({ style: style, timeout: timeout }, { mode: 'exit' }); node.style.webkitTransition = theme.transitions.create('opacity', transitionProps); node.style.transition = theme.transitions.create('opacity', transitionProps); if (onExit) {
    onExit(node);
} }); var handleExited = normalizedTransitionCallback(onExited); return /*#__PURE__*/ y$3(TransitionComponent, _extends$4({ appear: true, "in": inProp, nodeRef: enableStrictModeCompat ? nodeRef : undefined, onEnter: handleEnter, onEntered: handleEntered, onEntering: handleEntering, onExit: handleExit, onExited: handleExited, onExiting: handleExiting, timeout: timeout }, other), function (state, childProps) { return /*#__PURE__*/ sn(children, _extends$4({ style: _extends$4({ opacity: 0, visibility: state === 'exited' && !inProp ? 'hidden' : undefined }, styles$A[state], style, children.props.style), ref: handleRef }, childProps)); }); });
var styles$z = { root: { zIndex: -1, position: 'fixed', display: 'flex', alignItems: 'center', justifyContent: 'center', right: 0, bottom: 0, top: 0, left: 0, backgroundColor: 'rgba(0, 0, 0, 0.5)', WebkitTapHighlightColor: 'transparent' }, invisible: { backgroundColor: 'transparent' } };
var Backdrop = /*#__PURE__*/ N$1(function Backdrop(props, ref) { var children = props.children, classes = props.classes, className = props.className, _props$invisible = props.invisible, invisible = _props$invisible === void 0 ? false : _props$invisible, open = props.open, transitionDuration = props.transitionDuration, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Fade : _props$TransitionComp, other = _objectWithoutProperties$2(props, ["children", "classes", "className", "invisible", "open", "transitionDuration", "TransitionComponent"]); return /*#__PURE__*/ y$3(TransitionComponent, _extends$4({ "in": open, timeout: transitionDuration }, other), /*#__PURE__*/ y$3("div", { className: clsx(classes.root, className, invisible && classes.invisible), "aria-hidden": true, ref: ref }, children)); });
var Backdrop$1 = withStyles(styles$z, { name: 'MuiBackdrop' })(Backdrop);
var styles$y = function styles(theme) { return { root: { margin: 0 }, body2: theme.typography.body2, body1: theme.typography.body1, caption: theme.typography.caption, button: theme.typography.button, h1: theme.typography.h1, h2: theme.typography.h2, h3: theme.typography.h3, h4: theme.typography.h4, h5: theme.typography.h5, h6: theme.typography.h6, subtitle1: theme.typography.subtitle1, subtitle2: theme.typography.subtitle2, overline: theme.typography.overline, srOnly: { position: 'absolute', height: 1, width: 1, overflow: 'hidden' }, alignLeft: { textAlign: 'left' }, alignCenter: { textAlign: 'center' }, alignRight: { textAlign: 'right' }, alignJustify: { textAlign: 'justify' }, noWrap: { overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' }, gutterBottom: { marginBottom: '0.35em' }, paragraph: { marginBottom: 16 }, colorInherit: { color: 'inherit' }, colorPrimary: { color: theme.palette.primary.main }, colorSecondary: { color: theme.palette.secondary.main }, colorTextPrimary: { color: theme.palette.text.primary }, colorTextSecondary: { color: theme.palette.text.secondary }, colorError: { color: theme.palette.error.main }, displayInline: { display: 'inline' }, displayBlock: { display: 'block' } }; };
var defaultVariantMapping = { h1: 'h1', h2: 'h2', h3: 'h3', h4: 'h4', h5: 'h5', h6: 'h6', subtitle1: 'h6', subtitle2: 'h6', body1: 'p', body2: 'p' };
var Typography$1 = /*#__PURE__*/ N$1(function Typography(props, ref) { var _props$align = props.align, align = _props$align === void 0 ? 'inherit' : _props$align, classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'initial' : _props$color, component = props.component, _props$display = props.display, display = _props$display === void 0 ? 'initial' : _props$display, _props$gutterBottom = props.gutterBottom, gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom, _props$noWrap = props.noWrap, noWrap = _props$noWrap === void 0 ? false : _props$noWrap, _props$paragraph = props.paragraph, paragraph = _props$paragraph === void 0 ? false : _props$paragraph, _props$variant = props.variant, variant = _props$variant === void 0 ? 'body1' : _props$variant, _props$variantMapping = props.variantMapping, variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping, other = _objectWithoutProperties$2(props, ["align", "classes", "className", "color", "component", "display", "gutterBottom", "noWrap", "paragraph", "variant", "variantMapping"]); var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span'; return /*#__PURE__*/ y$3(Component, _extends$4({ className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes["color".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes["align".concat(capitalize(align))], display !== 'initial' && classes["display".concat(capitalize(display))]), ref: ref }, other)); });
var MUITypography = withStyles(styles$y, { name: 'MuiTypography' })(Typography$1);
var styles$x = function styles(theme) { return { root: _extends$4({}, theme.typography.button, { boxSizing: 'border-box', minWidth: 64, padding: '6px 16px', borderRadius: theme.shape.borderRadius, color: theme.palette.text.primary, transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], { duration: theme.transitions.duration["short"] }), '&:hover': { textDecoration: 'none', backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity), '@media (hover: none)': { backgroundColor: 'transparent' }, '&$disabled': { backgroundColor: 'transparent' } }, '&$disabled': { color: theme.palette.action.disabled } }), label: { width: '100%', display: 'inherit', alignItems: 'inherit', justifyContent: 'inherit' }, text: { padding: '6px 8px' }, textPrimary: { color: theme.palette.primary.main, '&:hover': { backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity), '@media (hover: none)': { backgroundColor: 'transparent' } } }, textSecondary: { color: theme.palette.secondary.main, '&:hover': { backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity), '@media (hover: none)': { backgroundColor: 'transparent' } } }, outlined: { padding: '5px 15px', border: "1px solid ".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'), '&$disabled': { border: "1px solid ".concat(theme.palette.action.disabledBackground) } }, outlinedPrimary: { color: theme.palette.primary.main, border: "1px solid ".concat(alpha(theme.palette.primary.main, 0.5)), '&:hover': { border: "1px solid ".concat(theme.palette.primary.main), backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity), '@media (hover: none)': { backgroundColor: 'transparent' } } }, outlinedSecondary: { color: theme.palette.secondary.main, border: "1px solid ".concat(alpha(theme.palette.secondary.main, 0.5)), '&:hover': { border: "1px solid ".concat(theme.palette.secondary.main), backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity), '@media (hover: none)': { backgroundColor: 'transparent' } }, '&$disabled': { border: "1px solid ".concat(theme.palette.action.disabled) } }, contained: { color: theme.palette.getContrastText(theme.palette.grey[300]), backgroundColor: theme.palette.grey[300], boxShadow: theme.shadows[2], '&:hover': { backgroundColor: theme.palette.grey.A100, boxShadow: theme.shadows[4], '@media (hover: none)': { boxShadow: theme.shadows[2], backgroundColor: theme.palette.grey[300] }, '&$disabled': { backgroundColor: theme.palette.action.disabledBackground } }, '&$focusVisible': { boxShadow: theme.shadows[6] }, '&:active': { boxShadow: theme.shadows[8] }, '&$disabled': { color: theme.palette.action.disabled, boxShadow: theme.shadows[0], backgroundColor: theme.palette.action.disabledBackground } }, containedPrimary: { color: theme.palette.primary.contrastText, backgroundColor: theme.palette.primary.main, '&:hover': { backgroundColor: theme.palette.primary.dark, '@media (hover: none)': { backgroundColor: theme.palette.primary.main } } }, containedSecondary: { color: theme.palette.secondary.contrastText, backgroundColor: theme.palette.secondary.main, '&:hover': { backgroundColor: theme.palette.secondary.dark, '@media (hover: none)': { backgroundColor: theme.palette.secondary.main } } }, disableElevation: { boxShadow: 'none', '&:hover': { boxShadow: 'none' }, '&$focusVisible': { boxShadow: 'none' }, '&:active': { boxShadow: 'none' }, '&$disabled': { boxShadow: 'none' } }, focusVisible: {}, disabled: {}, colorInherit: { color: 'inherit', borderColor: 'currentColor' }, textSizeSmall: { padding: '4px 5px', fontSize: theme.typography.pxToRem(13) }, textSizeLarge: { padding: '8px 11px', fontSize: theme.typography.pxToRem(15) }, outlinedSizeSmall: { padding: '3px 9px', fontSize: theme.typography.pxToRem(13) }, outlinedSizeLarge: { padding: '7px 21px', fontSize: theme.typography.pxToRem(15) }, containedSizeSmall: { padding: '4px 10px', fontSize: theme.typography.pxToRem(13) }, containedSizeLarge: { padding: '8px 22px', fontSize: theme.typography.pxToRem(15) }, sizeSmall: {}, sizeLarge: {}, fullWidth: { width: '100%' }, startIcon: { display: 'inherit', marginRight: 8, marginLeft: -4, '&$iconSizeSmall': { marginLeft: -2 } }, endIcon: { display: 'inherit', marginRight: -4, marginLeft: 8, '&$iconSizeSmall': { marginRight: -2 } }, iconSizeSmall: { '& > *:first-child': { fontSize: 18 } }, iconSizeMedium: { '& > *:first-child': { fontSize: 20 } }, iconSizeLarge: { '& > *:first-child': { fontSize: 22 } } }; };
var Button$1 = /*#__PURE__*/ N$1(function Button(props, ref) { var children = props.children, classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'default' : _props$color, _props$component = props.component, component = _props$component === void 0 ? 'button' : _props$component, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, _props$disableElevati = props.disableElevation, disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati, _props$disableFocusRi = props.disableFocusRipple, disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi, endIconProp = props.endIcon, focusVisibleClassName = props.focusVisibleClassName, _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, _props$size = props.size, size = _props$size === void 0 ? 'medium' : _props$size, startIconProp = props.startIcon, _props$type = props.type, type = _props$type === void 0 ? 'button' : _props$type, _props$variant = props.variant, variant = _props$variant === void 0 ? 'text' : _props$variant, other = _objectWithoutProperties$2(props, ["children", "classes", "className", "color", "component", "disabled", "disableElevation", "disableFocusRipple", "endIcon", "focusVisibleClassName", "fullWidth", "size", "startIcon", "type", "variant"]); var startIcon = startIconProp && /*#__PURE__*/ y$3("span", { className: clsx(classes.startIcon, classes["iconSize".concat(capitalize(size))]) }, startIconProp); var endIcon = endIconProp && /*#__PURE__*/ y$3("span", { className: clsx(classes.endIcon, classes["iconSize".concat(capitalize(size))]) }, endIconProp); return /*#__PURE__*/ y$3(ButtonBase$1, _extends$4({ className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes["".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes["".concat(variant, "Size").concat(capitalize(size))], classes["size".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth), component: component, disabled: disabled, focusRipple: !disableFocusRipple, focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName), ref: ref, type: type }, other), /*#__PURE__*/ y$3("span", { className: classes.label }, startIcon, children, endIcon)); });
var MUIButton = withStyles(styles$x, { name: 'MuiButton' })(Button$1);
var FormControlContext = /*#__PURE__*/ F$4();
function useFormControl$1() { return q$5(FormControlContext); }
function useFormControl() { return q$5(FormControlContext); }
var SIZE = 44;
var styles$w = function styles(theme) { return { root: { display: 'inline-block' }, "static": { transition: theme.transitions.create('transform') }, indeterminate: { animation: '$circular-rotate 1.4s linear infinite' }, determinate: { transition: theme.transitions.create('transform') }, colorPrimary: { color: theme.palette.primary.main }, colorSecondary: { color: theme.palette.secondary.main }, svg: { display: 'block' }, circle: { stroke: 'currentColor' }, circleStatic: { transition: theme.transitions.create('stroke-dashoffset') }, circleIndeterminate: { animation: '$circular-dash 1.4s ease-in-out infinite', strokeDasharray: '80px, 200px', strokeDashoffset: '0px' }, circleDeterminate: { transition: theme.transitions.create('stroke-dashoffset') }, '@keyframes circular-rotate': { '0%': { transformOrigin: '50% 50%' }, '100%': { transform: 'rotate(360deg)' } }, '@keyframes circular-dash': { '0%': { strokeDasharray: '1px, 200px', strokeDashoffset: '0px' }, '50%': { strokeDasharray: '100px, 200px', strokeDashoffset: '-15px' }, '100%': { strokeDasharray: '100px, 200px', strokeDashoffset: '-125px' } }, circleDisableShrink: { animation: 'none' } }; };
var CircularProgress = /*#__PURE__*/ N$1(function CircularProgress(props, ref) { var classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'primary' : _props$color, _props$disableShrink = props.disableShrink, disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink, _props$size = props.size, size = _props$size === void 0 ? 40 : _props$size, style = props.style, _props$thickness = props.thickness, thickness = _props$thickness === void 0 ? 3.6 : _props$thickness, _props$value = props.value, value = _props$value === void 0 ? 0 : _props$value, _props$variant = props.variant, variant = _props$variant === void 0 ? 'indeterminate' : _props$variant, other = _objectWithoutProperties$2(props, ["classes", "className", "color", "disableShrink", "size", "style", "thickness", "value", "variant"]); var circleStyle = {}; var rootStyle = {}; var rootProps = {}; if (variant === 'determinate' || variant === 'static') {
    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);
    circleStyle.strokeDasharray = circumference.toFixed(3);
    rootProps['aria-valuenow'] = Math.round(value);
    circleStyle.strokeDashoffset = "".concat(((100 - value) / 100 * circumference).toFixed(3), "px");
    rootStyle.transform = 'rotate(-90deg)';
} return /*#__PURE__*/ y$3("div", _extends$4({ className: clsx(classes.root, className, color !== 'inherit' && classes["color".concat(capitalize(color))], { 'determinate': classes.determinate, 'indeterminate': classes.indeterminate, 'static': classes["static"] }[variant]), style: _extends$4({ width: size, height: size }, rootStyle, style), ref: ref, role: "progressbar" }, rootProps, other), /*#__PURE__*/ y$3("svg", { className: classes.svg, viewBox: "".concat(SIZE / 2, " ").concat(SIZE / 2, " ").concat(SIZE, " ").concat(SIZE) }, /*#__PURE__*/ y$3("circle", { className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, { 'determinate': classes.circleDeterminate, 'indeterminate': classes.circleIndeterminate, 'static': classes.circleStatic }[variant]), style: circleStyle, cx: SIZE, cy: SIZE, r: (SIZE - thickness) / 2, fill: "none", strokeWidth: thickness }))); });
var CircularProgress$1 = withStyles(styles$w, { name: 'MuiCircularProgress', flip: false })(CircularProgress);
function mapEventPropToEvent(eventProp) { return eventProp.substring(2).toLowerCase(); }
function clickedRootScrollbar(event) { return document.documentElement.clientWidth < event.clientX || document.documentElement.clientHeight < event.clientY; }
function ClickAwayListener(props) { var children = props.children, _props$disableReactTr = props.disableReactTree, disableReactTree = _props$disableReactTr === void 0 ? false : _props$disableReactTr, _props$mouseEvent = props.mouseEvent, mouseEvent = _props$mouseEvent === void 0 ? 'onClick' : _props$mouseEvent, onClickAway = props.onClickAway, _props$touchEvent = props.touchEvent, touchEvent = _props$touchEvent === void 0 ? 'onTouchEnd' : _props$touchEvent; var movedRef = _$1(false); var nodeRef = _$1(null); var activatedRef = _$1(false); var syntheticEventRef = _$1(false); p$3(function () { setTimeout(function () { activatedRef.current = true; }, 0); return function () { activatedRef.current = false; }; }, []); var handleOwnRef = T$2(function (instance) { nodeRef.current = vn(instance); }, []); var handleRef = useForkRef(children.ref, handleOwnRef); var handleClickAway = useEventCallback(function (event) { var insideReactTree = syntheticEventRef.current; syntheticEventRef.current = false; if (!activatedRef.current || !nodeRef.current || clickedRootScrollbar(event)) {
    return;
} if (movedRef.current) {
    movedRef.current = false;
    return;
} var insideDOM; if (event.composedPath) {
    insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;
}
else {
    var doc = ownerDocument(nodeRef.current);
    insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);
} if (!insideDOM && (disableReactTree || !insideReactTree)) {
    onClickAway(event);
} }); var createHandleSynthetic = function createHandleSynthetic(handlerName) { return function (event) { syntheticEventRef.current = true; var childrenPropsHandler = children.props[handlerName]; if (childrenPropsHandler) {
    childrenPropsHandler(event);
} }; }; var childrenProps = { ref: handleRef }; if (touchEvent !== false) {
    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);
} p$3(function () { if (touchEvent !== false) {
    var mappedTouchEvent = mapEventPropToEvent(touchEvent);
    var doc = ownerDocument(nodeRef.current);
    var handleTouchMove = function handleTouchMove() { movedRef.current = true; };
    doc.addEventListener(mappedTouchEvent, handleClickAway);
    doc.addEventListener('touchmove', handleTouchMove);
    return function () { doc.removeEventListener(mappedTouchEvent, handleClickAway); doc.removeEventListener('touchmove', handleTouchMove); };
} return undefined; }, [handleClickAway, touchEvent]); if (mouseEvent !== false) {
    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);
} p$3(function () { if (mouseEvent !== false) {
    var mappedMouseEvent = mapEventPropToEvent(mouseEvent);
    var doc = ownerDocument(nodeRef.current);
    doc.addEventListener(mappedMouseEvent, handleClickAway);
    return function () { doc.removeEventListener(mappedMouseEvent, handleClickAway); };
} return undefined; }, [handleClickAway, mouseEvent]); return /*#__PURE__*/ y$3(g$5, null, /*#__PURE__*/ sn(children, childrenProps)); }
function getContainer$1(container) { container = typeof container === 'function' ? container() : container; return vn(container); }
var useEnhancedEffect$5 = typeof window !== 'undefined' ? y$2 : p$3;
var Portal = /*#__PURE__*/ N$1(function Portal(props, ref) { var children = props.children, container = props.container, _props$disablePortal = props.disablePortal, disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal, onRendered = props.onRendered; var _React$useState = h$4(null), mountNode = _React$useState[0], setMountNode = _React$useState[1]; var handleRef = useForkRef(/*#__PURE__*/ /*#__PURE__*/ fn(children) ? children.ref : null, ref); useEnhancedEffect$5(function () { if (!disablePortal) {
    setMountNode(getContainer$1(container) || document.body);
} }, [container, disablePortal]); useEnhancedEffect$5(function () { if (mountNode && !disablePortal) {
    setRef(ref, mountNode);
    return function () { setRef(ref, null); };
} return undefined; }, [ref, mountNode, disablePortal]); useEnhancedEffect$5(function () { if (onRendered && (mountNode || disablePortal)) {
    onRendered();
} }, [onRendered, mountNode, disablePortal]); if (disablePortal) {
    if ( /*#__PURE__*/fn(children)) {
        return /*#__PURE__*/ sn(children, { ref: handleRef });
    }
    return children;
} return mountNode ? /*#__PURE__*/ j$1(children, mountNode) : mountNode; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
} }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
        descriptor.writable = true;
    Object.defineProperty(target, toPropertyKey$1(descriptor.key), descriptor);
} }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps)
    _defineProperties(Constructor.prototype, protoProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function getScrollbarSize() { var scrollDiv = document.createElement('div'); scrollDiv.style.width = '99px'; scrollDiv.style.height = '99px'; scrollDiv.style.position = 'absolute'; scrollDiv.style.top = '-9999px'; scrollDiv.style.overflow = 'scroll'; document.body.appendChild(scrollDiv); var scrollbarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth; document.body.removeChild(scrollDiv); return scrollbarSize; }
function isOverflowing(container) { var doc = ownerDocument(container); if (doc.body === container) {
    return ownerWindow(doc).innerWidth > doc.documentElement.clientWidth;
} return container.scrollHeight > container.clientHeight; }
function ariaHidden(node, show) { if (show) {
    node.setAttribute('aria-hidden', 'true');
}
else {
    node.removeAttribute('aria-hidden');
} }
function getPaddingRight(node) { return parseInt(window.getComputedStyle(node)['padding-right'], 10) || 0; }
function ariaHiddenSiblings(container, mountNode, currentNode) { var nodesToExclude = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : []; var show = arguments.length > 4 ? arguments[4] : undefined; var blacklist = [mountNode, currentNode].concat(_toConsumableArray(nodesToExclude)); var blacklistTagNames = ['TEMPLATE', 'SCRIPT', 'STYLE']; [].forEach.call(container.children, function (node) { if (node.nodeType === 1 && blacklist.indexOf(node) === -1 && blacklistTagNames.indexOf(node.tagName) === -1) {
    ariaHidden(node, show);
} }); }
function findIndexOf(containerInfo, callback) { var idx = -1; containerInfo.some(function (item, index) { if (callback(item)) {
    idx = index;
    return true;
} return false; }); return idx; }
function handleContainer(containerInfo, props) { var restoreStyle = []; var restorePaddings = []; var container = containerInfo.container; var fixedNodes; if (!props.disableScrollLock) {
    if (isOverflowing(container)) {
        var scrollbarSize = getScrollbarSize();
        restoreStyle.push({ value: container.style.paddingRight, key: 'padding-right', el: container });
        container.style['padding-right'] = "".concat(getPaddingRight(container) + scrollbarSize, "px");
        fixedNodes = ownerDocument(container).querySelectorAll('.mui-fixed');
        [].forEach.call(fixedNodes, function (node) { restorePaddings.push(node.style.paddingRight); node.style.paddingRight = "".concat(getPaddingRight(node) + scrollbarSize, "px"); });
    }
    var parent = container.parentElement;
    var scrollContainer = parent.nodeName === 'HTML' && window.getComputedStyle(parent)['overflow-y'] === 'scroll' ? parent : container;
    restoreStyle.push({ value: scrollContainer.style.overflow, key: 'overflow', el: scrollContainer });
    scrollContainer.style.overflow = 'hidden';
} var restore = function restore() { if (fixedNodes) {
    [].forEach.call(fixedNodes, function (node, i) { if (restorePaddings[i]) {
        node.style.paddingRight = restorePaddings[i];
    }
    else {
        node.style.removeProperty('padding-right');
    } });
} restoreStyle.forEach(function (_ref) { var value = _ref.value, el = _ref.el, key = _ref.key; if (value) {
    el.style.setProperty(key, value);
}
else {
    el.style.removeProperty(key);
} }); }; return restore; }
function getHiddenSiblings(container) { var hiddenSiblings = []; [].forEach.call(container.children, function (node) { if (node.getAttribute && node.getAttribute('aria-hidden') === 'true') {
    hiddenSiblings.push(node);
} }); return hiddenSiblings; }
var ModalManager = /*#__PURE__*/ function () { function ModalManager() { _classCallCheck(this, ModalManager); this.modals = []; this.containers = []; } _createClass(ModalManager, [{ key: "add", value: function add(modal, container) { var modalIndex = this.modals.indexOf(modal); if (modalIndex !== -1) {
            return modalIndex;
        } modalIndex = this.modals.length; this.modals.push(modal); if (modal.modalRef) {
            ariaHidden(modal.modalRef, false);
        } var hiddenSiblingNodes = getHiddenSiblings(container); ariaHiddenSiblings(container, modal.mountNode, modal.modalRef, hiddenSiblingNodes, true); var containerIndex = findIndexOf(this.containers, function (item) { return item.container === container; }); if (containerIndex !== -1) {
            this.containers[containerIndex].modals.push(modal);
            return modalIndex;
        } this.containers.push({ modals: [modal], container: container, restore: null, hiddenSiblingNodes: hiddenSiblingNodes }); return modalIndex; } }, { key: "mount", value: function mount(modal, props) { var containerIndex = findIndexOf(this.containers, function (item) { return item.modals.indexOf(modal) !== -1; }); var containerInfo = this.containers[containerIndex]; if (!containerInfo.restore) {
            containerInfo.restore = handleContainer(containerInfo, props);
        } } }, { key: "remove", value: function remove(modal) { var modalIndex = this.modals.indexOf(modal); if (modalIndex === -1) {
            return modalIndex;
        } var containerIndex = findIndexOf(this.containers, function (item) { return item.modals.indexOf(modal) !== -1; }); var containerInfo = this.containers[containerIndex]; containerInfo.modals.splice(containerInfo.modals.indexOf(modal), 1); this.modals.splice(modalIndex, 1); if (containerInfo.modals.length === 0) {
            if (containerInfo.restore) {
                containerInfo.restore();
            }
            if (modal.modalRef) {
                ariaHidden(modal.modalRef, true);
            }
            ariaHiddenSiblings(containerInfo.container, modal.mountNode, modal.modalRef, containerInfo.hiddenSiblingNodes, false);
            this.containers.splice(containerIndex, 1);
        }
        else {
            var nextTop = containerInfo.modals[containerInfo.modals.length - 1];
            if (nextTop.modalRef) {
                ariaHidden(nextTop.modalRef, false);
            }
        } return modalIndex; } }, { key: "isTopModal", value: function isTopModal(modal) { return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal; } }]); return ModalManager; }();
function Unstable_TrapFocus(props) { var children = props.children, _props$disableAutoFoc = props.disableAutoFocus, disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc, _props$disableEnforce = props.disableEnforceFocus, disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce, _props$disableRestore = props.disableRestoreFocus, disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore, getDoc = props.getDoc, isEnabled = props.isEnabled, open = props.open; var ignoreNextEnforceFocus = _$1(); var sentinelStart = _$1(null); var sentinelEnd = _$1(null); var nodeToRestore = _$1(); var rootRef = _$1(null); var handleOwnRef = T$2(function (instance) { rootRef.current = vn(instance); }, []); var handleRef = useForkRef(children.ref, handleOwnRef); var prevOpenRef = _$1(); p$3(function () { prevOpenRef.current = open; }, [open]); if (!prevOpenRef.current && open && typeof window !== 'undefined') {
    nodeToRestore.current = getDoc().activeElement;
} p$3(function () { if (!open) {
    return;
} var doc = ownerDocument(rootRef.current); if (!disableAutoFocus && rootRef.current && !rootRef.current.contains(doc.activeElement)) {
    if (!rootRef.current.hasAttribute('tabIndex')) {
        rootRef.current.setAttribute('tabIndex', -1);
    }
    rootRef.current.focus();
} var contain = function contain() { var rootElement = rootRef.current; if (rootElement === null) {
    return;
} if (!doc.hasFocus() || disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {
    ignoreNextEnforceFocus.current = false;
    return;
} if (rootRef.current && !rootRef.current.contains(doc.activeElement)) {
    rootRef.current.focus();
} }; var loopFocus = function loopFocus(event) { if (disableEnforceFocus || !isEnabled() || event.keyCode !== 9) {
    return;
} if (doc.activeElement === rootRef.current) {
    ignoreNextEnforceFocus.current = true;
    if (event.shiftKey) {
        sentinelEnd.current.focus();
    }
    else {
        sentinelStart.current.focus();
    }
} }; doc.addEventListener('focus', contain, true); doc.addEventListener('keydown', loopFocus, true); var interval = setInterval(function () { contain(); }, 50); return function () { clearInterval(interval); doc.removeEventListener('focus', contain, true); doc.removeEventListener('keydown', loopFocus, true); if (!disableRestoreFocus) {
    if (nodeToRestore.current && nodeToRestore.current.focus) {
        nodeToRestore.current.focus();
    }
    nodeToRestore.current = null;
} }; }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open]); return /*#__PURE__*/ y$3(g$5, null, /*#__PURE__*/ y$3("div", { tabIndex: 0, ref: sentinelStart, "data-test": "sentinelStart" }), /*#__PURE__*/ sn(children, { ref: handleRef }), /*#__PURE__*/ y$3("div", { tabIndex: 0, ref: sentinelEnd, "data-test": "sentinelEnd" })); }
var styles$v = { root: { zIndex: -1, position: 'fixed', right: 0, bottom: 0, top: 0, left: 0, backgroundColor: 'rgba(0, 0, 0, 0.5)', WebkitTapHighlightColor: 'transparent' }, invisible: { backgroundColor: 'transparent' } };
var SimpleBackdrop = /*#__PURE__*/ N$1(function SimpleBackdrop(props, ref) { var _props$invisible = props.invisible, invisible = _props$invisible === void 0 ? false : _props$invisible, open = props.open, other = _objectWithoutProperties$2(props, ["invisible", "open"]); return open ? /*#__PURE__*/ y$3("div", _extends$4({ "aria-hidden": true, ref: ref }, other, { style: _extends$4({}, styles$v.root, invisible ? styles$v.invisible : {}, other.style) })) : null; });
function getContainer(container) { container = typeof container === 'function' ? container() : container; return vn(container); }
function getHasTransition(props) { return props.children ? props.children.props.hasOwnProperty('in') : false; }
var defaultManager = new ModalManager();
var styles$u = function styles(theme) { return { root: { position: 'fixed', zIndex: theme.zIndex.modal, right: 0, bottom: 0, top: 0, left: 0 }, hidden: { visibility: 'hidden' } }; };
var Modal$1 = /*#__PURE__*/ N$1(function Modal(inProps, ref) { var theme = useTheme$1(); var props = getThemeProps({ name: 'MuiModal', props: _extends$4({}, inProps), theme: theme }); var _props$BackdropCompon = props.BackdropComponent, BackdropComponent = _props$BackdropCompon === void 0 ? SimpleBackdrop : _props$BackdropCompon, BackdropProps = props.BackdropProps, children = props.children, _props$closeAfterTran = props.closeAfterTransition, closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran, container = props.container, _props$disableAutoFoc = props.disableAutoFocus, disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc, _props$disableBackdro = props.disableBackdropClick, disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro, _props$disableEnforce = props.disableEnforceFocus, disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce, _props$disableEscapeK = props.disableEscapeKeyDown, disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK, _props$disablePortal = props.disablePortal, disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal, _props$disableRestore = props.disableRestoreFocus, disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore, _props$disableScrollL = props.disableScrollLock, disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL, _props$hideBackdrop = props.hideBackdrop, hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop, _props$keepMounted = props.keepMounted, keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted, _props$manager = props.manager, manager = _props$manager === void 0 ? defaultManager : _props$manager, onBackdropClick = props.onBackdropClick, onClose = props.onClose, onEscapeKeyDown = props.onEscapeKeyDown, onRendered = props.onRendered, open = props.open, other = _objectWithoutProperties$2(props, ["BackdropComponent", "BackdropProps", "children", "closeAfterTransition", "container", "disableAutoFocus", "disableBackdropClick", "disableEnforceFocus", "disableEscapeKeyDown", "disablePortal", "disableRestoreFocus", "disableScrollLock", "hideBackdrop", "keepMounted", "manager", "onBackdropClick", "onClose", "onEscapeKeyDown", "onRendered", "open"]); var _React$useState = h$4(true), exited = _React$useState[0], setExited = _React$useState[1]; var modal = _$1({}); var mountNodeRef = _$1(null); var modalRef = _$1(null); var handleRef = useForkRef(modalRef, ref); var hasTransition = getHasTransition(props); var getDoc = function getDoc() { return ownerDocument(mountNodeRef.current); }; var getModal = function getModal() { modal.current.modalRef = modalRef.current; modal.current.mountNode = mountNodeRef.current; return modal.current; }; var handleMounted = function handleMounted() { manager.mount(getModal(), { disableScrollLock: disableScrollLock }); modalRef.current.scrollTop = 0; }; var handleOpen = useEventCallback(function () { var resolvedContainer = getContainer(container) || getDoc().body; manager.add(getModal(), resolvedContainer); if (modalRef.current) {
    handleMounted();
} }); var isTopModal = T$2(function () { return manager.isTopModal(getModal()); }, [manager]); var handlePortalRef = useEventCallback(function (node) { mountNodeRef.current = node; if (!node) {
    return;
} if (onRendered) {
    onRendered();
} if (open && isTopModal()) {
    handleMounted();
}
else {
    ariaHidden(modalRef.current, true);
} }); var handleClose = T$2(function () { manager.remove(getModal()); }, [manager]); p$3(function () { return function () { handleClose(); }; }, [handleClose]); p$3(function () { if (open) {
    handleOpen();
}
else if (!hasTransition || !closeAfterTransition) {
    handleClose();
} }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]); if (!keepMounted && !open && (!hasTransition || exited)) {
    return null;
} var handleEnter = function handleEnter() { setExited(false); }; var handleExited = function handleExited() { setExited(true); if (closeAfterTransition) {
    handleClose();
} }; var handleBackdropClick = function handleBackdropClick(event) { if (event.target !== event.currentTarget) {
    return;
} if (onBackdropClick) {
    onBackdropClick(event);
} if (!disableBackdropClick && onClose) {
    onClose(event, 'backdropClick');
} }; var handleKeyDown = function handleKeyDown(event) { if (event.key !== 'Escape' || !isTopModal()) {
    return;
} if (onEscapeKeyDown) {
    onEscapeKeyDown(event);
} if (!disableEscapeKeyDown) {
    event.stopPropagation();
    if (onClose) {
        onClose(event, 'escapeKeyDown');
    }
} }; var inlineStyle = styles$u(theme || { zIndex: zIndex }); var childProps = {}; if (children.props.tabIndex === undefined) {
    childProps.tabIndex = children.props.tabIndex || '-1';
} if (hasTransition) {
    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);
    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);
} return /*#__PURE__*/ y$3(Portal, { ref: handlePortalRef, container: container, disablePortal: disablePortal }, /*#__PURE__*/ y$3("div", _extends$4({ ref: handleRef, onKeyDown: handleKeyDown, role: "presentation" }, other, { style: _extends$4({}, inlineStyle.root, !open && exited ? inlineStyle.hidden : {}, other.style) }), hideBackdrop ? null : /*#__PURE__*/ y$3(BackdropComponent, _extends$4({ open: open, onClick: handleBackdropClick }, BackdropProps)), /*#__PURE__*/ y$3(Unstable_TrapFocus, { disableEnforceFocus: disableEnforceFocus, disableAutoFocus: disableAutoFocus, disableRestoreFocus: disableRestoreFocus, getDoc: getDoc, isEnabled: isTopModal, open: open }, /*#__PURE__*/ sn(children, childProps)))); });
var styles$t = function styles(theme) { return { root: { '@media print': { position: 'absolute !important' } }, scrollPaper: { display: 'flex', justifyContent: 'center', alignItems: 'center' }, scrollBody: { overflowY: 'auto', overflowX: 'hidden', textAlign: 'center', '&:after': { content: '""', display: 'inline-block', verticalAlign: 'middle', height: '100%', width: '0' } }, container: { height: '100%', '@media print': { height: 'auto' }, outline: 0 }, paper: { margin: 32, position: 'relative', overflowY: 'auto', '@media print': { overflowY: 'visible', boxShadow: 'none' } }, paperScrollPaper: { display: 'flex', flexDirection: 'column', maxHeight: 'calc(100% - 64px)' }, paperScrollBody: { display: 'inline-block', verticalAlign: 'middle', textAlign: 'left' }, paperWidthFalse: { maxWidth: 'calc(100% - 64px)' }, paperWidthXs: { maxWidth: Math.max(theme.breakpoints.values.xs, 444), '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2), { maxWidth: 'calc(100% - 64px)' }) }, paperWidthSm: { maxWidth: theme.breakpoints.values.sm, '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2), { maxWidth: 'calc(100% - 64px)' }) }, paperWidthMd: { maxWidth: theme.breakpoints.values.md, '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2), { maxWidth: 'calc(100% - 64px)' }) }, paperWidthLg: { maxWidth: theme.breakpoints.values.lg, '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2), { maxWidth: 'calc(100% - 64px)' }) }, paperWidthXl: { maxWidth: theme.breakpoints.values.xl, '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2), { maxWidth: 'calc(100% - 64px)' }) }, paperFullWidth: { width: 'calc(100% - 64px)' }, paperFullScreen: { margin: 0, width: '100%', maxWidth: '100%', height: '100%', maxHeight: 'none', borderRadius: 0, '&$paperScrollBody': { margin: 0, maxWidth: '100%' } } }; };
var defaultTransitionDuration = { enter: duration.enteringScreen, exit: duration.leavingScreen };
var Dialog = /*#__PURE__*/ N$1(function Dialog(props, ref) { var BackdropProps = props.BackdropProps, children = props.children, classes = props.classes, className = props.className, _props$disableBackdro = props.disableBackdropClick, disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro, _props$disableEscapeK = props.disableEscapeKeyDown, disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK, _props$fullScreen = props.fullScreen, fullScreen = _props$fullScreen === void 0 ? false : _props$fullScreen, _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, _props$maxWidth = props.maxWidth, maxWidth = _props$maxWidth === void 0 ? 'sm' : _props$maxWidth, onBackdropClick = props.onBackdropClick, onClose = props.onClose, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onEscapeKeyDown = props.onEscapeKeyDown, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, open = props.open, _props$PaperComponent = props.PaperComponent, PaperComponent = _props$PaperComponent === void 0 ? Paper$1 : _props$PaperComponent, _props$PaperProps = props.PaperProps, PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps, _props$scroll = props.scroll, scroll = _props$scroll === void 0 ? 'paper' : _props$scroll, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Fade : _props$TransitionComp, _props$transitionDura = props.transitionDuration, transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura, TransitionProps = props.TransitionProps, ariaDescribedby = props['aria-describedby'], ariaLabelledby = props['aria-labelledby'], other = _objectWithoutProperties$2(props, ["BackdropProps", "children", "classes", "className", "disableBackdropClick", "disableEscapeKeyDown", "fullScreen", "fullWidth", "maxWidth", "onBackdropClick", "onClose", "onEnter", "onEntered", "onEntering", "onEscapeKeyDown", "onExit", "onExited", "onExiting", "open", "PaperComponent", "PaperProps", "scroll", "TransitionComponent", "transitionDuration", "TransitionProps", "aria-describedby", "aria-labelledby"]); var mouseDownTarget = _$1(); var handleMouseDown = function handleMouseDown(event) { mouseDownTarget.current = event.target; }; var handleBackdropClick = function handleBackdropClick(event) { if (event.target !== event.currentTarget) {
    return;
} if (event.target !== mouseDownTarget.current) {
    return;
} mouseDownTarget.current = null; if (onBackdropClick) {
    onBackdropClick(event);
} if (!disableBackdropClick && onClose) {
    onClose(event, 'backdropClick');
} }; return /*#__PURE__*/ y$3(Modal$1, _extends$4({ className: clsx(classes.root, className), BackdropComponent: Backdrop$1, BackdropProps: _extends$4({ transitionDuration: transitionDuration }, BackdropProps), closeAfterTransition: true }, disableBackdropClick ? { disableBackdropClick: disableBackdropClick } : {}, { disableEscapeKeyDown: disableEscapeKeyDown, onEscapeKeyDown: onEscapeKeyDown, onClose: onClose, open: open, ref: ref }, other), /*#__PURE__*/ y$3(TransitionComponent, _extends$4({ appear: true, "in": open, timeout: transitionDuration, onEnter: onEnter, onEntering: onEntering, onEntered: onEntered, onExit: onExit, onExiting: onExiting, onExited: onExited, role: "none presentation" }, TransitionProps), /*#__PURE__*/ y$3("div", { className: clsx(classes.container, classes["scroll".concat(capitalize(scroll))]), onMouseUp: handleBackdropClick, onMouseDown: handleMouseDown }, /*#__PURE__*/ y$3(PaperComponent, _extends$4({ elevation: 24, role: "dialog", "aria-describedby": ariaDescribedby, "aria-labelledby": ariaLabelledby }, PaperProps, { className: clsx(classes.paper, classes["paperScroll".concat(capitalize(scroll))], classes["paperWidth".concat(capitalize(String(maxWidth)))], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth) }), children)))); });
var Dialog$1 = withStyles(styles$t, { name: 'MuiDialog' })(Dialog);
var styles$s = { root: { display: 'flex', alignItems: 'center', padding: 8, justifyContent: 'flex-end', flex: '0 0 auto' }, spacing: { '& > :not(:first-child)': { marginLeft: 8 } } };
var DialogActions = /*#__PURE__*/ N$1(function DialogActions(props, ref) { var _props$disableSpacing = props.disableSpacing, disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing, classes = props.classes, className = props.className, other = _objectWithoutProperties$2(props, ["disableSpacing", "classes", "className"]); return /*#__PURE__*/ y$3("div", _extends$4({ className: clsx(classes.root, className, !disableSpacing && classes.spacing), ref: ref }, other)); });
var DialogActions$1 = withStyles(styles$s, { name: 'MuiDialogActions' })(DialogActions);
var styles$r = function styles(theme) { return { root: { flex: '1 1 auto', WebkitOverflowScrolling: 'touch', overflowY: 'auto', padding: '8px 24px', '&:first-child': { paddingTop: 20 } }, dividers: { padding: '16px 24px', borderTop: "1px solid ".concat(theme.palette.divider), borderBottom: "1px solid ".concat(theme.palette.divider) } }; };
var DialogContent = /*#__PURE__*/ N$1(function DialogContent(props, ref) { var classes = props.classes, className = props.className, _props$dividers = props.dividers, dividers = _props$dividers === void 0 ? false : _props$dividers, other = _objectWithoutProperties$2(props, ["classes", "className", "dividers"]); return /*#__PURE__*/ y$3("div", _extends$4({ className: clsx(classes.root, className, dividers && classes.dividers), ref: ref }, other)); });
var DialogContent$1 = withStyles(styles$r, { name: 'MuiDialogContent' })(DialogContent);
var styles$q = { root: { margin: 0, padding: '16px 24px', flex: '0 0 auto' } };
var DialogTitle = /*#__PURE__*/ N$1(function DialogTitle(props, ref) { var children = props.children, classes = props.classes, className = props.className, _props$disableTypogra = props.disableTypography, disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra, other = _objectWithoutProperties$2(props, ["children", "classes", "className", "disableTypography"]); return /*#__PURE__*/ y$3("div", _extends$4({ className: clsx(classes.root, className), ref: ref }, other), disableTypography ? children : /*#__PURE__*/ y$3(MUITypography, { component: "h2", variant: "h6" }, children)); });
var DialogTitle$1 = withStyles(styles$q, { name: 'MuiDialogTitle' })(DialogTitle);
function formControlState(_ref) { var props = _ref.props, states = _ref.states, muiFormControl = _ref.muiFormControl; return states.reduce(function (acc, state) { acc[state] = props[state]; if (muiFormControl) {
    if (typeof props[state] === 'undefined') {
        acc[state] = muiFormControl[state];
    }
} return acc; }, {}); }
function getStyleValue(computedStyle, property) { return parseInt(computedStyle[property], 10) || 0; }
var useEnhancedEffect$4 = typeof window !== 'undefined' ? y$2 : p$3;
var styles$p = { shadow: { visibility: 'hidden', position: 'absolute', overflow: 'hidden', height: 0, top: 0, left: 0, transform: 'translateZ(0)' } };
var TextareaAutosize = /*#__PURE__*/ N$1(function TextareaAutosize(props, ref) { var onChange = props.onChange, rows = props.rows, rowsMax = props.rowsMax, rowsMinProp = props.rowsMin, maxRowsProp = props.maxRows, _props$minRows = props.minRows, minRowsProp = _props$minRows === void 0 ? 1 : _props$minRows, style = props.style, value = props.value, other = _objectWithoutProperties$2(props, ["onChange", "rows", "rowsMax", "rowsMin", "maxRows", "minRows", "style", "value"]); var maxRows = maxRowsProp || rowsMax; var minRows = rows || rowsMinProp || minRowsProp; var _React$useRef = _$1(value != null), isControlled = _React$useRef.current; var inputRef = _$1(null); var handleRef = useForkRef(ref, inputRef); var shadowRef = _$1(null); var renders = _$1(0); var _React$useState = h$4({}), state = _React$useState[0], setState = _React$useState[1]; var syncHeight = T$2(function () { var input = inputRef.current; var computedStyle = window.getComputedStyle(input); var inputShallow = shadowRef.current; inputShallow.style.width = computedStyle.width; inputShallow.value = input.value || props.placeholder || 'x'; if (inputShallow.value.slice(-1) === '\n') {
    inputShallow.value += ' ';
} var boxSizing = computedStyle['box-sizing']; var padding = getStyleValue(computedStyle, 'padding-bottom') + getStyleValue(computedStyle, 'padding-top'); var border = getStyleValue(computedStyle, 'border-bottom-width') + getStyleValue(computedStyle, 'border-top-width'); var innerHeight = inputShallow.scrollHeight - padding; inputShallow.value = 'x'; var singleRowHeight = inputShallow.scrollHeight - padding; var outerHeight = innerHeight; if (minRows) {
    outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);
} if (maxRows) {
    outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);
} outerHeight = Math.max(outerHeight, singleRowHeight); var outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0); var overflow = Math.abs(outerHeight - innerHeight) <= 1; setState(function (prevState) { if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {
    renders.current += 1;
    return { overflow: overflow, outerHeightStyle: outerHeightStyle };
} return prevState; }); }, [maxRows, minRows, props.placeholder]); p$3(function () { var handleResize = debounce$1(function () { renders.current = 0; syncHeight(); }); window.addEventListener('resize', handleResize); return function () { handleResize.clear(); window.removeEventListener('resize', handleResize); }; }, [syncHeight]); useEnhancedEffect$4(function () { syncHeight(); }); p$3(function () { renders.current = 0; }, [value]); var handleChange = function handleChange(event) { renders.current = 0; if (!isControlled) {
    syncHeight();
} if (onChange) {
    onChange(event);
} }; return /*#__PURE__*/ y$3(g$5, null, /*#__PURE__*/ y$3("textarea", _extends$4({ value: value, onChange: handleChange, ref: handleRef, rows: minRows, style: _extends$4({ height: state.outerHeightStyle, overflow: state.overflow ? 'hidden' : null }, style) }, other)), /*#__PURE__*/ y$3("textarea", { "aria-hidden": true, className: props.className, readOnly: true, ref: shadowRef, tabIndex: -1, style: _extends$4({}, styles$p.shadow, style) })); });
function hasValue(value) { return value != null && !(Array.isArray(value) && value.length === 0); }
function isFilled(obj) { var SSR = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false; return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== ''); }
var styles$o = function styles(theme) { var light = theme.palette.type === 'light'; var placeholder = { color: 'currentColor', opacity: light ? 0.42 : 0.5, transition: theme.transitions.create('opacity', { duration: theme.transitions.duration.shorter }) }; var placeholderHidden = { opacity: '0 !important' }; var placeholderVisible = { opacity: light ? 0.42 : 0.5 }; return { '@global': { '@keyframes mui-auto-fill': {}, '@keyframes mui-auto-fill-cancel': {} }, root: _extends$4({}, theme.typography.body1, { color: theme.palette.text.primary, lineHeight: '1.1876em', boxSizing: 'border-box', position: 'relative', cursor: 'text', display: 'inline-flex', alignItems: 'center', '&$disabled': { color: theme.palette.text.disabled, cursor: 'default' } }), formControl: {}, focused: {}, disabled: {}, adornedStart: {}, adornedEnd: {}, error: {}, marginDense: {}, multiline: { padding: "".concat(8 - 2, "px 0 ").concat(8 - 1, "px"), '&$marginDense': { paddingTop: 4 - 1 } }, colorSecondary: {}, fullWidth: { width: '100%' }, input: { font: 'inherit', letterSpacing: 'inherit', color: 'currentColor', padding: "".concat(8 - 2, "px 0 ").concat(8 - 1, "px"), border: 0, boxSizing: 'content-box', background: 'none', height: '1.1876em', margin: 0, WebkitTapHighlightColor: 'transparent', display: 'block', minWidth: 0, width: '100%', animationName: 'mui-auto-fill-cancel', animationDuration: '10ms', '&::-webkit-input-placeholder': placeholder, '&::-moz-placeholder': placeholder, '&:-ms-input-placeholder': placeholder, '&::-ms-input-placeholder': placeholder, '&:focus': { outline: 0 }, '&:invalid': { boxShadow: 'none' }, '&::-webkit-search-decoration': { '-webkit-appearance': 'none' }, 'label[data-shrink=false] + $formControl &': { '&::-webkit-input-placeholder': placeholderHidden, '&::-moz-placeholder': placeholderHidden, '&:-ms-input-placeholder': placeholderHidden, '&::-ms-input-placeholder': placeholderHidden, '&:focus::-webkit-input-placeholder': placeholderVisible, '&:focus::-moz-placeholder': placeholderVisible, '&:focus:-ms-input-placeholder': placeholderVisible, '&:focus::-ms-input-placeholder': placeholderVisible }, '&$disabled': { opacity: 1 }, '&:-webkit-autofill': { animationDuration: '5000s', animationName: 'mui-auto-fill' } }, inputMarginDense: { paddingTop: 4 - 1 }, inputMultiline: { height: 'auto', resize: 'none', padding: 0 }, inputTypeSearch: { '-moz-appearance': 'textfield', '-webkit-appearance': 'textfield' }, inputAdornedStart: {}, inputAdornedEnd: {}, inputHiddenLabel: {} }; };
var useEnhancedEffect$3 = typeof window === 'undefined' ? p$3 : y$2;
var InputBase = /*#__PURE__*/ N$1(function InputBase(props, ref) { var ariaDescribedby = props['aria-describedby'], autoComplete = props.autoComplete, autoFocus = props.autoFocus, classes = props.classes, className = props.className; props.color; var defaultValue = props.defaultValue, disabled = props.disabled, endAdornment = props.endAdornment; props.error; var _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, id = props.id, _props$inputComponent = props.inputComponent, inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent, _props$inputProps = props.inputProps, inputPropsProp = _props$inputProps === void 0 ? {} : _props$inputProps, inputRefProp = props.inputRef; props.margin; var _props$multiline = props.multiline, multiline = _props$multiline === void 0 ? false : _props$multiline, name = props.name, onBlur = props.onBlur, onChange = props.onChange, onClick = props.onClick, onFocus = props.onFocus, onKeyDown = props.onKeyDown, onKeyUp = props.onKeyUp, placeholder = props.placeholder, readOnly = props.readOnly, renderSuffix = props.renderSuffix, rows = props.rows, rowsMax = props.rowsMax, rowsMin = props.rowsMin, maxRows = props.maxRows, minRows = props.minRows, startAdornment = props.startAdornment, _props$type = props.type, type = _props$type === void 0 ? 'text' : _props$type, valueProp = props.value, other = _objectWithoutProperties$2(props, ["aria-describedby", "autoComplete", "autoFocus", "classes", "className", "color", "defaultValue", "disabled", "endAdornment", "error", "fullWidth", "id", "inputComponent", "inputProps", "inputRef", "margin", "multiline", "name", "onBlur", "onChange", "onClick", "onFocus", "onKeyDown", "onKeyUp", "placeholder", "readOnly", "renderSuffix", "rows", "rowsMax", "rowsMin", "maxRows", "minRows", "startAdornment", "type", "value"]); var value = inputPropsProp.value != null ? inputPropsProp.value : valueProp; var _React$useRef = _$1(value != null), isControlled = _React$useRef.current; var inputRef = _$1(); var handleInputRefWarning = T$2(function (instance) { }, []); var handleInputPropsRefProp = useForkRef(inputPropsProp.ref, handleInputRefWarning); var handleInputRefProp = useForkRef(inputRefProp, handleInputPropsRefProp); var handleInputRef = useForkRef(inputRef, handleInputRefProp); var _React$useState = h$4(false), focused = _React$useState[0], setFocused = _React$useState[1]; var muiFormControl = useFormControl$1(); var fcs = formControlState({ props: props, muiFormControl: muiFormControl, states: ['color', 'disabled', 'error', 'hiddenLabel', 'margin', 'required', 'filled'] }); fcs.focused = muiFormControl ? muiFormControl.focused : focused; p$3(function () { if (!muiFormControl && disabled && focused) {
    setFocused(false);
    if (onBlur) {
        onBlur();
    }
} }, [muiFormControl, disabled, focused, onBlur]); var onFilled = muiFormControl && muiFormControl.onFilled; var onEmpty = muiFormControl && muiFormControl.onEmpty; var checkDirty = T$2(function (obj) { if (isFilled(obj)) {
    if (onFilled) {
        onFilled();
    }
}
else if (onEmpty) {
    onEmpty();
} }, [onFilled, onEmpty]); useEnhancedEffect$3(function () { if (isControlled) {
    checkDirty({ value: value });
} }, [value, checkDirty, isControlled]); var handleFocus = function handleFocus(event) { if (fcs.disabled) {
    event.stopPropagation();
    return;
} if (onFocus) {
    onFocus(event);
} if (inputPropsProp.onFocus) {
    inputPropsProp.onFocus(event);
} if (muiFormControl && muiFormControl.onFocus) {
    muiFormControl.onFocus(event);
}
else {
    setFocused(true);
} }; var handleBlur = function handleBlur(event) { if (onBlur) {
    onBlur(event);
} if (inputPropsProp.onBlur) {
    inputPropsProp.onBlur(event);
} if (muiFormControl && muiFormControl.onBlur) {
    muiFormControl.onBlur(event);
}
else {
    setFocused(false);
} }; var handleChange = function handleChange(event) { if (!isControlled) {
    var element = event.target || inputRef.current;
    if (element == null) {
        throw new Error(formatMuiErrorMessage(1));
    }
    checkDirty({ value: element.value });
} for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
} if (inputPropsProp.onChange) {
    inputPropsProp.onChange.apply(inputPropsProp, [event].concat(args));
} if (onChange) {
    onChange.apply(void 0, [event].concat(args));
} }; p$3(function () { checkDirty(inputRef.current); }, []); var handleClick = function handleClick(event) { if (inputRef.current && event.currentTarget === event.target) {
    inputRef.current.focus();
} if (onClick) {
    onClick(event);
} }; var InputComponent = inputComponent; var inputProps = _extends$4({}, inputPropsProp, { ref: handleInputRef }); if (typeof InputComponent !== 'string') {
    inputProps = _extends$4({ inputRef: handleInputRef, type: type }, inputProps, { ref: null });
}
else if (multiline) {
    if (rows && !maxRows && !minRows && !rowsMax && !rowsMin) {
        InputComponent = 'textarea';
    }
    else {
        inputProps = _extends$4({ minRows: rows || minRows, rowsMax: rowsMax, maxRows: maxRows }, inputProps);
        InputComponent = TextareaAutosize;
    }
}
else {
    inputProps = _extends$4({ type: type }, inputProps);
} var handleAutoFill = function handleAutoFill(event) { checkDirty(event.animationName === 'mui-auto-fill-cancel' ? inputRef.current : { value: 'x' }); }; p$3(function () { if (muiFormControl) {
    muiFormControl.setAdornedStart(Boolean(startAdornment));
} }, [muiFormControl, startAdornment]); return /*#__PURE__*/ y$3("div", _extends$4({ className: clsx(classes.root, classes["color".concat(capitalize(fcs.color || 'primary'))], className, fcs.disabled && classes.disabled, fcs.error && classes.error, fullWidth && classes.fullWidth, fcs.focused && classes.focused, muiFormControl && classes.formControl, multiline && classes.multiline, startAdornment && classes.adornedStart, endAdornment && classes.adornedEnd, fcs.margin === 'dense' && classes.marginDense), onClick: handleClick, ref: ref }, other), startAdornment, /*#__PURE__*/ y$3(FormControlContext.Provider, { value: null }, /*#__PURE__*/ y$3(InputComponent, _extends$4({ "aria-invalid": fcs.error, "aria-describedby": ariaDescribedby, autoComplete: autoComplete, autoFocus: autoFocus, defaultValue: defaultValue, disabled: fcs.disabled, id: id, onAnimationStart: handleAutoFill, name: name, placeholder: placeholder, readOnly: readOnly, required: fcs.required, rows: rows, value: value, onKeyDown: onKeyDown, onKeyUp: onKeyUp }, inputProps, { className: clsx(classes.input, inputPropsProp.className, fcs.disabled && classes.disabled, multiline && classes.inputMultiline, fcs.hiddenLabel && classes.inputHiddenLabel, startAdornment && classes.inputAdornedStart, endAdornment && classes.inputAdornedEnd, type === 'search' && classes.inputTypeSearch, fcs.margin === 'dense' && classes.inputMarginDense), onBlur: handleBlur, onChange: handleChange, onFocus: handleFocus }))), endAdornment, renderSuffix ? renderSuffix(_extends$4({}, fcs, { startAdornment: startAdornment })) : null); });
var InputBase$1 = withStyles(styles$o, { name: 'MuiInputBase' })(InputBase);
var styles$n = function styles(theme) { var light = theme.palette.type === 'light'; var bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)'; var backgroundColor = light ? 'rgba(0, 0, 0, 0.09)' : 'rgba(255, 255, 255, 0.09)'; return { root: { position: 'relative', backgroundColor: backgroundColor, borderTopLeftRadius: theme.shape.borderRadius, borderTopRightRadius: theme.shape.borderRadius, transition: theme.transitions.create('background-color', { duration: theme.transitions.duration.shorter, easing: theme.transitions.easing.easeOut }), '&:hover': { backgroundColor: light ? 'rgba(0, 0, 0, 0.13)' : 'rgba(255, 255, 255, 0.13)', '@media (hover: none)': { backgroundColor: backgroundColor } }, '&$focused': { backgroundColor: light ? 'rgba(0, 0, 0, 0.09)' : 'rgba(255, 255, 255, 0.09)' }, '&$disabled': { backgroundColor: light ? 'rgba(0, 0, 0, 0.12)' : 'rgba(255, 255, 255, 0.12)' } }, colorSecondary: { '&$underline:after': { borderBottomColor: theme.palette.secondary.main } }, underline: { '&:after': { borderBottom: "2px solid ".concat(theme.palette.primary.main), left: 0, bottom: 0, content: '""', position: 'absolute', right: 0, transform: 'scaleX(0)', transition: theme.transitions.create('transform', { duration: theme.transitions.duration.shorter, easing: theme.transitions.easing.easeOut }), pointerEvents: 'none' }, '&$focused:after': { transform: 'scaleX(1)' }, '&$error:after': { borderBottomColor: theme.palette.error.main, transform: 'scaleX(1)' }, '&:before': { borderBottom: "1px solid ".concat(bottomLineColor), left: 0, bottom: 0, content: '"\\00a0"', position: 'absolute', right: 0, transition: theme.transitions.create('border-bottom-color', { duration: theme.transitions.duration.shorter }), pointerEvents: 'none' }, '&:hover:before': { borderBottom: "1px solid ".concat(theme.palette.text.primary) }, '&$disabled:before': { borderBottomStyle: 'dotted' } }, focused: {}, disabled: {}, adornedStart: { paddingLeft: 12 }, adornedEnd: { paddingRight: 12 }, error: {}, marginDense: {}, multiline: { padding: '27px 12px 10px', '&$marginDense': { paddingTop: 23, paddingBottom: 6 } }, input: { padding: '27px 12px 10px', '&:-webkit-autofill': { WebkitBoxShadow: theme.palette.type === 'light' ? null : '0 0 0 100px #266798 inset', WebkitTextFillColor: theme.palette.type === 'light' ? null : '#fff', caretColor: theme.palette.type === 'light' ? null : '#fff', borderTopLeftRadius: 'inherit', borderTopRightRadius: 'inherit' } }, inputMarginDense: { paddingTop: 23, paddingBottom: 6 }, inputHiddenLabel: { paddingTop: 18, paddingBottom: 19, '&$inputMarginDense': { paddingTop: 10, paddingBottom: 11 } }, inputMultiline: { padding: 0 }, inputAdornedStart: { paddingLeft: 0 }, inputAdornedEnd: { paddingRight: 0 } }; };
var FilledInput = /*#__PURE__*/ N$1(function FilledInput(props, ref) { var disableUnderline = props.disableUnderline, classes = props.classes, _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, _props$inputComponent = props.inputComponent, inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent, _props$multiline = props.multiline, multiline = _props$multiline === void 0 ? false : _props$multiline, _props$type = props.type, type = _props$type === void 0 ? 'text' : _props$type, other = _objectWithoutProperties$2(props, ["disableUnderline", "classes", "fullWidth", "inputComponent", "multiline", "type"]); return /*#__PURE__*/ y$3(InputBase$1, _extends$4({ classes: _extends$4({}, classes, { root: clsx(classes.root, !disableUnderline && classes.underline), underline: null }), fullWidth: fullWidth, inputComponent: inputComponent, multiline: multiline, ref: ref, type: type }, other)); });
FilledInput.muiName = 'Input';
var FilledInput$1 = withStyles(styles$n, { name: 'MuiFilledInput' })(FilledInput);
function getScale(value) { return "scale(".concat(value, ", ").concat(Math.pow(value, 2), ")"); }
var styles$m = { entering: { opacity: 1, transform: getScale(1) }, entered: { opacity: 1, transform: 'none' } };
var Grow = /*#__PURE__*/ N$1(function Grow(props, ref) { var children = props.children, _props$disableStrictM = props.disableStrictModeCompat, disableStrictModeCompat = _props$disableStrictM === void 0 ? false : _props$disableStrictM, inProp = props["in"], onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, style = props.style, _props$timeout = props.timeout, timeout = _props$timeout === void 0 ? 'auto' : _props$timeout, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Transition : _props$TransitionComp, other = _objectWithoutProperties$2(props, ["children", "disableStrictModeCompat", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"]); var timer = _$1(); var autoTimeout = _$1(); var theme = useTheme(); var enableStrictModeCompat = theme.unstable_strictMode && !disableStrictModeCompat; var nodeRef = _$1(null); var foreignRef = useForkRef(children.ref, ref); var handleRef = useForkRef(enableStrictModeCompat ? nodeRef : undefined, foreignRef); var normalizedTransitionCallback = function normalizedTransitionCallback(callback) { return function (nodeOrAppearing, maybeAppearing) { if (callback) {
    var _ref = enableStrictModeCompat ? [nodeRef.current, nodeOrAppearing] : [nodeOrAppearing, maybeAppearing], _ref2 = _slicedToArray(_ref, 2), node = _ref2[0], isAppearing = _ref2[1];
    if (isAppearing === undefined) {
        callback(node);
    }
    else {
        callback(node, isAppearing);
    }
} }; }; var handleEntering = normalizedTransitionCallback(onEntering); var handleEnter = normalizedTransitionCallback(function (node, isAppearing) { reflow(node); var _getTransitionProps = getTransitionProps({ style: style, timeout: timeout }, { mode: 'enter' }), transitionDuration = _getTransitionProps.duration, delay = _getTransitionProps.delay; var duration; if (timeout === 'auto') {
    duration = theme.transitions.getAutoHeightDuration(node.clientHeight);
    autoTimeout.current = duration;
}
else {
    duration = transitionDuration;
} node.style.transition = [theme.transitions.create('opacity', { duration: duration, delay: delay }), theme.transitions.create('transform', { duration: duration * 0.666, delay: delay })].join(','); if (onEnter) {
    onEnter(node, isAppearing);
} }); var handleEntered = normalizedTransitionCallback(onEntered); var handleExiting = normalizedTransitionCallback(onExiting); var handleExit = normalizedTransitionCallback(function (node) { var _getTransitionProps2 = getTransitionProps({ style: style, timeout: timeout }, { mode: 'exit' }), transitionDuration = _getTransitionProps2.duration, delay = _getTransitionProps2.delay; var duration; if (timeout === 'auto') {
    duration = theme.transitions.getAutoHeightDuration(node.clientHeight);
    autoTimeout.current = duration;
}
else {
    duration = transitionDuration;
} node.style.transition = [theme.transitions.create('opacity', { duration: duration, delay: delay }), theme.transitions.create('transform', { duration: duration * 0.666, delay: delay || duration * 0.333 })].join(','); node.style.opacity = '0'; node.style.transform = getScale(0.75); if (onExit) {
    onExit(node);
} }); var handleExited = normalizedTransitionCallback(onExited); var addEndListener = function addEndListener(nodeOrNext, maybeNext) { var next = enableStrictModeCompat ? nodeOrNext : maybeNext; if (timeout === 'auto') {
    timer.current = setTimeout(next, autoTimeout.current || 0);
} }; p$3(function () { return function () { clearTimeout(timer.current); }; }, []); return /*#__PURE__*/ y$3(TransitionComponent, _extends$4({ appear: true, "in": inProp, nodeRef: enableStrictModeCompat ? nodeRef : undefined, onEnter: handleEnter, onEntered: handleEntered, onEntering: handleEntering, onExit: handleExit, onExited: handleExited, onExiting: handleExiting, addEndListener: addEndListener, timeout: timeout === 'auto' ? null : timeout }, other), function (state, childProps) { return /*#__PURE__*/ sn(children, _extends$4({ style: _extends$4({ opacity: 0, transform: getScale(0.75), visibility: state === 'exited' && !inProp ? 'hidden' : undefined }, styles$m[state], style, children.props.style), ref: handleRef }, childProps)); }); });
Grow.muiSupportAuto = true;
function useMediaQuery(queryInput) { var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; var theme = useTheme$1(); var props = getThemeProps({ theme: theme, name: 'MuiUseMediaQuery', props: {} }); var query = typeof queryInput === 'function' ? queryInput(theme) : queryInput; query = query.replace(/^@media( ?)/m, ''); var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined'; var _props$options = _extends$4({}, props, options), _props$options$defaul = _props$options.defaultMatches, defaultMatches = _props$options$defaul === void 0 ? false : _props$options$defaul, _props$options$matchM = _props$options.matchMedia, matchMedia = _props$options$matchM === void 0 ? supportMatchMedia ? window.matchMedia : null : _props$options$matchM, _props$options$noSsr = _props$options.noSsr, noSsr = _props$options$noSsr === void 0 ? false : _props$options$noSsr, _props$options$ssrMat = _props$options.ssrMatchMedia, ssrMatchMedia = _props$options$ssrMat === void 0 ? null : _props$options$ssrMat; var _React$useState = h$4(function () { if (noSsr && supportMatchMedia) {
    return matchMedia(query).matches;
} if (ssrMatchMedia) {
    return ssrMatchMedia(query).matches;
} return defaultMatches; }), match = _React$useState[0], setMatch = _React$useState[1]; p$3(function () { var active = true; if (!supportMatchMedia) {
    return undefined;
} var queryList = matchMedia(query); var updateMatch = function updateMatch() { if (active) {
    setMatch(queryList.matches);
} }; updateMatch(); queryList.addListener(updateMatch); return function () { active = false; queryList.removeListener(updateMatch); }; }, [query, matchMedia, supportMatchMedia]); return match; }
var styles$l = function styles(theme) { var light = theme.palette.type === 'light'; var bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)'; return { root: { position: 'relative' }, formControl: { 'label + &': { marginTop: 16 } }, focused: {}, disabled: {}, colorSecondary: { '&$underline:after': { borderBottomColor: theme.palette.secondary.main } }, underline: { '&:after': { borderBottom: "2px solid ".concat(theme.palette.primary.main), left: 0, bottom: 0, content: '""', position: 'absolute', right: 0, transform: 'scaleX(0)', transition: theme.transitions.create('transform', { duration: theme.transitions.duration.shorter, easing: theme.transitions.easing.easeOut }), pointerEvents: 'none' }, '&$focused:after': { transform: 'scaleX(1)' }, '&$error:after': { borderBottomColor: theme.palette.error.main, transform: 'scaleX(1)' }, '&:before': { borderBottom: "1px solid ".concat(bottomLineColor), left: 0, bottom: 0, content: '"\\00a0"', position: 'absolute', right: 0, transition: theme.transitions.create('border-bottom-color', { duration: theme.transitions.duration.shorter }), pointerEvents: 'none' }, '&:hover:not($disabled):before': { borderBottom: "2px solid ".concat(theme.palette.text.primary), '@media (hover: none)': { borderBottom: "1px solid ".concat(bottomLineColor) } }, '&$disabled:before': { borderBottomStyle: 'dotted' } }, error: {}, marginDense: {}, multiline: {}, fullWidth: {}, input: {}, inputMarginDense: {}, inputMultiline: {}, inputTypeSearch: {} }; };
var Input$1 = /*#__PURE__*/ N$1(function Input(props, ref) { var disableUnderline = props.disableUnderline, classes = props.classes, _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, _props$inputComponent = props.inputComponent, inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent, _props$multiline = props.multiline, multiline = _props$multiline === void 0 ? false : _props$multiline, _props$type = props.type, type = _props$type === void 0 ? 'text' : _props$type, other = _objectWithoutProperties$2(props, ["disableUnderline", "classes", "fullWidth", "inputComponent", "multiline", "type"]); return /*#__PURE__*/ y$3(InputBase$1, _extends$4({ classes: _extends$4({}, classes, { root: clsx(classes.root, !disableUnderline && classes.underline), underline: null }), fullWidth: fullWidth, inputComponent: inputComponent, multiline: multiline, ref: ref, type: type }, other)); });
Input$1.muiName = 'Input';
var Input$2 = withStyles(styles$l, { name: 'MuiInput' })(Input$1);
var ListContext = /*#__PURE__*/ F$4({});
var styles$k = { root: { listStyle: 'none', margin: 0, padding: 0, position: 'relative' }, padding: { paddingTop: 8, paddingBottom: 8 }, dense: {}, subheader: { paddingTop: 0 } };
var List = /*#__PURE__*/ N$1(function List(props, ref) { var children = props.children, classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? 'ul' : _props$component, _props$dense = props.dense, dense = _props$dense === void 0 ? false : _props$dense, _props$disablePadding = props.disablePadding, disablePadding = _props$disablePadding === void 0 ? false : _props$disablePadding, subheader = props.subheader, other = _objectWithoutProperties$2(props, ["children", "classes", "className", "component", "dense", "disablePadding", "subheader"]); var context = F$3(function () { return { dense: dense }; }, [dense]); return /*#__PURE__*/ y$3(ListContext.Provider, { value: context }, /*#__PURE__*/ y$3(Component, _extends$4({ className: clsx(classes.root, className, dense && classes.dense, !disablePadding && classes.padding, subheader && classes.subheader), ref: ref }, other), subheader, children)); });
var List$1 = withStyles(styles$k, { name: 'MuiList' })(List);
var styles$j = function styles(theme) { return { root: { display: 'flex', justifyContent: 'flex-start', alignItems: 'center', position: 'relative', textDecoration: 'none', width: '100%', boxSizing: 'border-box', textAlign: 'left', paddingTop: 8, paddingBottom: 8, '&$focusVisible': { backgroundColor: theme.palette.action.selected }, '&$selected, &$selected:hover': { backgroundColor: theme.palette.action.selected }, '&$disabled': { opacity: 0.5 } }, container: { position: 'relative' }, focusVisible: {}, dense: { paddingTop: 4, paddingBottom: 4 }, alignItemsFlexStart: { alignItems: 'flex-start' }, disabled: {}, divider: { borderBottom: "1px solid ".concat(theme.palette.divider), backgroundClip: 'padding-box' }, gutters: { paddingLeft: 16, paddingRight: 16 }, button: { transition: theme.transitions.create('background-color', { duration: theme.transitions.duration.shortest }), '&:hover': { textDecoration: 'none', backgroundColor: theme.palette.action.hover, '@media (hover: none)': { backgroundColor: 'transparent' } } }, secondaryAction: { paddingRight: 48 }, selected: {} }; };
var useEnhancedEffect$2 = typeof window === 'undefined' ? p$3 : y$2;
var ListItem = /*#__PURE__*/ N$1(function ListItem(props, ref) { var _props$alignItems = props.alignItems, alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems, _props$autoFocus = props.autoFocus, autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus, _props$button = props.button, button = _props$button === void 0 ? false : _props$button, childrenProp = props.children, classes = props.classes, className = props.className, componentProp = props.component, _props$ContainerCompo = props.ContainerComponent, ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo, _props$ContainerProps = props.ContainerProps; _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps; var ContainerClassName = _props$ContainerProps.className, ContainerProps = _objectWithoutProperties$2(_props$ContainerProps, ["className"]), _props$dense = props.dense, dense = _props$dense === void 0 ? false : _props$dense, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, _props$disableGutters = props.disableGutters, disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters, _props$divider = props.divider, divider = _props$divider === void 0 ? false : _props$divider, focusVisibleClassName = props.focusVisibleClassName, _props$selected = props.selected, selected = _props$selected === void 0 ? false : _props$selected, other = _objectWithoutProperties$2(props, ["alignItems", "autoFocus", "button", "children", "classes", "className", "component", "ContainerComponent", "ContainerProps", "dense", "disabled", "disableGutters", "divider", "focusVisibleClassName", "selected"]); var context = q$5(ListContext); var childContext = { dense: dense || context.dense || false, alignItems: alignItems }; var listItemRef = _$1(null); useEnhancedEffect$2(function () { if (autoFocus) {
    if (listItemRef.current) {
        listItemRef.current.focus();
    }
} }, [autoFocus]); var children = A$3.toArray(childrenProp); var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']); var handleOwnRef = T$2(function (instance) { listItemRef.current = vn(instance); }, []); var handleRef = useForkRef(handleOwnRef, ref); var componentProps = _extends$4({ className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== "center" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected), disabled: disabled }, other); var Component = componentProp || 'li'; if (button) {
    componentProps.component = componentProp || 'div';
    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);
    Component = ButtonBase$1;
} if (hasSecondaryAction) {
    Component = !componentProps.component && !componentProp ? 'div' : Component;
    if (ContainerComponent === 'li') {
        if (Component === 'li') {
            Component = 'div';
        }
        else if (componentProps.component === 'li') {
            componentProps.component = 'div';
        }
    }
    return /*#__PURE__*/ y$3(ListContext.Provider, { value: childContext }, /*#__PURE__*/ y$3(ContainerComponent, _extends$4({ className: clsx(classes.container, ContainerClassName), ref: handleRef }, ContainerProps), /*#__PURE__*/ y$3(Component, componentProps, children), children.pop()));
} return /*#__PURE__*/ y$3(ListContext.Provider, { value: childContext }, /*#__PURE__*/ y$3(Component, _extends$4({ ref: handleRef }, componentProps), children)); });
var ListItem$1 = withStyles(styles$j, { name: 'MuiListItem' })(ListItem);
function getOffsetTop(rect, vertical) { var offset = 0; if (typeof vertical === 'number') {
    offset = vertical;
}
else if (vertical === 'center') {
    offset = rect.height / 2;
}
else if (vertical === 'bottom') {
    offset = rect.height;
} return offset; }
function getOffsetLeft(rect, horizontal) { var offset = 0; if (typeof horizontal === 'number') {
    offset = horizontal;
}
else if (horizontal === 'center') {
    offset = rect.width / 2;
}
else if (horizontal === 'right') {
    offset = rect.width;
} return offset; }
function getTransformOriginValue(transformOrigin) { return [transformOrigin.horizontal, transformOrigin.vertical].map(function (n) { return typeof n === 'number' ? "".concat(n, "px") : n; }).join(' '); }
function getScrollParent$1(parent, child) { var element = child; var scrollTop = 0; while (element && element !== parent) {
    element = element.parentElement;
    scrollTop += element.scrollTop;
} return scrollTop; }
function getAnchorEl$1(anchorEl) { return typeof anchorEl === 'function' ? anchorEl() : anchorEl; }
var styles$i = { root: {}, paper: { position: 'absolute', overflowY: 'auto', overflowX: 'hidden', minWidth: 16, minHeight: 16, maxWidth: 'calc(100% - 32px)', maxHeight: 'calc(100% - 32px)', outline: 0 } };
var Popover = /*#__PURE__*/ N$1(function Popover(props, ref) { var action = props.action, anchorEl = props.anchorEl, _props$anchorOrigin = props.anchorOrigin, anchorOrigin = _props$anchorOrigin === void 0 ? { vertical: 'top', horizontal: 'left' } : _props$anchorOrigin, anchorPosition = props.anchorPosition, _props$anchorReferenc = props.anchorReference, anchorReference = _props$anchorReferenc === void 0 ? 'anchorEl' : _props$anchorReferenc, children = props.children, classes = props.classes, className = props.className, containerProp = props.container, _props$elevation = props.elevation, elevation = _props$elevation === void 0 ? 8 : _props$elevation, getContentAnchorEl = props.getContentAnchorEl, _props$marginThreshol = props.marginThreshold, marginThreshold = _props$marginThreshol === void 0 ? 16 : _props$marginThreshol, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, open = props.open, _props$PaperProps = props.PaperProps, PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps, _props$transformOrigi = props.transformOrigin, transformOrigin = _props$transformOrigi === void 0 ? { vertical: 'top', horizontal: 'left' } : _props$transformOrigi, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp, _props$transitionDura = props.transitionDuration, transitionDurationProp = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura, _props$TransitionProp = props.TransitionProps, TransitionProps = _props$TransitionProp === void 0 ? {} : _props$TransitionProp, other = _objectWithoutProperties$2(props, ["action", "anchorEl", "anchorOrigin", "anchorPosition", "anchorReference", "children", "classes", "className", "container", "elevation", "getContentAnchorEl", "marginThreshold", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "open", "PaperProps", "transformOrigin", "TransitionComponent", "transitionDuration", "TransitionProps"]); var paperRef = _$1(); var getAnchorOffset = T$2(function (contentAnchorOffset) { if (anchorReference === 'anchorPosition') {
    return anchorPosition;
} var resolvedAnchorEl = getAnchorEl$1(anchorEl); var anchorElement = resolvedAnchorEl && resolvedAnchorEl.nodeType === 1 ? resolvedAnchorEl : ownerDocument(paperRef.current).body; var anchorRect = anchorElement.getBoundingClientRect(); var anchorVertical = contentAnchorOffset === 0 ? anchorOrigin.vertical : 'center'; return { top: anchorRect.top + getOffsetTop(anchorRect, anchorVertical), left: anchorRect.left + getOffsetLeft(anchorRect, anchorOrigin.horizontal) }; }, [anchorEl, anchorOrigin.horizontal, anchorOrigin.vertical, anchorPosition, anchorReference]); var getContentAnchorOffset = T$2(function (element) { var contentAnchorOffset = 0; if (getContentAnchorEl && anchorReference === 'anchorEl') {
    var contentAnchorEl = getContentAnchorEl(element);
    if (contentAnchorEl && element.contains(contentAnchorEl)) {
        var scrollTop = getScrollParent$1(element, contentAnchorEl);
        contentAnchorOffset = contentAnchorEl.offsetTop + contentAnchorEl.clientHeight / 2 - scrollTop || 0;
    }
} return contentAnchorOffset; }, [anchorOrigin.vertical, anchorReference, getContentAnchorEl]); var getTransformOrigin = T$2(function (elemRect) { var contentAnchorOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; return { vertical: getOffsetTop(elemRect, transformOrigin.vertical) + contentAnchorOffset, horizontal: getOffsetLeft(elemRect, transformOrigin.horizontal) }; }, [transformOrigin.horizontal, transformOrigin.vertical]); var getPositioningStyle = T$2(function (element) { var contentAnchorOffset = getContentAnchorOffset(element); var elemRect = { width: element.offsetWidth, height: element.offsetHeight }; var elemTransformOrigin = getTransformOrigin(elemRect, contentAnchorOffset); if (anchorReference === 'none') {
    return { top: null, left: null, transformOrigin: getTransformOriginValue(elemTransformOrigin) };
} var anchorOffset = getAnchorOffset(contentAnchorOffset); var top = anchorOffset.top - elemTransformOrigin.vertical; var left = anchorOffset.left - elemTransformOrigin.horizontal; var bottom = top + elemRect.height; var right = left + elemRect.width; var containerWindow = ownerWindow(getAnchorEl$1(anchorEl)); var heightThreshold = containerWindow.innerHeight - marginThreshold; var widthThreshold = containerWindow.innerWidth - marginThreshold; if (top < marginThreshold) {
    var diff = top - marginThreshold;
    top -= diff;
    elemTransformOrigin.vertical += diff;
}
else if (bottom > heightThreshold) {
    var _diff = bottom - heightThreshold;
    top -= _diff;
    elemTransformOrigin.vertical += _diff;
} if (left < marginThreshold) {
    var _diff2 = left - marginThreshold;
    left -= _diff2;
    elemTransformOrigin.horizontal += _diff2;
}
else if (right > widthThreshold) {
    var _diff3 = right - widthThreshold;
    left -= _diff3;
    elemTransformOrigin.horizontal += _diff3;
} return { top: "".concat(Math.round(top), "px"), left: "".concat(Math.round(left), "px"), transformOrigin: getTransformOriginValue(elemTransformOrigin) }; }, [anchorEl, anchorReference, getAnchorOffset, getContentAnchorOffset, getTransformOrigin, marginThreshold]); var setPositioningStyles = T$2(function () { var element = paperRef.current; if (!element) {
    return;
} var positioning = getPositioningStyle(element); if (positioning.top !== null) {
    element.style.top = positioning.top;
} if (positioning.left !== null) {
    element.style.left = positioning.left;
} element.style.transformOrigin = positioning.transformOrigin; }, [getPositioningStyle]); var handleEntering = function handleEntering(element, isAppearing) { if (onEntering) {
    onEntering(element, isAppearing);
} setPositioningStyles(); }; var handlePaperRef = T$2(function (instance) { paperRef.current = vn(instance); }, []); p$3(function () { if (open) {
    setPositioningStyles();
} }); A$4(action, function () { return open ? { updatePosition: function updatePosition() { setPositioningStyles(); } } : null; }, [open, setPositioningStyles]); p$3(function () { if (!open) {
    return undefined;
} var handleResize = debounce$1(function () { setPositioningStyles(); }); window.addEventListener('resize', handleResize); return function () { handleResize.clear(); window.removeEventListener('resize', handleResize); }; }, [open, setPositioningStyles]); var transitionDuration = transitionDurationProp; if (transitionDurationProp === 'auto' && !TransitionComponent.muiSupportAuto) {
    transitionDuration = undefined;
} var container = containerProp || (anchorEl ? ownerDocument(getAnchorEl$1(anchorEl)).body : undefined); return /*#__PURE__*/ y$3(Modal$1, _extends$4({ container: container, open: open, ref: ref, BackdropProps: { invisible: true }, className: clsx(classes.root, className) }, other), /*#__PURE__*/ y$3(TransitionComponent, _extends$4({ appear: true, "in": open, onEnter: onEnter, onEntered: onEntered, onExit: onExit, onExited: onExited, onExiting: onExiting, timeout: transitionDuration }, TransitionProps, { onEntering: createChainedFunction(handleEntering, TransitionProps.onEntering) }), /*#__PURE__*/ y$3(Paper$1, _extends$4({ elevation: elevation, ref: handlePaperRef }, PaperProps, { className: clsx(classes.paper, PaperProps.className) }), children))); });
var Popover$1 = withStyles(styles$i, { name: 'MuiPopover' })(Popover);
function nextItem(list, item, disableListWrap) { if (list === item) {
    return list.firstChild;
} if (item && item.nextElementSibling) {
    return item.nextElementSibling;
} return disableListWrap ? null : list.firstChild; }
function previousItem(list, item, disableListWrap) { if (list === item) {
    return disableListWrap ? list.firstChild : list.lastChild;
} if (item && item.previousElementSibling) {
    return item.previousElementSibling;
} return disableListWrap ? null : list.lastChild; }
function textCriteriaMatches(nextFocus, textCriteria) { if (textCriteria === undefined) {
    return true;
} var text = nextFocus.innerText; if (text === undefined) {
    text = nextFocus.textContent;
} text = text.trim().toLowerCase(); if (text.length === 0) {
    return false;
} if (textCriteria.repeating) {
    return text[0] === textCriteria.keys[0];
} return text.indexOf(textCriteria.keys.join('')) === 0; }
function moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, traversalFunction, textCriteria) { var wrappedOnce = false; var nextFocus = traversalFunction(list, currentFocus, currentFocus ? disableListWrap : false); while (nextFocus) {
    if (nextFocus === list.firstChild) {
        if (wrappedOnce) {
            return;
        }
        wrappedOnce = true;
    }
    var nextFocusDisabled = disabledItemsFocusable ? false : nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true';
    if (!nextFocus.hasAttribute('tabindex') || !textCriteriaMatches(nextFocus, textCriteria) || nextFocusDisabled) {
        nextFocus = traversalFunction(list, nextFocus, disableListWrap);
    }
    else {
        nextFocus.focus();
        return;
    }
} }
var useEnhancedEffect$1 = typeof window === 'undefined' ? p$3 : y$2;
var MenuList = /*#__PURE__*/ N$1(function MenuList(props, ref) { var actions = props.actions, _props$autoFocus = props.autoFocus, autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus, _props$autoFocusItem = props.autoFocusItem, autoFocusItem = _props$autoFocusItem === void 0 ? false : _props$autoFocusItem, children = props.children, className = props.className, _props$disabledItemsF = props.disabledItemsFocusable, disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF, _props$disableListWra = props.disableListWrap, disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra, onKeyDown = props.onKeyDown, _props$variant = props.variant, variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant, other = _objectWithoutProperties$2(props, ["actions", "autoFocus", "autoFocusItem", "children", "className", "disabledItemsFocusable", "disableListWrap", "onKeyDown", "variant"]); var listRef = _$1(null); var textCriteriaRef = _$1({ keys: [], repeating: true, previousKeyMatched: true, lastTime: null }); useEnhancedEffect$1(function () { if (autoFocus) {
    listRef.current.focus();
} }, [autoFocus]); A$4(actions, function () { return { adjustStyleForScrollbar: function adjustStyleForScrollbar(containerElement, theme) { var noExplicitWidth = !listRef.current.style.width; if (containerElement.clientHeight < listRef.current.clientHeight && noExplicitWidth) {
        var scrollbarSize = "".concat(getScrollbarSize(), "px");
        listRef.current.style[theme.direction === 'rtl' ? 'paddingLeft' : 'paddingRight'] = scrollbarSize;
        listRef.current.style.width = "calc(100% + ".concat(scrollbarSize, ")");
    } return listRef.current; } }; }, []); var handleKeyDown = function handleKeyDown(event) { var list = listRef.current; var key = event.key; var currentFocus = ownerDocument(list).activeElement; if (key === 'ArrowDown') {
    event.preventDefault();
    moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, nextItem);
}
else if (key === 'ArrowUp') {
    event.preventDefault();
    moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, previousItem);
}
else if (key === 'Home') {
    event.preventDefault();
    moveFocus(list, null, disableListWrap, disabledItemsFocusable, nextItem);
}
else if (key === 'End') {
    event.preventDefault();
    moveFocus(list, null, disableListWrap, disabledItemsFocusable, previousItem);
}
else if (key.length === 1) {
    var criteria = textCriteriaRef.current;
    var lowerKey = key.toLowerCase();
    var currTime = performance.now();
    if (criteria.keys.length > 0) {
        if (currTime - criteria.lastTime > 500) {
            criteria.keys = [];
            criteria.repeating = true;
            criteria.previousKeyMatched = true;
        }
        else if (criteria.repeating && lowerKey !== criteria.keys[0]) {
            criteria.repeating = false;
        }
    }
    criteria.lastTime = currTime;
    criteria.keys.push(lowerKey);
    var keepFocusOnCurrent = currentFocus && !criteria.repeating && textCriteriaMatches(currentFocus, criteria);
    if (criteria.previousKeyMatched && (keepFocusOnCurrent || moveFocus(list, currentFocus, false, disabledItemsFocusable, nextItem, criteria))) {
        event.preventDefault();
    }
    else {
        criteria.previousKeyMatched = false;
    }
} if (onKeyDown) {
    onKeyDown(event);
} }; var handleOwnRef = T$2(function (instance) { listRef.current = vn(instance); }, []); var handleRef = useForkRef(handleOwnRef, ref); var activeItemIndex = -1; A$3.forEach(children, function (child, index) { if (!fn(child)) {
    return;
} if (!child.props.disabled) {
    if (variant === 'selectedMenu' && child.props.selected) {
        activeItemIndex = index;
    }
    else if (activeItemIndex === -1) {
        activeItemIndex = index;
    }
} }); var items = A$3.map(children, function (child, index) { if (index === activeItemIndex) {
    var newChildProps = {};
    if (autoFocusItem) {
        newChildProps.autoFocus = true;
    }
    if (child.props.tabIndex === undefined && variant === 'selectedMenu') {
        newChildProps.tabIndex = 0;
    }
    return /*#__PURE__*/ sn(child, newChildProps);
} return child; }); return /*#__PURE__*/ y$3(List$1, _extends$4({ role: "menu", ref: handleRef, className: className, onKeyDown: handleKeyDown, tabIndex: autoFocus ? 0 : -1 }, other), items); });
var RTL_ORIGIN = { vertical: 'top', horizontal: 'right' };
var LTR_ORIGIN = { vertical: 'top', horizontal: 'left' };
var styles$h = { paper: { maxHeight: 'calc(100% - 96px)', WebkitOverflowScrolling: 'touch' }, list: { outline: 0 } };
var Menu = /*#__PURE__*/ N$1(function Menu(props, ref) { var _props$autoFocus = props.autoFocus, autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus, children = props.children, classes = props.classes, _props$disableAutoFoc = props.disableAutoFocusItem, disableAutoFocusItem = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc, _props$MenuListProps = props.MenuListProps, MenuListProps = _props$MenuListProps === void 0 ? {} : _props$MenuListProps, onClose = props.onClose, onEnteringProp = props.onEntering, open = props.open, _props$PaperProps = props.PaperProps, PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps, PopoverClasses = props.PopoverClasses, _props$transitionDura = props.transitionDuration, transitionDuration = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura, _props$TransitionProp = props.TransitionProps; _props$TransitionProp = _props$TransitionProp === void 0 ? {} : _props$TransitionProp; var onEntering = _props$TransitionProp.onEntering, TransitionProps = _objectWithoutProperties$2(_props$TransitionProp, ["onEntering"]), _props$variant = props.variant, variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant, other = _objectWithoutProperties$2(props, ["autoFocus", "children", "classes", "disableAutoFocusItem", "MenuListProps", "onClose", "onEntering", "open", "PaperProps", "PopoverClasses", "transitionDuration", "TransitionProps", "variant"]); var theme = useTheme(); var autoFocusItem = autoFocus && !disableAutoFocusItem && open; var menuListActionsRef = _$1(null); var contentAnchorRef = _$1(null); var getContentAnchorEl = function getContentAnchorEl() { return contentAnchorRef.current; }; var handleEntering = function handleEntering(element, isAppearing) { if (menuListActionsRef.current) {
    menuListActionsRef.current.adjustStyleForScrollbar(element, theme);
} if (onEnteringProp) {
    onEnteringProp(element, isAppearing);
} if (onEntering) {
    onEntering(element, isAppearing);
} }; var handleListKeyDown = function handleListKeyDown(event) { if (event.key === 'Tab') {
    event.preventDefault();
    if (onClose) {
        onClose(event, 'tabKeyDown');
    }
} }; var activeItemIndex = -1; A$3.map(children, function (child, index) { if (!fn(child)) {
    return;
} if (!child.props.disabled) {
    if (variant !== "menu" && child.props.selected) {
        activeItemIndex = index;
    }
    else if (activeItemIndex === -1) {
        activeItemIndex = index;
    }
} }); var items = A$3.map(children, function (child, index) { if (index === activeItemIndex) {
    return /*#__PURE__*/ sn(child, { ref: function ref(instance) { contentAnchorRef.current = vn(instance); setRef(child.ref, instance); } });
} return child; }); return /*#__PURE__*/ y$3(Popover$1, _extends$4({ getContentAnchorEl: getContentAnchorEl, classes: PopoverClasses, onClose: onClose, TransitionProps: _extends$4({ onEntering: handleEntering }, TransitionProps), anchorOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN, transformOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN, PaperProps: _extends$4({}, PaperProps, { classes: _extends$4({}, PaperProps.classes, { root: classes.paper }) }), open: open, ref: ref, transitionDuration: transitionDuration }, other), /*#__PURE__*/ y$3(MenuList, _extends$4({ onKeyDown: handleListKeyDown, actions: menuListActionsRef, autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem), autoFocusItem: autoFocusItem, variant: variant }, MenuListProps, { className: clsx(classes.list, MenuListProps.className) }), items)); });
var Menu$1 = withStyles(styles$h, { name: 'MuiMenu' })(Menu);
var styles$g = function styles(theme) { return { root: _extends$4({}, theme.typography.body1, _defineProperty({ minHeight: 48, paddingTop: 6, paddingBottom: 6, boxSizing: 'border-box', width: 'auto', overflow: 'hidden', whiteSpace: 'nowrap' }, theme.breakpoints.up('sm'), { minHeight: 'auto' })), gutters: {}, selected: {}, dense: _extends$4({}, theme.typography.body2, { minHeight: 'auto' }) }; };
var MenuItem$1 = /*#__PURE__*/ N$1(function MenuItem(props, ref) { var classes = props.classes, className = props.className, _props$component = props.component, component = _props$component === void 0 ? 'li' : _props$component, _props$disableGutters = props.disableGutters, disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters, ListItemClasses = props.ListItemClasses, _props$role = props.role, role = _props$role === void 0 ? 'menuitem' : _props$role, selected = props.selected, tabIndexProp = props.tabIndex, other = _objectWithoutProperties$2(props, ["classes", "className", "component", "disableGutters", "ListItemClasses", "role", "selected", "tabIndex"]); var tabIndex; if (!props.disabled) {
    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;
} return /*#__PURE__*/ y$3(ListItem$1, _extends$4({ button: true, role: role, tabIndex: tabIndex, component: component, selected: selected, disableGutters: disableGutters, classes: _extends$4({ dense: classes.dense }, ListItemClasses), className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters), ref: ref }, other)); });
var MenuItem$2 = withStyles(styles$g, { name: 'MuiMenuItem' })(MenuItem$1);
var NativeSelectInput = /*#__PURE__*/ N$1(function NativeSelectInput(props, ref) { var classes = props.classes, className = props.className, disabled = props.disabled, IconComponent = props.IconComponent, inputRef = props.inputRef, _props$variant = props.variant, variant = _props$variant === void 0 ? 'standard' : _props$variant, other = _objectWithoutProperties$2(props, ["classes", "className", "disabled", "IconComponent", "inputRef", "variant"]); return /*#__PURE__*/ y$3(g$5, null, /*#__PURE__*/ y$3("select", _extends$4({ className: clsx(classes.root, classes.select, classes[variant], className, disabled && classes.disabled), disabled: disabled, ref: inputRef || ref }, other)), props.multiple ? null : /*#__PURE__*/ y$3(IconComponent, { className: clsx(classes.icon, classes["icon".concat(capitalize(variant))], disabled && classes.disabled) })); });
var ArrowDropDownIcon = createSvgIcon$1(/*#__PURE__*/ y$3("path", { d: "M7 10l5 5 5-5z" }));
var styles$f = function styles(theme) { return { root: {}, select: { '-moz-appearance': 'none', '-webkit-appearance': 'none', userSelect: 'none', borderRadius: 0, minWidth: 16, cursor: 'pointer', '&:focus': { backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.05)' : 'rgba(255, 255, 255, 0.05)', borderRadius: 0 }, '&::-ms-expand': { display: 'none' }, '&$disabled': { cursor: 'default' }, '&[multiple]': { height: 'auto' }, '&:not([multiple]) option, &:not([multiple]) optgroup': { backgroundColor: theme.palette.background.paper }, '&&': { paddingRight: 24 } }, filled: { '&&': { paddingRight: 32 } }, outlined: { borderRadius: theme.shape.borderRadius, '&&': { paddingRight: 32 } }, selectMenu: { height: 'auto', minHeight: '1.1876em', textOverflow: 'ellipsis', whiteSpace: 'nowrap', overflow: 'hidden' }, disabled: {}, icon: { position: 'absolute', right: 0, top: 'calc(50% - 12px)', pointerEvents: 'none', color: theme.palette.action.active, '&$disabled': { color: theme.palette.action.disabled } }, iconOpen: { transform: 'rotate(180deg)' }, iconFilled: { right: 7 }, iconOutlined: { right: 7 }, nativeInput: { bottom: 0, left: 0, position: 'absolute', opacity: 0, pointerEvents: 'none', width: '100%' } }; };
var defaultInput = /*#__PURE__*/ y$3(Input$2, null);
var NativeSelect = /*#__PURE__*/ N$1(function NativeSelect(props, ref) { var children = props.children, classes = props.classes, _props$IconComponent = props.IconComponent, IconComponent = _props$IconComponent === void 0 ? ArrowDropDownIcon : _props$IconComponent, _props$input = props.input, input = _props$input === void 0 ? defaultInput : _props$input, inputProps = props.inputProps; props.variant; var other = _objectWithoutProperties$2(props, ["children", "classes", "IconComponent", "input", "inputProps", "variant"]); var muiFormControl = useFormControl(); var fcs = formControlState({ props: props, muiFormControl: muiFormControl, states: ['variant'] }); return /*#__PURE__*/ sn(input, _extends$4({ inputComponent: NativeSelectInput, inputProps: _extends$4({ children: children, classes: classes, IconComponent: IconComponent, variant: fcs.variant, type: undefined }, inputProps, input ? input.props.inputProps : {}), ref: ref }, other)); });
NativeSelect.muiName = 'Select';
withStyles(styles$f, { name: 'MuiNativeSelect' })(NativeSelect);
var styles$e = function styles(theme) { return { root: { position: 'absolute', bottom: 0, right: 0, top: -5, left: 0, margin: 0, padding: '0 8px', pointerEvents: 'none', borderRadius: 'inherit', borderStyle: 'solid', borderWidth: 1, overflow: 'hidden' }, legend: { textAlign: 'left', padding: 0, lineHeight: '11px', transition: theme.transitions.create('width', { duration: 150, easing: theme.transitions.easing.easeOut }) }, legendLabelled: { display: 'block', width: 'auto', textAlign: 'left', padding: 0, height: 11, fontSize: '0.75em', visibility: 'hidden', maxWidth: 0.01, transition: theme.transitions.create('max-width', { duration: 50, easing: theme.transitions.easing.easeOut }), '& > span': { paddingLeft: 5, paddingRight: 5, display: 'inline-block' } }, legendNotched: { maxWidth: 1000, transition: theme.transitions.create('max-width', { duration: 100, easing: theme.transitions.easing.easeOut, delay: 50 }) } }; };
var NotchedOutline = /*#__PURE__*/ N$1(function NotchedOutline(props, ref) { props.children; var classes = props.classes, className = props.className, label = props.label, labelWidthProp = props.labelWidth, notched = props.notched, style = props.style, other = _objectWithoutProperties$2(props, ["children", "classes", "className", "label", "labelWidth", "notched", "style"]); var theme = useTheme(); var align = theme.direction === 'rtl' ? 'right' : 'left'; if (label !== undefined) {
    return /*#__PURE__*/ y$3("fieldset", _extends$4({ "aria-hidden": true, className: clsx(classes.root, className), ref: ref, style: style }, other), /*#__PURE__*/ y$3("legend", { className: clsx(classes.legendLabelled, notched && classes.legendNotched) }, label ? /*#__PURE__*/ y$3("span", null, label) : /*#__PURE__*/ y$3("span", { dangerouslySetInnerHTML: { __html: '&#8203;' } })));
} var labelWidth = labelWidthProp > 0 ? labelWidthProp * 0.75 + 8 : 0.01; return /*#__PURE__*/ y$3("fieldset", _extends$4({ "aria-hidden": true, style: _extends$4(_defineProperty({}, "padding".concat(capitalize(align)), 8), style), className: clsx(classes.root, className), ref: ref }, other), /*#__PURE__*/ y$3("legend", { className: classes.legend, style: { width: notched ? labelWidth : 0.01 } }, /*#__PURE__*/ y$3("span", { dangerouslySetInnerHTML: { __html: '&#8203;' } }))); });
var NotchedOutline$1 = withStyles(styles$e, { name: 'PrivateNotchedOutline' })(NotchedOutline);
var styles$d = function styles(theme) { var borderColor = theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'; return { root: { position: 'relative', borderRadius: theme.shape.borderRadius, '&:hover $notchedOutline': { borderColor: theme.palette.text.primary }, '@media (hover: none)': { '&:hover $notchedOutline': { borderColor: borderColor } }, '&$focused $notchedOutline': { borderColor: theme.palette.primary.main, borderWidth: 2 }, '&$error $notchedOutline': { borderColor: theme.palette.error.main }, '&$disabled $notchedOutline': { borderColor: theme.palette.action.disabled } }, colorSecondary: { '&$focused $notchedOutline': { borderColor: theme.palette.secondary.main } }, focused: {}, disabled: {}, adornedStart: { paddingLeft: 14 }, adornedEnd: { paddingRight: 14 }, error: {}, marginDense: {}, multiline: { padding: '18.5px 14px', '&$marginDense': { paddingTop: 10.5, paddingBottom: 10.5 } }, notchedOutline: { borderColor: borderColor }, input: { padding: '18.5px 14px', '&:-webkit-autofill': { WebkitBoxShadow: theme.palette.type === 'light' ? null : '0 0 0 100px #266798 inset', WebkitTextFillColor: theme.palette.type === 'light' ? null : '#fff', caretColor: theme.palette.type === 'light' ? null : '#fff', borderRadius: 'inherit' } }, inputMarginDense: { paddingTop: 10.5, paddingBottom: 10.5 }, inputMultiline: { padding: 0 }, inputAdornedStart: { paddingLeft: 0 }, inputAdornedEnd: { paddingRight: 0 } }; };
var OutlinedInput = /*#__PURE__*/ N$1(function OutlinedInput(props, ref) { var classes = props.classes, _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, _props$inputComponent = props.inputComponent, inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent, label = props.label, _props$labelWidth = props.labelWidth, labelWidth = _props$labelWidth === void 0 ? 0 : _props$labelWidth, _props$multiline = props.multiline, multiline = _props$multiline === void 0 ? false : _props$multiline, notched = props.notched, _props$type = props.type, type = _props$type === void 0 ? 'text' : _props$type, other = _objectWithoutProperties$2(props, ["classes", "fullWidth", "inputComponent", "label", "labelWidth", "multiline", "notched", "type"]); return /*#__PURE__*/ y$3(InputBase$1, _extends$4({ renderSuffix: function renderSuffix(state) { return /*#__PURE__*/ y$3(NotchedOutline$1, { className: classes.notchedOutline, label: label, labelWidth: labelWidth, notched: typeof notched !== 'undefined' ? notched : Boolean(state.startAdornment || state.filled || state.focused) }); }, classes: _extends$4({}, classes, { root: clsx(classes.root, classes.underline), notchedOutline: null }), fullWidth: fullWidth, inputComponent: inputComponent, multiline: multiline, ref: ref, type: type }, other)); });
OutlinedInput.muiName = 'Input';
var OutlinedInput$1 = withStyles(styles$d, { name: 'MuiOutlinedInput' })(OutlinedInput);
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';
var timeoutDuration = function () { var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox']; for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
        return 1;
    }
} return 0; }();
function microtaskDebounce(fn) { var called = false; return function () { if (called) {
    return;
} called = true; window.Promise.resolve().then(function () { called = false; fn(); }); }; }
function taskDebounce(fn) { var scheduled = false; return function () { if (!scheduled) {
    scheduled = true;
    setTimeout(function () { scheduled = false; fn(); }, timeoutDuration);
} }; }
var supportsMicroTasks = isBrowser && window.Promise;
var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;
function isFunction(functionToCheck) { var getType = {}; return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]'; }
function getStyleComputedProperty(element, property) { if (element.nodeType !== 1) {
    return [];
} var window = element.ownerDocument.defaultView; var css = window.getComputedStyle(element, null); return property ? css[property] : css; }
function getParentNode(element) { if (element.nodeName === 'HTML') {
    return element;
} return element.parentNode || element.host; }
function getScrollParent(element) { if (!element) {
    return document.body;
} switch (element.nodeName) {
    case 'HTML':
    case 'BODY': return element.ownerDocument.body;
    case '#document': return element.body;
} var _getStyleComputedProp = getStyleComputedProperty(element), overflow = _getStyleComputedProp.overflow, overflowX = _getStyleComputedProp.overflowX, overflowY = _getStyleComputedProp.overflowY; if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
    return element;
} return getScrollParent(getParentNode(element)); }
function getReferenceNode(reference) { return reference && reference.referenceNode ? reference.referenceNode : reference; }
var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);
var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);
function isIE(version) { if (version === 11) {
    return isIE11;
} if (version === 10) {
    return isIE10;
} return isIE11 || isIE10; }
function getOffsetParent(element) { if (!element) {
    return document.documentElement;
} var noOffsetParent = isIE(10) ? document.body : null; var offsetParent = element.offsetParent || null; while (offsetParent === noOffsetParent && element.nextElementSibling) {
    offsetParent = (element = element.nextElementSibling).offsetParent;
} var nodeName = offsetParent && offsetParent.nodeName; if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
    return element ? element.ownerDocument.documentElement : document.documentElement;
} if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
    return getOffsetParent(offsetParent);
} return offsetParent; }
function isOffsetContainer(element) { var nodeName = element.nodeName; if (nodeName === 'BODY') {
    return false;
} return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element; }
function getRoot(node) { if (node.parentNode !== null) {
    return getRoot(node.parentNode);
} return node; }
function findCommonOffsetParent(element1, element2) { if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
    return document.documentElement;
} var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING; var start = order ? element1 : element2; var end = order ? element2 : element1; var range = document.createRange(); range.setStart(start, 0); range.setEnd(end, 0); var commonAncestorContainer = range.commonAncestorContainer; if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
    if (isOffsetContainer(commonAncestorContainer)) {
        return commonAncestorContainer;
    }
    return getOffsetParent(commonAncestorContainer);
} var element1root = getRoot(element1); if (element1root.host) {
    return findCommonOffsetParent(element1root.host, element2);
}
else {
    return findCommonOffsetParent(element1, getRoot(element2).host);
} }
function getScroll(element) { var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top'; var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft'; var nodeName = element.nodeName; if (nodeName === 'BODY' || nodeName === 'HTML') {
    var html = element.ownerDocument.documentElement;
    var scrollingElement = element.ownerDocument.scrollingElement || html;
    return scrollingElement[upperSide];
} return element[upperSide]; }
function includeScroll(rect, element) { var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false; var scrollTop = getScroll(element, 'top'); var scrollLeft = getScroll(element, 'left'); var modifier = subtract ? -1 : 1; rect.top += scrollTop * modifier; rect.bottom += scrollTop * modifier; rect.left += scrollLeft * modifier; rect.right += scrollLeft * modifier; return rect; }
function getBordersSize(styles, axis) { var sideA = axis === 'x' ? 'Left' : 'Top'; var sideB = sideA === 'Left' ? 'Right' : 'Bottom'; return parseFloat(styles['border' + sideA + 'Width']) + parseFloat(styles['border' + sideB + 'Width']); }
function getSize(axis, body, html, computedStyle) { return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0); }
function getWindowSizes(document) { var body = document.body; var html = document.documentElement; var computedStyle = isIE(10) && getComputedStyle(html); return { height: getSize('Height', body, html, computedStyle), width: getSize('Width', body, html, computedStyle) }; }
var classCallCheck = function classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
} };
var createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
        descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
} } return function (Constructor, protoProps, staticProps) { if (protoProps)
    defineProperties(Constructor.prototype, protoProps); if (staticProps)
    defineProperties(Constructor, staticProps); return Constructor; }; }();
var defineProperty = function defineProperty(obj, key, value) { if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
}
else {
    obj[key] = value;
} return obj; };
var _extends$1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
        }
    }
} return target; };
function getClientRect(offsets) { return _extends$1({}, offsets, { right: offsets.left + offsets.width, bottom: offsets.top + offsets.height }); }
function getBoundingClientRect(element) { var rect = {}; try {
    if (isIE(10)) {
        rect = element.getBoundingClientRect();
        var scrollTop = getScroll(element, 'top');
        var scrollLeft = getScroll(element, 'left');
        rect.top += scrollTop;
        rect.left += scrollLeft;
        rect.bottom += scrollTop;
        rect.right += scrollLeft;
    }
    else {
        rect = element.getBoundingClientRect();
    }
}
catch (e) { } var result = { left: rect.left, top: rect.top, width: rect.right - rect.left, height: rect.bottom - rect.top }; var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {}; var width = sizes.width || element.clientWidth || result.width; var height = sizes.height || element.clientHeight || result.height; var horizScrollbar = element.offsetWidth - width; var vertScrollbar = element.offsetHeight - height; if (horizScrollbar || vertScrollbar) {
    var styles = getStyleComputedProperty(element);
    horizScrollbar -= getBordersSize(styles, 'x');
    vertScrollbar -= getBordersSize(styles, 'y');
    result.width -= horizScrollbar;
    result.height -= vertScrollbar;
} return getClientRect(result); }
function getOffsetRectRelativeToArbitraryNode(children, parent) { var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false; var isIE10 = isIE(10); var isHTML = parent.nodeName === 'HTML'; var childrenRect = getBoundingClientRect(children); var parentRect = getBoundingClientRect(parent); var scrollParent = getScrollParent(children); var styles = getStyleComputedProperty(parent); var borderTopWidth = parseFloat(styles.borderTopWidth); var borderLeftWidth = parseFloat(styles.borderLeftWidth); if (fixedPosition && isHTML) {
    parentRect.top = Math.max(parentRect.top, 0);
    parentRect.left = Math.max(parentRect.left, 0);
} var offsets = getClientRect({ top: childrenRect.top - parentRect.top - borderTopWidth, left: childrenRect.left - parentRect.left - borderLeftWidth, width: childrenRect.width, height: childrenRect.height }); offsets.marginTop = 0; offsets.marginLeft = 0; if (!isIE10 && isHTML) {
    var marginTop = parseFloat(styles.marginTop);
    var marginLeft = parseFloat(styles.marginLeft);
    offsets.top -= borderTopWidth - marginTop;
    offsets.bottom -= borderTopWidth - marginTop;
    offsets.left -= borderLeftWidth - marginLeft;
    offsets.right -= borderLeftWidth - marginLeft;
    offsets.marginTop = marginTop;
    offsets.marginLeft = marginLeft;
} if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
    offsets = includeScroll(offsets, parent);
} return offsets; }
function getViewportOffsetRectRelativeToArtbitraryNode(element) { var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false; var html = element.ownerDocument.documentElement; var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html); var width = Math.max(html.clientWidth, window.innerWidth || 0); var height = Math.max(html.clientHeight, window.innerHeight || 0); var scrollTop = !excludeScroll ? getScroll(html) : 0; var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0; var offset = { top: scrollTop - relativeOffset.top + relativeOffset.marginTop, left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft, width: width, height: height }; return getClientRect(offset); }
function isFixed(element) { var nodeName = element.nodeName; if (nodeName === 'BODY' || nodeName === 'HTML') {
    return false;
} if (getStyleComputedProperty(element, 'position') === 'fixed') {
    return true;
} var parentNode = getParentNode(element); if (!parentNode) {
    return false;
} return isFixed(parentNode); }
function getFixedPositionOffsetParent(element) { if (!element || !element.parentElement || isIE()) {
    return document.documentElement;
} var el = element.parentElement; while (el && getStyleComputedProperty(el, 'transform') === 'none') {
    el = el.parentElement;
} return el || document.documentElement; }
function getBoundaries(popper, reference, padding, boundariesElement) { var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false; var boundaries = { top: 0, left: 0 }; var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference)); if (boundariesElement === 'viewport') {
    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
}
else {
    var boundariesNode = void 0;
    if (boundariesElement === 'scrollParent') {
        boundariesNode = getScrollParent(getParentNode(reference));
        if (boundariesNode.nodeName === 'BODY') {
            boundariesNode = popper.ownerDocument.documentElement;
        }
    }
    else if (boundariesElement === 'window') {
        boundariesNode = popper.ownerDocument.documentElement;
    }
    else {
        boundariesNode = boundariesElement;
    }
    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);
    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
        var _getWindowSizes = getWindowSizes(popper.ownerDocument), height = _getWindowSizes.height, width = _getWindowSizes.width;
        boundaries.top += offsets.top - offsets.marginTop;
        boundaries.bottom = height + offsets.top;
        boundaries.left += offsets.left - offsets.marginLeft;
        boundaries.right = width + offsets.left;
    }
    else {
        boundaries = offsets;
    }
} padding = padding || 0; var isPaddingNumber = typeof padding === 'number'; boundaries.left += isPaddingNumber ? padding : padding.left || 0; boundaries.top += isPaddingNumber ? padding : padding.top || 0; boundaries.right -= isPaddingNumber ? padding : padding.right || 0; boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; return boundaries; }
function getArea(_ref) { var width = _ref.width, height = _ref.height; return width * height; }
function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) { var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0; if (placement.indexOf('auto') === -1) {
    return placement;
} var boundaries = getBoundaries(popper, reference, padding, boundariesElement); var rects = { top: { width: boundaries.width, height: refRect.top - boundaries.top }, right: { width: boundaries.right - refRect.right, height: boundaries.height }, bottom: { width: boundaries.width, height: boundaries.bottom - refRect.bottom }, left: { width: refRect.left - boundaries.left, height: boundaries.height } }; var sortedAreas = Object.keys(rects).map(function (key) { return _extends$1({ key: key }, rects[key], { area: getArea(rects[key]) }); }).sort(function (a, b) { return b.area - a.area; }); var filteredAreas = sortedAreas.filter(function (_ref2) { var width = _ref2.width, height = _ref2.height; return width >= popper.clientWidth && height >= popper.clientHeight; }); var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key; var variation = placement.split('-')[1]; return computedPlacement + (variation ? '-' + variation : ''); }
function getReferenceOffsets(state, popper, reference) { var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null; var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference)); return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition); }
function getOuterSizes(element) { var window = element.ownerDocument.defaultView; var styles = window.getComputedStyle(element); var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0); var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0); var result = { width: element.offsetWidth + y, height: element.offsetHeight + x }; return result; }
function getOppositePlacement(placement) { var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' }; return placement.replace(/left|right|bottom|top/g, function (matched) { return hash[matched]; }); }
function getPopperOffsets(popper, referenceOffsets, placement) { placement = placement.split('-')[0]; var popperRect = getOuterSizes(popper); var popperOffsets = { width: popperRect.width, height: popperRect.height }; var isHoriz = ['right', 'left'].indexOf(placement) !== -1; var mainSide = isHoriz ? 'top' : 'left'; var secondarySide = isHoriz ? 'left' : 'top'; var measurement = isHoriz ? 'height' : 'width'; var secondaryMeasurement = !isHoriz ? 'height' : 'width'; popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2; if (placement === secondarySide) {
    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
}
else {
    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
} return popperOffsets; }
function find(arr, check) { if (Array.prototype.find) {
    return arr.find(check);
} return arr.filter(check)[0]; }
function findIndex(arr, prop, value) { if (Array.prototype.findIndex) {
    return arr.findIndex(function (cur) { return cur[prop] === value; });
} var match = find(arr, function (obj) { return obj[prop] === value; }); return arr.indexOf(match); }
function runModifiers(modifiers, data, ends) { var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends)); modifiersToRun.forEach(function (modifier) { if (modifier['function']) {
    console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
} var fn = modifier['function'] || modifier.fn; if (modifier.enabled && isFunction(fn)) {
    data.offsets.popper = getClientRect(data.offsets.popper);
    data.offsets.reference = getClientRect(data.offsets.reference);
    data = fn(data, modifier);
} }); return data; }
function update() { if (this.state.isDestroyed) {
    return;
} var data = { instance: this, styles: {}, arrowStyles: {}, attributes: {}, flipped: false, offsets: {} }; data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed); data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding); data.originalPlacement = data.placement; data.positionFixed = this.options.positionFixed; data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement); data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute'; data = runModifiers(this.modifiers, data); if (!this.state.isCreated) {
    this.state.isCreated = true;
    this.options.onCreate(data);
}
else {
    this.options.onUpdate(data);
} }
function isModifierEnabled(modifiers, modifierName) { return modifiers.some(function (_ref) { var name = _ref.name, enabled = _ref.enabled; return enabled && name === modifierName; }); }
function getSupportedPropertyName(property) { var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O']; var upperProp = property.charAt(0).toUpperCase() + property.slice(1); for (var i = 0; i < prefixes.length; i++) {
    var prefix = prefixes[i];
    var toCheck = prefix ? '' + prefix + upperProp : property;
    if (typeof document.body.style[toCheck] !== 'undefined') {
        return toCheck;
    }
} return null; }
function destroy() { this.state.isDestroyed = true; if (isModifierEnabled(this.modifiers, 'applyStyle')) {
    this.popper.removeAttribute('x-placement');
    this.popper.style.position = '';
    this.popper.style.top = '';
    this.popper.style.left = '';
    this.popper.style.right = '';
    this.popper.style.bottom = '';
    this.popper.style.willChange = '';
    this.popper.style[getSupportedPropertyName('transform')] = '';
} this.disableEventListeners(); if (this.options.removeOnDestroy) {
    this.popper.parentNode.removeChild(this.popper);
} return this; }
function getWindow(element) { var ownerDocument = element.ownerDocument; return ownerDocument ? ownerDocument.defaultView : window; }
function attachToScrollParents(scrollParent, event, callback, scrollParents) { var isBody = scrollParent.nodeName === 'BODY'; var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent; target.addEventListener(event, callback, { passive: true }); if (!isBody) {
    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
} scrollParents.push(target); }
function setupEventListeners(reference, options, state, updateBound) { state.updateBound = updateBound; getWindow(reference).addEventListener('resize', state.updateBound, { passive: true }); var scrollElement = getScrollParent(reference); attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents); state.scrollElement = scrollElement; state.eventsEnabled = true; return state; }
function enableEventListeners() { if (!this.state.eventsEnabled) {
    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
} }
function removeEventListeners(reference, state) { getWindow(reference).removeEventListener('resize', state.updateBound); state.scrollParents.forEach(function (target) { target.removeEventListener('scroll', state.updateBound); }); state.updateBound = null; state.scrollParents = []; state.scrollElement = null; state.eventsEnabled = false; return state; }
function disableEventListeners() { if (this.state.eventsEnabled) {
    cancelAnimationFrame(this.scheduleUpdate);
    this.state = removeEventListeners(this.reference, this.state);
} }
function isNumeric(n) { return n !== '' && !isNaN(parseFloat(n)) && isFinite(n); }
function setStyles(element, styles) { Object.keys(styles).forEach(function (prop) { var unit = ''; if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
    unit = 'px';
} element.style[prop] = styles[prop] + unit; }); }
function setAttributes(element, attributes) { Object.keys(attributes).forEach(function (prop) { var value = attributes[prop]; if (value !== false) {
    element.setAttribute(prop, attributes[prop]);
}
else {
    element.removeAttribute(prop);
} }); }
function applyStyle(data) { setStyles(data.instance.popper, data.styles); setAttributes(data.instance.popper, data.attributes); if (data.arrowElement && Object.keys(data.arrowStyles).length) {
    setStyles(data.arrowElement, data.arrowStyles);
} return data; }
function applyStyleOnLoad(reference, popper, options, modifierOptions, state) { var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed); var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding); popper.setAttribute('x-placement', placement); setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' }); return options; }
function getRoundedOffsets(data, shouldRound) { var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference; var round = Math.round, floor = Math.floor; var noRound = function noRound(v) { return v; }; var referenceWidth = round(reference.width); var popperWidth = round(popper.width); var isVertical = ['left', 'right'].indexOf(data.placement) !== -1; var isVariation = data.placement.indexOf('-') !== -1; var sameWidthParity = referenceWidth % 2 === popperWidth % 2; var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1; var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor; var verticalToInteger = !shouldRound ? noRound : round; return { left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left), top: verticalToInteger(popper.top), bottom: verticalToInteger(popper.bottom), right: horizontalToInteger(popper.right) }; }
var isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);
function computeStyle(data, options) { var x = options.x, y = options.y; var popper = data.offsets.popper; var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) { return modifier.name === 'applyStyle'; }).gpuAcceleration; if (legacyGpuAccelerationOption !== undefined) {
    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
} var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration; var offsetParent = getOffsetParent(data.instance.popper); var offsetParentRect = getBoundingClientRect(offsetParent); var styles = { position: popper.position }; var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox); var sideA = x === 'bottom' ? 'top' : 'bottom'; var sideB = y === 'right' ? 'left' : 'right'; var prefixedProperty = getSupportedPropertyName('transform'); var left = void 0, top = void 0; if (sideA === 'bottom') {
    if (offsetParent.nodeName === 'HTML') {
        top = -offsetParent.clientHeight + offsets.bottom;
    }
    else {
        top = -offsetParentRect.height + offsets.bottom;
    }
}
else {
    top = offsets.top;
} if (sideB === 'right') {
    if (offsetParent.nodeName === 'HTML') {
        left = -offsetParent.clientWidth + offsets.right;
    }
    else {
        left = -offsetParentRect.width + offsets.right;
    }
}
else {
    left = offsets.left;
} if (gpuAcceleration && prefixedProperty) {
    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
    styles[sideA] = 0;
    styles[sideB] = 0;
    styles.willChange = 'transform';
}
else {
    var invertTop = sideA === 'bottom' ? -1 : 1;
    var invertLeft = sideB === 'right' ? -1 : 1;
    styles[sideA] = top * invertTop;
    styles[sideB] = left * invertLeft;
    styles.willChange = sideA + ', ' + sideB;
} var attributes = { 'x-placement': data.placement }; data.attributes = _extends$1({}, attributes, data.attributes); data.styles = _extends$1({}, styles, data.styles); data.arrowStyles = _extends$1({}, data.offsets.arrow, data.arrowStyles); return data; }
function isModifierRequired(modifiers, requestingName, requestedName) { var requesting = find(modifiers, function (_ref) { var name = _ref.name; return name === requestingName; }); var isRequired = !!requesting && modifiers.some(function (modifier) { return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order; }); if (!isRequired) {
    var _requesting = '`' + requestingName + '`';
    var requested = '`' + requestedName + '`';
    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
} return isRequired; }
function arrow(data, options) { var _data$offsets$arrow; if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
    return data;
} var arrowElement = options.element; if (typeof arrowElement === 'string') {
    arrowElement = data.instance.popper.querySelector(arrowElement);
    if (!arrowElement) {
        return data;
    }
}
else {
    if (!data.instance.popper.contains(arrowElement)) {
        console.warn('WARNING: `arrow.element` must be child of its popper element!');
        return data;
    }
} var placement = data.placement.split('-')[0]; var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference; var isVertical = ['left', 'right'].indexOf(placement) !== -1; var len = isVertical ? 'height' : 'width'; var sideCapitalized = isVertical ? 'Top' : 'Left'; var side = sideCapitalized.toLowerCase(); var altSide = isVertical ? 'left' : 'top'; var opSide = isVertical ? 'bottom' : 'right'; var arrowElementSize = getOuterSizes(arrowElement)[len]; if (reference[opSide] - arrowElementSize < popper[side]) {
    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
} if (reference[side] + arrowElementSize > popper[opSide]) {
    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
} data.offsets.popper = getClientRect(data.offsets.popper); var center = reference[side] + reference[len] / 2 - arrowElementSize / 2; var css = getStyleComputedProperty(data.instance.popper); var popperMarginSide = parseFloat(css['margin' + sideCapitalized]); var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width']); var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide; sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0); data.arrowElement = arrowElement; data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow); return data; }
function getOppositeVariation(variation) { if (variation === 'end') {
    return 'start';
}
else if (variation === 'start') {
    return 'end';
} return variation; }
var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];
var validPlacements = placements.slice(3);
function clockwise(placement) { var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false; var index = validPlacements.indexOf(placement); var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index)); return counter ? arr.reverse() : arr; }
var BEHAVIORS = { FLIP: 'flip', CLOCKWISE: 'clockwise', COUNTERCLOCKWISE: 'counterclockwise' };
function flip(data, options) { if (isModifierEnabled(data.instance.modifiers, 'inner')) {
    return data;
} if (data.flipped && data.placement === data.originalPlacement) {
    return data;
} var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed); var placement = data.placement.split('-')[0]; var placementOpposite = getOppositePlacement(placement); var variation = data.placement.split('-')[1] || ''; var flipOrder = []; switch (options.behavior) {
    case BEHAVIORS.FLIP:
        flipOrder = [placement, placementOpposite];
        break;
    case BEHAVIORS.CLOCKWISE:
        flipOrder = clockwise(placement);
        break;
    case BEHAVIORS.COUNTERCLOCKWISE:
        flipOrder = clockwise(placement, true);
        break;
    default: flipOrder = options.behavior;
} flipOrder.forEach(function (step, index) { if (placement !== step || flipOrder.length === index + 1) {
    return data;
} placement = data.placement.split('-')[0]; placementOpposite = getOppositePlacement(placement); var popperOffsets = data.offsets.popper; var refOffsets = data.offsets.reference; var floor = Math.floor; var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom); var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left); var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right); var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top); var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom); var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom; var isVertical = ['top', 'bottom'].indexOf(placement) !== -1; var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom); var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop); var flippedVariation = flippedVariationByRef || flippedVariationByContent; if (overlapsRef || overflowsBoundaries || flippedVariation) {
    data.flipped = true;
    if (overlapsRef || overflowsBoundaries) {
        placement = flipOrder[index + 1];
    }
    if (flippedVariation) {
        variation = getOppositeVariation(variation);
    }
    data.placement = placement + (variation ? '-' + variation : '');
    data.offsets.popper = _extends$1({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));
    data = runModifiers(data.instance.modifiers, data, 'flip');
} }); return data; }
function keepTogether(data) { var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference; var placement = data.placement.split('-')[0]; var floor = Math.floor; var isVertical = ['top', 'bottom'].indexOf(placement) !== -1; var side = isVertical ? 'right' : 'bottom'; var opSide = isVertical ? 'left' : 'top'; var measurement = isVertical ? 'width' : 'height'; if (popper[side] < floor(reference[opSide])) {
    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
} if (popper[opSide] > floor(reference[side])) {
    data.offsets.popper[opSide] = floor(reference[side]);
} return data; }
function toValue(str, measurement, popperOffsets, referenceOffsets) { var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/); var value = +split[1]; var unit = split[2]; if (!value) {
    return str;
} if (unit.indexOf('%') === 0) {
    var element = void 0;
    switch (unit) {
        case '%p':
            element = popperOffsets;
            break;
        case '%':
        case '%r':
        default: element = referenceOffsets;
    }
    var rect = getClientRect(element);
    return rect[measurement] / 100 * value;
}
else if (unit === 'vh' || unit === 'vw') {
    var size = void 0;
    if (unit === 'vh') {
        size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
    }
    else {
        size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
    }
    return size / 100 * value;
}
else {
    return value;
} }
function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) { var offsets = [0, 0]; var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1; var fragments = offset.split(/(\+|\-)/).map(function (frag) { return frag.trim(); }); var divider = fragments.indexOf(find(fragments, function (frag) { return frag.search(/,|\s/) !== -1; })); if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
} var splitRegex = /\s*,\s*|\s+/; var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments]; ops = ops.map(function (op, index) { var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width'; var mergeWithPrevious = false; return op.reduce(function (a, b) { if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
    a[a.length - 1] = b;
    mergeWithPrevious = true;
    return a;
}
else if (mergeWithPrevious) {
    a[a.length - 1] += b;
    mergeWithPrevious = false;
    return a;
}
else {
    return a.concat(b);
} }, []).map(function (str) { return toValue(str, measurement, popperOffsets, referenceOffsets); }); }); ops.forEach(function (op, index) { op.forEach(function (frag, index2) { if (isNumeric(frag)) {
    offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
} }); }); return offsets; }
function offset(data, _ref) { var offset = _ref.offset; var placement = data.placement, _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference; var basePlacement = placement.split('-')[0]; var offsets = void 0; if (isNumeric(+offset)) {
    offsets = [+offset, 0];
}
else {
    offsets = parseOffset(offset, popper, reference, basePlacement);
} if (basePlacement === 'left') {
    popper.top += offsets[0];
    popper.left -= offsets[1];
}
else if (basePlacement === 'right') {
    popper.top += offsets[0];
    popper.left += offsets[1];
}
else if (basePlacement === 'top') {
    popper.left += offsets[0];
    popper.top -= offsets[1];
}
else if (basePlacement === 'bottom') {
    popper.left += offsets[0];
    popper.top += offsets[1];
} data.popper = popper; return data; }
function preventOverflow(data, options) { var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper); if (data.instance.reference === boundariesElement) {
    boundariesElement = getOffsetParent(boundariesElement);
} var transformProp = getSupportedPropertyName('transform'); var popperStyles = data.instance.popper.style; var top = popperStyles.top, left = popperStyles.left, transform = popperStyles[transformProp]; popperStyles.top = ''; popperStyles.left = ''; popperStyles[transformProp] = ''; var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed); popperStyles.top = top; popperStyles.left = left; popperStyles[transformProp] = transform; options.boundaries = boundaries; var order = options.priority; var popper = data.offsets.popper; var check = { primary: function primary(placement) { var value = popper[placement]; if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
        value = Math.max(popper[placement], boundaries[placement]);
    } return defineProperty({}, placement, value); }, secondary: function secondary(placement) { var mainSide = placement === 'right' ? 'left' : 'top'; var value = popper[mainSide]; if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
    } return defineProperty({}, mainSide, value); } }; order.forEach(function (placement) { var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary'; popper = _extends$1({}, popper, check[side](placement)); }); data.offsets.popper = popper; return data; }
function shift(data) { var placement = data.placement; var basePlacement = placement.split('-')[0]; var shiftvariation = placement.split('-')[1]; if (shiftvariation) {
    var _data$offsets = data.offsets, reference = _data$offsets.reference, popper = _data$offsets.popper;
    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
    var side = isVertical ? 'left' : 'top';
    var measurement = isVertical ? 'width' : 'height';
    var shiftOffsets = { start: defineProperty({}, side, reference[side]), end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement]) };
    data.offsets.popper = _extends$1({}, popper, shiftOffsets[shiftvariation]);
} return data; }
function hide(data) { if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
    return data;
} var refRect = data.offsets.reference; var bound = find(data.instance.modifiers, function (modifier) { return modifier.name === 'preventOverflow'; }).boundaries; if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
    if (data.hide === true) {
        return data;
    }
    data.hide = true;
    data.attributes['x-out-of-boundaries'] = '';
}
else {
    if (data.hide === false) {
        return data;
    }
    data.hide = false;
    data.attributes['x-out-of-boundaries'] = false;
} return data; }
function inner(data) { var placement = data.placement; var basePlacement = placement.split('-')[0]; var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference; var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1; var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1; popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0); data.placement = getOppositePlacement(placement); data.offsets.popper = getClientRect(popper); return data; }
var modifiers = { shift: { order: 100, enabled: true, fn: shift }, offset: { order: 200, enabled: true, fn: offset, offset: 0 }, preventOverflow: { order: 300, enabled: true, fn: preventOverflow, priority: ['left', 'right', 'top', 'bottom'], padding: 5, boundariesElement: 'scrollParent' }, keepTogether: { order: 400, enabled: true, fn: keepTogether }, arrow: { order: 500, enabled: true, fn: arrow, element: '[x-arrow]' }, flip: { order: 600, enabled: true, fn: flip, behavior: 'flip', padding: 5, boundariesElement: 'viewport', flipVariations: false, flipVariationsByContent: false }, inner: { order: 700, enabled: false, fn: inner }, hide: { order: 800, enabled: true, fn: hide }, computeStyle: { order: 850, enabled: true, fn: computeStyle, gpuAcceleration: true, x: 'bottom', y: 'right' }, applyStyle: { order: 900, enabled: true, fn: applyStyle, onLoad: applyStyleOnLoad, gpuAcceleration: undefined } };
var Defaults = { placement: 'bottom', positionFixed: false, eventsEnabled: true, removeOnDestroy: false, onCreate: function onCreate() { }, onUpdate: function onUpdate() { }, modifiers: modifiers };
var Popper$1 = function () { function Popper(reference, popper) { var _this = this; var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}; classCallCheck(this, Popper); this.scheduleUpdate = function () { return requestAnimationFrame(_this.update); }; this.update = debounce(this.update.bind(this)); this.options = _extends$1({}, Popper.Defaults, options); this.state = { isDestroyed: false, isCreated: false, scrollParents: [] }; this.reference = reference && reference.jquery ? reference[0] : reference; this.popper = popper && popper.jquery ? popper[0] : popper; this.options.modifiers = {}; Object.keys(_extends$1({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) { _this.options.modifiers[name] = _extends$1({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {}); }); this.modifiers = Object.keys(this.options.modifiers).map(function (name) { return _extends$1({ name: name }, _this.options.modifiers[name]); }).sort(function (a, b) { return a.order - b.order; }); this.modifiers.forEach(function (modifierOptions) { if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
    modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
} }); this.update(); var eventsEnabled = this.options.eventsEnabled; if (eventsEnabled) {
    this.enableEventListeners();
} this.state.eventsEnabled = eventsEnabled; } createClass(Popper, [{ key: 'update', value: function update$$1() { return update.call(this); } }, { key: 'destroy', value: function destroy$$1() { return destroy.call(this); } }, { key: 'enableEventListeners', value: function enableEventListeners$$1() { return enableEventListeners.call(this); } }, { key: 'disableEventListeners', value: function disableEventListeners$$1() { return disableEventListeners.call(this); } }]); return Popper; }();
Popper$1.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
Popper$1.placements = placements;
Popper$1.Defaults = Defaults;
function flipPlacement(placement, theme) { var direction = theme && theme.direction || 'ltr'; if (direction === 'ltr') {
    return placement;
} switch (placement) {
    case 'bottom-end': return 'bottom-start';
    case 'bottom-start': return 'bottom-end';
    case 'top-end': return 'top-start';
    case 'top-start': return 'top-end';
    default: return placement;
} }
function getAnchorEl(anchorEl) { return typeof anchorEl === 'function' ? anchorEl() : anchorEl; }
var useEnhancedEffect = typeof window !== 'undefined' ? y$2 : p$3;
var defaultPopperOptions = {};
var Popper = /*#__PURE__*/ N$1(function Popper(props, ref) { var anchorEl = props.anchorEl, children = props.children, container = props.container, _props$disablePortal = props.disablePortal, disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal, _props$keepMounted = props.keepMounted, keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted, modifiers = props.modifiers, open = props.open, _props$placement = props.placement, initialPlacement = _props$placement === void 0 ? 'bottom' : _props$placement, _props$popperOptions = props.popperOptions, popperOptions = _props$popperOptions === void 0 ? defaultPopperOptions : _props$popperOptions, popperRefProp = props.popperRef, style = props.style, _props$transition = props.transition, transition = _props$transition === void 0 ? false : _props$transition, other = _objectWithoutProperties$2(props, ["anchorEl", "children", "container", "disablePortal", "keepMounted", "modifiers", "open", "placement", "popperOptions", "popperRef", "style", "transition"]); var tooltipRef = _$1(null); var ownRef = useForkRef(tooltipRef, ref); var popperRef = _$1(null); var handlePopperRef = useForkRef(popperRef, popperRefProp); var handlePopperRefRef = _$1(handlePopperRef); useEnhancedEffect(function () { handlePopperRefRef.current = handlePopperRef; }, [handlePopperRef]); A$4(popperRefProp, function () { return popperRef.current; }, []); var _React$useState = h$4(true), exited = _React$useState[0], setExited = _React$useState[1]; var theme = useTheme$1(); var rtlPlacement = flipPlacement(initialPlacement, theme); var _React$useState2 = h$4(rtlPlacement), placement = _React$useState2[0], setPlacement = _React$useState2[1]; p$3(function () { if (popperRef.current) {
    popperRef.current.update();
} }); var handleOpen = T$2(function () { if (!tooltipRef.current || !anchorEl || !open) {
    return;
} if (popperRef.current) {
    popperRef.current.destroy();
    handlePopperRefRef.current(null);
} var handlePopperUpdate = function handlePopperUpdate(data) { setPlacement(data.placement); }; getAnchorEl(anchorEl); var popper = new Popper$1(getAnchorEl(anchorEl), tooltipRef.current, _extends$4({ placement: rtlPlacement }, popperOptions, { modifiers: _extends$4({}, disablePortal ? {} : { preventOverflow: { boundariesElement: 'window' } }, modifiers, popperOptions.modifiers), onCreate: createChainedFunction(handlePopperUpdate, popperOptions.onCreate), onUpdate: createChainedFunction(handlePopperUpdate, popperOptions.onUpdate) })); handlePopperRefRef.current(popper); }, [anchorEl, disablePortal, modifiers, open, rtlPlacement, popperOptions]); var handleRef = T$2(function (node) { setRef(ownRef, node); handleOpen(); }, [ownRef, handleOpen]); var handleEnter = function handleEnter() { setExited(false); }; var handleClose = function handleClose() { if (!popperRef.current) {
    return;
} popperRef.current.destroy(); handlePopperRefRef.current(null); }; var handleExited = function handleExited() { setExited(true); handleClose(); }; p$3(function () { return function () { handleClose(); }; }, []); p$3(function () { if (!open && !transition) {
    handleClose();
} }, [open, transition]); if (!keepMounted && !open && (!transition || exited)) {
    return null;
} var childProps = { placement: placement }; if (transition) {
    childProps.TransitionProps = { "in": open, onEnter: handleEnter, onExited: handleExited };
} return /*#__PURE__*/ y$3(Portal, { disablePortal: disablePortal, container: container }, /*#__PURE__*/ y$3("div", _extends$4({ ref: handleRef, role: "tooltip" }, other, { style: _extends$4({ position: 'fixed', top: 0, left: 0, display: !open && keepMounted && !transition ? 'none' : null }, style) }), typeof children === 'function' ? children(childProps) : children)); });
function areEqualValues(a, b) { if (_typeof$3(b) === 'object' && b !== null) {
    return a === b;
} return String(a) === String(b); }
function isEmpty(display) { return display == null || typeof display === 'string' && !display.trim(); }
var SelectInput = /*#__PURE__*/ N$1(function SelectInput(props, ref) { var ariaLabel = props['aria-label'], autoFocus = props.autoFocus, autoWidth = props.autoWidth, children = props.children, classes = props.classes, className = props.className, defaultValue = props.defaultValue, disabled = props.disabled, displayEmpty = props.displayEmpty, IconComponent = props.IconComponent, inputRefProp = props.inputRef, labelId = props.labelId, _props$MenuProps = props.MenuProps, MenuProps = _props$MenuProps === void 0 ? {} : _props$MenuProps, multiple = props.multiple, name = props.name, onBlur = props.onBlur, onChange = props.onChange, onClose = props.onClose, onFocus = props.onFocus, onOpen = props.onOpen, openProp = props.open, readOnly = props.readOnly, renderValue = props.renderValue, _props$SelectDisplayP = props.SelectDisplayProps, SelectDisplayProps = _props$SelectDisplayP === void 0 ? {} : _props$SelectDisplayP, tabIndexProp = props.tabIndex; props.type; var valueProp = props.value, _props$variant = props.variant, variant = _props$variant === void 0 ? 'standard' : _props$variant, other = _objectWithoutProperties$2(props, ["aria-label", "autoFocus", "autoWidth", "children", "classes", "className", "defaultValue", "disabled", "displayEmpty", "IconComponent", "inputRef", "labelId", "MenuProps", "multiple", "name", "onBlur", "onChange", "onClose", "onFocus", "onOpen", "open", "readOnly", "renderValue", "SelectDisplayProps", "tabIndex", "type", "value", "variant"]); var _useControlled = useControlled({ controlled: valueProp, "default": defaultValue, name: 'Select' }), _useControlled2 = _slicedToArray(_useControlled, 2), value = _useControlled2[0], setValue = _useControlled2[1]; var inputRef = _$1(null); var _React$useState = h$4(null), displayNode = _React$useState[0], setDisplayNode = _React$useState[1]; var _React$useRef = _$1(openProp != null), isOpenControlled = _React$useRef.current; var _React$useState2 = h$4(), menuMinWidthState = _React$useState2[0], setMenuMinWidthState = _React$useState2[1]; var _React$useState3 = h$4(false), openState = _React$useState3[0], setOpenState = _React$useState3[1]; var handleRef = useForkRef(ref, inputRefProp); A$4(handleRef, function () { return { focus: function focus() { displayNode.focus(); }, node: inputRef.current, value: value }; }, [displayNode, value]); p$3(function () { if (autoFocus && displayNode) {
    displayNode.focus();
} }, [autoFocus, displayNode]); p$3(function () { if (displayNode) {
    var label = ownerDocument(displayNode).getElementById(labelId);
    if (label) {
        var handler = function handler() { if (getSelection().isCollapsed) {
            displayNode.focus();
        } };
        label.addEventListener('click', handler);
        return function () { label.removeEventListener('click', handler); };
    }
} return undefined; }, [labelId, displayNode]); var update = function update(open, event) { if (open) {
    if (onOpen) {
        onOpen(event);
    }
}
else if (onClose) {
    onClose(event);
} if (!isOpenControlled) {
    setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);
    setOpenState(open);
} }; var handleMouseDown = function handleMouseDown(event) { if (event.button !== 0) {
    return;
} event.preventDefault(); displayNode.focus(); update(true, event); }; var handleClose = function handleClose(event) { update(false, event); }; var childrenArray = A$3.toArray(children); var handleChange = function handleChange(event) { var index = childrenArray.map(function (child) { return child.props.value; }).indexOf(event.target.value); if (index === -1) {
    return;
} var child = childrenArray[index]; setValue(child.props.value); if (onChange) {
    onChange(event, child);
} }; var handleItemClick = function handleItemClick(child) { return function (event) { if (!multiple) {
    update(false, event);
} var newValue; if (multiple) {
    newValue = Array.isArray(value) ? value.slice() : [];
    var itemIndex = value.indexOf(child.props.value);
    if (itemIndex === -1) {
        newValue.push(child.props.value);
    }
    else {
        newValue.splice(itemIndex, 1);
    }
}
else {
    newValue = child.props.value;
} if (child.props.onClick) {
    child.props.onClick(event);
} if (value === newValue) {
    return;
} setValue(newValue); if (onChange) {
    event.persist();
    Object.defineProperty(event, 'target', { writable: true, value: { value: newValue, name: name } });
    onChange(event, child);
} }; }; var handleKeyDown = function handleKeyDown(event) { if (!readOnly) {
    var validKeys = [' ', 'ArrowUp', 'ArrowDown', 'Enter'];
    if (validKeys.indexOf(event.key) !== -1) {
        event.preventDefault();
        update(true, event);
    }
} }; var open = displayNode !== null && (isOpenControlled ? openProp : openState); var handleBlur = function handleBlur(event) { if (!open && onBlur) {
    event.persist();
    Object.defineProperty(event, 'target', { writable: true, value: { value: value, name: name } });
    onBlur(event);
} }; delete other['aria-invalid']; var display; var displaySingle; var displayMultiple = []; var computeDisplay = false; if (isFilled({ value: value }) || displayEmpty) {
    if (renderValue) {
        display = renderValue(value);
    }
    else {
        computeDisplay = true;
    }
} var items = childrenArray.map(function (child) { if (!fn(child)) {
    return null;
} var selected; if (multiple) {
    if (!Array.isArray(value)) {
        throw new Error(formatMuiErrorMessage(2));
    }
    selected = value.some(function (v) { return areEqualValues(v, child.props.value); });
    if (selected && computeDisplay) {
        displayMultiple.push(child.props.children);
    }
}
else {
    selected = areEqualValues(value, child.props.value);
    if (selected && computeDisplay) {
        displaySingle = child.props.children;
    }
} return /*#__PURE__*/ sn(child, { 'aria-selected': selected ? 'true' : undefined, onClick: handleItemClick(child), onKeyUp: function onKeyUp(event) { if (event.key === ' ') {
        event.preventDefault();
    } if (child.props.onKeyUp) {
        child.props.onKeyUp(event);
    } }, role: 'option', selected: selected, value: undefined, 'data-value': child.props.value }); }); if (computeDisplay) {
    display = multiple ? displayMultiple.join(', ') : displaySingle;
} var menuMinWidth = menuMinWidthState; if (!autoWidth && isOpenControlled && displayNode) {
    menuMinWidth = displayNode.clientWidth;
} var tabIndex; if (typeof tabIndexProp !== 'undefined') {
    tabIndex = tabIndexProp;
}
else {
    tabIndex = disabled ? null : 0;
} var buttonId = SelectDisplayProps.id || (name ? "mui-component-select-".concat(name) : undefined); return /*#__PURE__*/ y$3(g$5, null, /*#__PURE__*/ y$3("div", _extends$4({ className: clsx(classes.root, classes.select, classes.selectMenu, classes[variant], className, disabled && classes.disabled), ref: setDisplayNode, tabIndex: tabIndex, role: "button", "aria-disabled": disabled ? 'true' : undefined, "aria-expanded": open ? 'true' : undefined, "aria-haspopup": "listbox", "aria-label": ariaLabel, "aria-labelledby": [labelId, buttonId].filter(Boolean).join(' ') || undefined, onKeyDown: handleKeyDown, onMouseDown: disabled || readOnly ? null : handleMouseDown, onBlur: handleBlur, onFocus: onFocus }, SelectDisplayProps, { id: buttonId }), isEmpty(display) ? /*#__PURE__*/ y$3("span", { dangerouslySetInnerHTML: { __html: '&#8203;' } }) : display), /*#__PURE__*/ y$3("input", _extends$4({ value: Array.isArray(value) ? value.join(',') : value, name: name, ref: inputRef, "aria-hidden": true, onChange: handleChange, tabIndex: -1, className: classes.nativeInput, autoFocus: autoFocus }, other)), /*#__PURE__*/ y$3(IconComponent, { className: clsx(classes.icon, classes["icon".concat(capitalize(variant))], open && classes.iconOpen, disabled && classes.disabled) }), /*#__PURE__*/ y$3(Menu$1, _extends$4({ id: "menu-".concat(name || ''), anchorEl: displayNode, open: open, onClose: handleClose }, MenuProps, { MenuListProps: _extends$4({ 'aria-labelledby': labelId, role: 'listbox', disableListWrap: true }, MenuProps.MenuListProps), PaperProps: _extends$4({}, MenuProps.PaperProps, { style: _extends$4({ minWidth: menuMinWidth }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null) }) }), items)); });
var styles$c = styles$f;
var _ref$2 = /*#__PURE__*/ y$3(Input$2, null);
var _ref2$1 = /*#__PURE__*/ y$3(FilledInput$1, null);
var Select$1 = /*#__PURE__*/ N$1(function Select(props, ref) { var _props$autoWidth = props.autoWidth, autoWidth = _props$autoWidth === void 0 ? false : _props$autoWidth, children = props.children, classes = props.classes, _props$displayEmpty = props.displayEmpty, displayEmpty = _props$displayEmpty === void 0 ? false : _props$displayEmpty, _props$IconComponent = props.IconComponent, IconComponent = _props$IconComponent === void 0 ? ArrowDropDownIcon : _props$IconComponent, id = props.id, input = props.input, inputProps = props.inputProps, label = props.label, labelId = props.labelId, _props$labelWidth = props.labelWidth, labelWidth = _props$labelWidth === void 0 ? 0 : _props$labelWidth, MenuProps = props.MenuProps, _props$multiple = props.multiple, multiple = _props$multiple === void 0 ? false : _props$multiple, _props$native = props["native"], _native = _props$native === void 0 ? false : _props$native, onClose = props.onClose, onOpen = props.onOpen, open = props.open, renderValue = props.renderValue, SelectDisplayProps = props.SelectDisplayProps, _props$variant = props.variant, variantProps = _props$variant === void 0 ? 'standard' : _props$variant, other = _objectWithoutProperties$2(props, ["autoWidth", "children", "classes", "displayEmpty", "IconComponent", "id", "input", "inputProps", "label", "labelId", "labelWidth", "MenuProps", "multiple", "native", "onClose", "onOpen", "open", "renderValue", "SelectDisplayProps", "variant"]); var inputComponent = _native ? NativeSelectInput : SelectInput; var muiFormControl = useFormControl(); var fcs = formControlState({ props: props, muiFormControl: muiFormControl, states: ['variant'] }); var variant = fcs.variant || variantProps; var InputComponent = input || { standard: _ref$2, outlined: /*#__PURE__*/ y$3(OutlinedInput$1, { label: label, labelWidth: labelWidth }), filled: _ref2$1 }[variant]; return /*#__PURE__*/ sn(InputComponent, _extends$4({ inputComponent: inputComponent, inputProps: _extends$4({ children: children, IconComponent: IconComponent, variant: variant, type: undefined, multiple: multiple }, _native ? { id: id } : { autoWidth: autoWidth, displayEmpty: displayEmpty, labelId: labelId, MenuProps: MenuProps, onClose: onClose, onOpen: onOpen, open: open, renderValue: renderValue, SelectDisplayProps: _extends$4({ id: id }, SelectDisplayProps) }, inputProps, { classes: inputProps ? mergeClasses({ baseClasses: classes, newClasses: inputProps.classes, Component: Select }) : classes }, input ? input.props.inputProps : {}), ref: ref }, other)); });
Select$1.muiName = 'Select';
var MuiSelect = withStyles(styles$c, { name: 'MuiSelect' })(Select$1);
var styles$b = function styles(theme) { var emphasis = theme.palette.type === 'light' ? 0.8 : 0.98; var backgroundColor = emphasize(theme.palette.background["default"], emphasis); return { root: _extends$4({}, theme.typography.body2, _defineProperty({ color: theme.palette.getContrastText(backgroundColor), backgroundColor: backgroundColor, display: 'flex', alignItems: 'center', flexWrap: 'wrap', padding: '6px 16px', borderRadius: theme.shape.borderRadius, flexGrow: 1 }, theme.breakpoints.up('sm'), { flexGrow: 'initial', minWidth: 288 })), message: { padding: '8px 0' }, action: { display: 'flex', alignItems: 'center', marginLeft: 'auto', paddingLeft: 16, marginRight: -8 } }; };
var SnackbarContent = /*#__PURE__*/ N$1(function SnackbarContent(props, ref) { var action = props.action, classes = props.classes, className = props.className, message = props.message, _props$role = props.role, role = _props$role === void 0 ? 'alert' : _props$role, other = _objectWithoutProperties$2(props, ["action", "classes", "className", "message", "role"]); return /*#__PURE__*/ y$3(Paper$1, _extends$4({ role: role, square: true, elevation: 6, className: clsx(classes.root, className), ref: ref }, other), /*#__PURE__*/ y$3("div", { className: classes.message }, message), action ? /*#__PURE__*/ y$3("div", { className: classes.action }, action) : null); });
var SnackbarContent$1 = withStyles(styles$b, { name: 'MuiSnackbarContent' })(SnackbarContent);
var styles$a = function styles(theme) { var top1 = { top: 8 }; var bottom1 = { bottom: 8 }; var right = { justifyContent: 'flex-end' }; var left = { justifyContent: 'flex-start' }; var top3 = { top: 24 }; var bottom3 = { bottom: 24 }; var right3 = { right: 24 }; var left3 = { left: 24 }; var center = { left: '50%', right: 'auto', transform: 'translateX(-50%)' }; return { root: { zIndex: theme.zIndex.snackbar, position: 'fixed', display: 'flex', left: 8, right: 8, justifyContent: 'center', alignItems: 'center' }, anchorOriginTopCenter: _extends$4({}, top1, _defineProperty({}, theme.breakpoints.up('sm'), _extends$4({}, top3, center))), anchorOriginBottomCenter: _extends$4({}, bottom1, _defineProperty({}, theme.breakpoints.up('sm'), _extends$4({}, bottom3, center))), anchorOriginTopRight: _extends$4({}, top1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends$4({ left: 'auto' }, top3, right3))), anchorOriginBottomRight: _extends$4({}, bottom1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends$4({ left: 'auto' }, bottom3, right3))), anchorOriginTopLeft: _extends$4({}, top1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends$4({ right: 'auto' }, top3, left3))), anchorOriginBottomLeft: _extends$4({}, bottom1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends$4({ right: 'auto' }, bottom3, left3))) }; };
var Snackbar = /*#__PURE__*/ N$1(function Snackbar(props, ref) { var action = props.action, _props$anchorOrigin = props.anchorOrigin; _props$anchorOrigin = _props$anchorOrigin === void 0 ? { vertical: 'bottom', horizontal: 'center' } : _props$anchorOrigin; var vertical = _props$anchorOrigin.vertical, horizontal = _props$anchorOrigin.horizontal, _props$autoHideDurati = props.autoHideDuration, autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati, children = props.children, classes = props.classes, className = props.className, ClickAwayListenerProps = props.ClickAwayListenerProps, ContentProps = props.ContentProps, _props$disableWindowB = props.disableWindowBlurListener, disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB, message = props.message, onClose = props.onClose, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, onMouseEnter = props.onMouseEnter, onMouseLeave = props.onMouseLeave, open = props.open, resumeHideDuration = props.resumeHideDuration, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp, _props$transitionDura = props.transitionDuration, transitionDuration = _props$transitionDura === void 0 ? { enter: duration.enteringScreen, exit: duration.leavingScreen } : _props$transitionDura, TransitionProps = props.TransitionProps, other = _objectWithoutProperties$2(props, ["action", "anchorOrigin", "autoHideDuration", "children", "classes", "className", "ClickAwayListenerProps", "ContentProps", "disableWindowBlurListener", "message", "onClose", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "onMouseEnter", "onMouseLeave", "open", "resumeHideDuration", "TransitionComponent", "transitionDuration", "TransitionProps"]); var timerAutoHide = _$1(); var _React$useState = h$4(true), exited = _React$useState[0], setExited = _React$useState[1]; var handleClose = useEventCallback(function () { if (onClose) {
    onClose.apply(void 0, arguments);
} }); var setAutoHideTimer = useEventCallback(function (autoHideDurationParam) { if (!onClose || autoHideDurationParam == null) {
    return;
} clearTimeout(timerAutoHide.current); timerAutoHide.current = setTimeout(function () { handleClose(null, 'timeout'); }, autoHideDurationParam); }); p$3(function () { if (open) {
    setAutoHideTimer(autoHideDuration);
} return function () { clearTimeout(timerAutoHide.current); }; }, [open, autoHideDuration, setAutoHideTimer]); var handlePause = function handlePause() { clearTimeout(timerAutoHide.current); }; var handleResume = T$2(function () { if (autoHideDuration != null) {
    setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);
} }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]); var handleMouseEnter = function handleMouseEnter(event) { if (onMouseEnter) {
    onMouseEnter(event);
} handlePause(); }; var handleMouseLeave = function handleMouseLeave(event) { if (onMouseLeave) {
    onMouseLeave(event);
} handleResume(); }; var handleClickAway = function handleClickAway(event) { if (onClose) {
    onClose(event, 'clickaway');
} }; var handleExited = function handleExited() { setExited(true); }; var handleEnter = function handleEnter() { setExited(false); }; p$3(function () { if (!disableWindowBlurListener && open) {
    window.addEventListener('focus', handleResume);
    window.addEventListener('blur', handlePause);
    return function () { window.removeEventListener('focus', handleResume); window.removeEventListener('blur', handlePause); };
} return undefined; }, [disableWindowBlurListener, handleResume, open]); if (!open && exited) {
    return null;
} return /*#__PURE__*/ y$3(ClickAwayListener, _extends$4({ onClickAway: handleClickAway }, ClickAwayListenerProps), /*#__PURE__*/ y$3("div", _extends$4({ className: clsx(classes.root, classes["anchorOrigin".concat(capitalize(vertical)).concat(capitalize(horizontal))], className), onMouseEnter: handleMouseEnter, onMouseLeave: handleMouseLeave, ref: ref }, other), /*#__PURE__*/ y$3(TransitionComponent, _extends$4({ appear: true, "in": open, onEnter: createChainedFunction(handleEnter, onEnter), onEntered: onEntered, onEntering: onEntering, onExit: onExit, onExited: createChainedFunction(handleExited, onExited), onExiting: onExiting, timeout: transitionDuration, direction: vertical === 'top' ? 'down' : 'up' }, TransitionProps), children || /*#__PURE__*/ y$3(SnackbarContent$1, _extends$4({ message: message, action: action }, ContentProps))))); });
var Snackbar$1 = withStyles(styles$a, { flip: false, name: 'MuiSnackbar' })(Snackbar);
var TableContext = /*#__PURE__*/ F$4();
var styles$9 = function styles(theme) { return { root: { display: 'table', width: '100%', borderCollapse: 'collapse', borderSpacing: 0, '& caption': _extends$4({}, theme.typography.body2, { padding: theme.spacing(2), color: theme.palette.text.secondary, textAlign: 'left', captionSide: 'bottom' }) }, stickyHeader: { borderCollapse: 'separate' } }; };
var defaultComponent$3 = 'table';
var Table$1 = /*#__PURE__*/ N$1(function Table(props, ref) { var classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? defaultComponent$3 : _props$component, _props$padding = props.padding, padding = _props$padding === void 0 ? 'normal' : _props$padding, _props$size = props.size, size = _props$size === void 0 ? 'medium' : _props$size, _props$stickyHeader = props.stickyHeader, stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader, other = _objectWithoutProperties$2(props, ["classes", "className", "component", "padding", "size", "stickyHeader"]); var table = F$3(function () { return { padding: padding, size: size, stickyHeader: stickyHeader }; }, [padding, size, stickyHeader]); return /*#__PURE__*/ y$3(TableContext.Provider, { value: table }, /*#__PURE__*/ y$3(Component, _extends$4({ role: Component === defaultComponent$3 ? null : 'table', ref: ref, className: clsx(classes.root, className, stickyHeader && classes.stickyHeader) }, other))); });
var MUITable = withStyles(styles$9, { name: 'MuiTable' })(Table$1);
var Tablelvl2Context = /*#__PURE__*/ F$4();
var styles$8 = { root: { display: 'table-row-group' } };
var tablelvl2$1 = { variant: 'body' };
var defaultComponent$2 = 'tbody';
var TableBody = /*#__PURE__*/ N$1(function TableBody(props, ref) { var classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? defaultComponent$2 : _props$component, other = _objectWithoutProperties$2(props, ["classes", "className", "component"]); return /*#__PURE__*/ y$3(Tablelvl2Context.Provider, { value: tablelvl2$1 }, /*#__PURE__*/ y$3(Component, _extends$4({ className: clsx(classes.root, className), ref: ref, role: Component === defaultComponent$2 ? null : 'rowgroup' }, other))); });
var TableBody$1 = withStyles(styles$8, { name: 'MuiTableBody' })(TableBody);
var styles$7 = function styles(theme) { return { root: _extends$4({}, theme.typography.body2, { display: 'table-cell', verticalAlign: 'inherit', borderBottom: "1px solid\n    ".concat(theme.palette.type === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)), textAlign: 'left', padding: 16 }), head: { color: theme.palette.text.primary, lineHeight: theme.typography.pxToRem(24), fontWeight: theme.typography.fontWeightMedium }, body: { color: theme.palette.text.primary }, footer: { color: theme.palette.text.secondary, lineHeight: theme.typography.pxToRem(21), fontSize: theme.typography.pxToRem(12) }, sizeSmall: { padding: '6px 24px 6px 16px', '&:last-child': { paddingRight: 16 }, '&$paddingCheckbox': { width: 24, padding: '0 12px 0 16px', '&:last-child': { paddingLeft: 12, paddingRight: 16 }, '& > *': { padding: 0 } } }, paddingCheckbox: { width: 48, padding: '0 0 0 4px', '&:last-child': { paddingLeft: 0, paddingRight: 4 } }, paddingNone: { padding: 0, '&:last-child': { padding: 0 } }, alignLeft: { textAlign: 'left' }, alignCenter: { textAlign: 'center' }, alignRight: { textAlign: 'right', flexDirection: 'row-reverse' }, alignJustify: { textAlign: 'justify' }, stickyHeader: { position: 'sticky', top: 0, left: 0, zIndex: 2, backgroundColor: theme.palette.background["default"] } }; };
var TableCell$1 = /*#__PURE__*/ N$1(function TableCell(props, ref) { var _props$align = props.align, align = _props$align === void 0 ? 'inherit' : _props$align, classes = props.classes, className = props.className, component = props.component, paddingProp = props.padding, scopeProp = props.scope, sizeProp = props.size, sortDirection = props.sortDirection, variantProp = props.variant, other = _objectWithoutProperties$2(props, ["align", "classes", "className", "component", "padding", "scope", "size", "sortDirection", "variant"]); var table = q$5(TableContext); var tablelvl2 = q$5(Tablelvl2Context); var isHeadCell = tablelvl2 && tablelvl2.variant === 'head'; var role; var Component; if (component) {
    Component = component;
    role = isHeadCell ? 'columnheader' : 'cell';
}
else {
    Component = isHeadCell ? 'th' : 'td';
} var scope = scopeProp; if (!scope && isHeadCell) {
    scope = 'col';
} var padding = paddingProp || (table && table.padding ? table.padding : 'normal'); var size = sizeProp || (table && table.size ? table.size : 'medium'); var variant = variantProp || tablelvl2 && tablelvl2.variant; var ariaSort = null; if (sortDirection) {
    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';
} return /*#__PURE__*/ y$3(Component, _extends$4({ ref: ref, className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes["align".concat(capitalize(align))], padding !== 'normal' && classes["padding".concat(capitalize(padding))], size !== 'medium' && classes["size".concat(capitalize(size))], variant === 'head' && table && table.stickyHeader && classes.stickyHeader), "aria-sort": ariaSort, role: role, scope: scope }, other)); });
var MUITableCell = withStyles(styles$7, { name: 'MuiTableCell' })(TableCell$1);
var styles$6 = { root: { width: '100%', overflowX: 'auto' } };
var TableContainer = /*#__PURE__*/ N$1(function TableContainer(props, ref) { var classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? 'div' : _props$component, other = _objectWithoutProperties$2(props, ["classes", "className", "component"]); return /*#__PURE__*/ y$3(Component, _extends$4({ ref: ref, className: clsx(classes.root, className) }, other)); });
var TableContainer$1 = withStyles(styles$6, { name: 'MuiTableContainer' })(TableContainer);
var styles$5 = { root: { display: 'table-header-group' } };
var tablelvl2 = { variant: 'head' };
var defaultComponent$1 = 'thead';
var TableHead = /*#__PURE__*/ N$1(function TableHead(props, ref) { var classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? defaultComponent$1 : _props$component, other = _objectWithoutProperties$2(props, ["classes", "className", "component"]); return /*#__PURE__*/ y$3(Tablelvl2Context.Provider, { value: tablelvl2 }, /*#__PURE__*/ y$3(Component, _extends$4({ className: clsx(classes.root, className), ref: ref, role: Component === defaultComponent$1 ? null : 'rowgroup' }, other))); });
var TableHead$1 = withStyles(styles$5, { name: 'MuiTableHead' })(TableHead);
var styles$4 = function styles(theme) { return { root: { position: 'relative', display: 'flex', alignItems: 'center' }, gutters: _defineProperty({ paddingLeft: theme.spacing(2), paddingRight: theme.spacing(2) }, theme.breakpoints.up('sm'), { paddingLeft: theme.spacing(3), paddingRight: theme.spacing(3) }), regular: theme.mixins.toolbar, dense: { minHeight: 48 } }; };
var Toolbar = /*#__PURE__*/ N$1(function Toolbar(props, ref) { var classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? 'div' : _props$component, _props$disableGutters = props.disableGutters, disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters, _props$variant = props.variant, variant = _props$variant === void 0 ? 'regular' : _props$variant, other = _objectWithoutProperties$2(props, ["classes", "className", "component", "disableGutters", "variant"]); return /*#__PURE__*/ y$3(Component, _extends$4({ className: clsx(classes.root, classes[variant], className, !disableGutters && classes.gutters), ref: ref }, other)); });
var Toolbar$1 = withStyles(styles$4, { name: 'MuiToolbar' })(Toolbar);
var KeyboardArrowLeft = createSvgIcon$1(/*#__PURE__*/ y$3("path", { d: "M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z" }));
var KeyboardArrowRight = createSvgIcon$1(/*#__PURE__*/ y$3("path", { d: "M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z" }));
var _ref$1 = /*#__PURE__*/ y$3(KeyboardArrowRight, null);
var _ref2 = /*#__PURE__*/ y$3(KeyboardArrowLeft, null);
var _ref3 = /*#__PURE__*/ y$3(KeyboardArrowLeft, null);
var _ref4 = /*#__PURE__*/ y$3(KeyboardArrowRight, null);
var TablePaginationActions = /*#__PURE__*/ N$1(function TablePaginationActions(props, ref) { var backIconButtonProps = props.backIconButtonProps, count = props.count, nextIconButtonProps = props.nextIconButtonProps, _props$onChangePage = props.onChangePage, onChangePage = _props$onChangePage === void 0 ? function () { } : _props$onChangePage, _props$onPageChange = props.onPageChange, onPageChange = _props$onPageChange === void 0 ? function () { } : _props$onPageChange, page = props.page, rowsPerPage = props.rowsPerPage, other = _objectWithoutProperties$2(props, ["backIconButtonProps", "count", "nextIconButtonProps", "onChangePage", "onPageChange", "page", "rowsPerPage"]); var theme = useTheme(); var handleBackButtonClick = function handleBackButtonClick(event) { onChangePage(event, page - 1); onPageChange(event, page - 1); }; var handleNextButtonClick = function handleNextButtonClick(event) { onChangePage(event, page + 1); onPageChange(event, page + 1); }; return /*#__PURE__*/ y$3("div", _extends$4({ ref: ref }, other), /*#__PURE__*/ y$3(IconButton$1, _extends$4({ onClick: handleBackButtonClick, disabled: page === 0, color: "inherit" }, backIconButtonProps), theme.direction === 'rtl' ? _ref$1 : _ref2), /*#__PURE__*/ y$3(IconButton$1, _extends$4({ onClick: handleNextButtonClick, disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false, color: "inherit" }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4)); });
var styles$3 = function styles(theme) { return { root: { color: theme.palette.text.primary, fontSize: theme.typography.pxToRem(14), overflow: 'auto', '&:last-child': { padding: 0 } }, toolbar: { minHeight: 52, paddingRight: 2 }, spacer: { flex: '1 1 100%' }, caption: { flexShrink: 0 }, selectRoot: { marginRight: 32, marginLeft: 8 }, select: { paddingLeft: 8, paddingRight: 24, textAlign: 'right', textAlignLast: 'right' }, selectIcon: {}, input: { color: 'inherit', fontSize: 'inherit', flexShrink: 0 }, menuItem: {}, actions: { flexShrink: 0, marginLeft: 20 } }; };
var defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) { var from = _ref.from, to = _ref.to, count = _ref.count; return "".concat(from, "-").concat(to, " of ").concat(count !== -1 ? count : "more than ".concat(to)); };
var defaultRowsPerPageOptions = [10, 25, 50, 100];
var TablePagination = /*#__PURE__*/ N$1(function TablePagination(props, ref) { var _props$ActionsCompone = props.ActionsComponent, ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone, backIconButtonProps = props.backIconButtonProps, _props$backIconButton = props.backIconButtonText, backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton, classes = props.classes, className = props.className, colSpanProp = props.colSpan, _props$component = props.component, Component = _props$component === void 0 ? MUITableCell : _props$component, count = props.count, _props$labelDisplayed = props.labelDisplayedRows, labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed, _props$labelRowsPerPa = props.labelRowsPerPage, labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa, nextIconButtonProps = props.nextIconButtonProps, _props$nextIconButton = props.nextIconButtonText, nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton, onChangePage = props.onChangePage, onPageChange = props.onPageChange, onChangeRowsPerPageProp = props.onChangeRowsPerPage, onRowsPerPageChangeProp = props.onRowsPerPageChange, page = props.page, rowsPerPage = props.rowsPerPage, _props$rowsPerPageOpt = props.rowsPerPageOptions, rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt, _props$SelectProps = props.SelectProps, SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps, other = _objectWithoutProperties$2(props, ["ActionsComponent", "backIconButtonProps", "backIconButtonText", "classes", "className", "colSpan", "component", "count", "labelDisplayedRows", "labelRowsPerPage", "nextIconButtonProps", "nextIconButtonText", "onChangePage", "onPageChange", "onChangeRowsPerPage", "onRowsPerPageChange", "page", "rowsPerPage", "rowsPerPageOptions", "SelectProps"]); var onChangeRowsPerPage = onChangeRowsPerPageProp || onRowsPerPageChangeProp; var colSpan; if (Component === MUITableCell || Component === 'td') {
    colSpan = colSpanProp || 1000;
} var selectId = useId(); var labelId = useId(); var MenuItemComponent = SelectProps["native"] ? 'option' : MenuItem$2; return /*#__PURE__*/ y$3(Component, _extends$4({ className: clsx(classes.root, className), colSpan: colSpan, ref: ref }, other), /*#__PURE__*/ y$3(Toolbar$1, { className: classes.toolbar }, /*#__PURE__*/ y$3("div", { className: classes.spacer }), rowsPerPageOptions.length > 1 && /*#__PURE__*/ y$3(MUITypography, { color: "inherit", variant: "body2", className: classes.caption, id: labelId }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/ y$3(MuiSelect, _extends$4({ classes: { select: classes.select, icon: classes.selectIcon }, input: /*#__PURE__*/ y$3(InputBase$1, { className: clsx(classes.input, classes.selectRoot) }), value: rowsPerPage, onChange: onChangeRowsPerPage, id: selectId, labelId: labelId }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) { return /*#__PURE__*/ y$3(MenuItemComponent, { className: classes.menuItem, key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption, value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption); })), /*#__PURE__*/ y$3(MUITypography, { color: "inherit", variant: "body2", className: classes.caption }, labelDisplayedRows({ from: count === 0 ? 0 : page * rowsPerPage + 1, to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage, count: count === -1 ? -1 : count, page: page })), /*#__PURE__*/ y$3(ActionsComponent, { className: classes.actions, backIconButtonProps: _extends$4({ title: backIconButtonText, 'aria-label': backIconButtonText }, backIconButtonProps), count: count, nextIconButtonProps: _extends$4({ title: nextIconButtonText, 'aria-label': nextIconButtonText }, nextIconButtonProps), onChangePage: onChangePage, onPageChange: onPageChange, page: page, rowsPerPage: rowsPerPage }))); });
var TablePagination$1 = withStyles(styles$3, { name: 'MuiTablePagination' })(TablePagination);
var styles$2 = function styles(theme) { return { root: { color: 'inherit', display: 'table-row', verticalAlign: 'middle', outline: 0, '&$hover:hover': { backgroundColor: theme.palette.action.hover }, '&$selected, &$selected:hover': { backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.selectedOpacity) } }, selected: {}, hover: {}, head: {}, footer: {} }; };
var defaultComponent = 'tr';
var TableRow$1 = /*#__PURE__*/ N$1(function TableRow(props, ref) { var classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? defaultComponent : _props$component, _props$hover = props.hover, hover = _props$hover === void 0 ? false : _props$hover, _props$selected = props.selected, selected = _props$selected === void 0 ? false : _props$selected, other = _objectWithoutProperties$2(props, ["classes", "className", "component", "hover", "selected"]); var tablelvl2 = q$5(Tablelvl2Context); return /*#__PURE__*/ y$3(Component, _extends$4({ ref: ref, className: clsx(classes.root, className, tablelvl2 && { 'head': classes.head, 'footer': classes.footer }[tablelvl2.variant], hover && classes.hover, selected && classes.selected), role: Component === defaultComponent ? null : 'row' }, other)); });
var MUITableRow = withStyles(styles$2, { name: 'MuiTableRow' })(TableRow$1);
function round(value) { return Math.round(value * 1e5) / 1e5; }
function arrowGenerator() { return { '&[x-placement*="bottom"] $arrow': { top: 0, left: 0, marginTop: '-0.71em', marginLeft: 4, marginRight: 4, '&::before': { transformOrigin: '0 100%' } }, '&[x-placement*="top"] $arrow': { bottom: 0, left: 0, marginBottom: '-0.71em', marginLeft: 4, marginRight: 4, '&::before': { transformOrigin: '100% 0' } }, '&[x-placement*="right"] $arrow': { left: 0, marginLeft: '-0.71em', height: '1em', width: '0.71em', marginTop: 4, marginBottom: 4, '&::before': { transformOrigin: '100% 100%' } }, '&[x-placement*="left"] $arrow': { right: 0, marginRight: '-0.71em', height: '1em', width: '0.71em', marginTop: 4, marginBottom: 4, '&::before': { transformOrigin: '0 0' } } }; }
var styles$1 = function styles(theme) { return { popper: { zIndex: theme.zIndex.tooltip, pointerEvents: 'none' }, popperInteractive: { pointerEvents: 'auto' }, popperArrow: arrowGenerator(), tooltip: { backgroundColor: alpha(theme.palette.grey[700], 0.9), borderRadius: theme.shape.borderRadius, color: theme.palette.common.white, fontFamily: theme.typography.fontFamily, padding: '4px 8px', fontSize: theme.typography.pxToRem(10), lineHeight: "".concat(round(14 / 10), "em"), maxWidth: 300, wordWrap: 'break-word', fontWeight: theme.typography.fontWeightMedium }, tooltipArrow: { position: 'relative', margin: '0' }, arrow: { overflow: 'hidden', position: 'absolute', width: '1em', height: '0.71em', boxSizing: 'border-box', color: alpha(theme.palette.grey[700], 0.9), '&::before': { content: '""', margin: 'auto', display: 'block', width: '100%', height: '100%', backgroundColor: 'currentColor', transform: 'rotate(45deg)' } }, touch: { padding: '8px 16px', fontSize: theme.typography.pxToRem(14), lineHeight: "".concat(round(16 / 14), "em"), fontWeight: theme.typography.fontWeightRegular }, tooltipPlacementLeft: _defineProperty({ transformOrigin: 'right center', margin: '0 24px ' }, theme.breakpoints.up('sm'), { margin: '0 14px' }), tooltipPlacementRight: _defineProperty({ transformOrigin: 'left center', margin: '0 24px' }, theme.breakpoints.up('sm'), { margin: '0 14px' }), tooltipPlacementTop: _defineProperty({ transformOrigin: 'center bottom', margin: '24px 0' }, theme.breakpoints.up('sm'), { margin: '14px 0' }), tooltipPlacementBottom: _defineProperty({ transformOrigin: 'center top', margin: '24px 0' }, theme.breakpoints.up('sm'), { margin: '14px 0' }) }; };
var hystersisOpen = false;
var hystersisTimer = null;
var Tooltip$1 = /*#__PURE__*/ N$1(function Tooltip(props, ref) { var _props$arrow = props.arrow, arrow = _props$arrow === void 0 ? false : _props$arrow, children = props.children, classes = props.classes, _props$disableFocusLi = props.disableFocusListener, disableFocusListener = _props$disableFocusLi === void 0 ? false : _props$disableFocusLi, _props$disableHoverLi = props.disableHoverListener, disableHoverListener = _props$disableHoverLi === void 0 ? false : _props$disableHoverLi, _props$disableTouchLi = props.disableTouchListener, disableTouchListener = _props$disableTouchLi === void 0 ? false : _props$disableTouchLi, _props$enterDelay = props.enterDelay, enterDelay = _props$enterDelay === void 0 ? 100 : _props$enterDelay, _props$enterNextDelay = props.enterNextDelay, enterNextDelay = _props$enterNextDelay === void 0 ? 0 : _props$enterNextDelay, _props$enterTouchDela = props.enterTouchDelay, enterTouchDelay = _props$enterTouchDela === void 0 ? 700 : _props$enterTouchDela, idProp = props.id, _props$interactive = props.interactive, interactive = _props$interactive === void 0 ? false : _props$interactive, _props$leaveDelay = props.leaveDelay, leaveDelay = _props$leaveDelay === void 0 ? 0 : _props$leaveDelay, _props$leaveTouchDela = props.leaveTouchDelay, leaveTouchDelay = _props$leaveTouchDela === void 0 ? 1500 : _props$leaveTouchDela, onClose = props.onClose, onOpen = props.onOpen, openProp = props.open, _props$placement = props.placement, placement = _props$placement === void 0 ? 'bottom' : _props$placement, _props$PopperComponen = props.PopperComponent, PopperComponent = _props$PopperComponen === void 0 ? Popper : _props$PopperComponen, PopperProps = props.PopperProps, title = props.title, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp, TransitionProps = props.TransitionProps, other = _objectWithoutProperties$2(props, ["arrow", "children", "classes", "disableFocusListener", "disableHoverListener", "disableTouchListener", "enterDelay", "enterNextDelay", "enterTouchDelay", "id", "interactive", "leaveDelay", "leaveTouchDelay", "onClose", "onOpen", "open", "placement", "PopperComponent", "PopperProps", "title", "TransitionComponent", "TransitionProps"]); var theme = useTheme(); var _React$useState = h$4(), childNode = _React$useState[0], setChildNode = _React$useState[1]; var _React$useState2 = h$4(null), arrowRef = _React$useState2[0], setArrowRef = _React$useState2[1]; var ignoreNonTouchEvents = _$1(false); var closeTimer = _$1(); var enterTimer = _$1(); var leaveTimer = _$1(); var touchTimer = _$1(); var _useControlled = useControlled({ controlled: openProp, "default": false, name: 'Tooltip', state: 'open' }), _useControlled2 = _slicedToArray(_useControlled, 2), openState = _useControlled2[0], setOpenState = _useControlled2[1]; var open = openState; var id = useId(idProp); p$3(function () { return function () { clearTimeout(closeTimer.current); clearTimeout(enterTimer.current); clearTimeout(leaveTimer.current); clearTimeout(touchTimer.current); }; }, []); var handleOpen = function handleOpen(event) { clearTimeout(hystersisTimer); hystersisOpen = true; setOpenState(true); if (onOpen) {
    onOpen(event);
} }; var handleEnter = function handleEnter() { var forward = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true; return function (event) { var childrenProps = children.props; if (event.type === 'mouseover' && childrenProps.onMouseOver && forward) {
    childrenProps.onMouseOver(event);
} if (ignoreNonTouchEvents.current && event.type !== 'touchstart') {
    return;
} if (childNode) {
    childNode.removeAttribute('title');
} clearTimeout(enterTimer.current); clearTimeout(leaveTimer.current); if (enterDelay || hystersisOpen && enterNextDelay) {
    event.persist();
    enterTimer.current = setTimeout(function () { handleOpen(event); }, hystersisOpen ? enterNextDelay : enterDelay);
}
else {
    handleOpen(event);
} }; }; var _useIsFocusVisible = useIsFocusVisible(), isFocusVisible = _useIsFocusVisible.isFocusVisible, onBlurVisible = _useIsFocusVisible.onBlurVisible, focusVisibleRef = _useIsFocusVisible.ref; var _React$useState3 = h$4(false), childIsFocusVisible = _React$useState3[0], setChildIsFocusVisible = _React$useState3[1]; var handleBlur = function handleBlur() { if (childIsFocusVisible) {
    setChildIsFocusVisible(false);
    onBlurVisible();
} }; var handleFocus = function handleFocus() { var forward = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true; return function (event) { if (!childNode) {
    setChildNode(event.currentTarget);
} if (isFocusVisible(event)) {
    setChildIsFocusVisible(true);
    handleEnter()(event);
} var childrenProps = children.props; if (childrenProps.onFocus && forward) {
    childrenProps.onFocus(event);
} }; }; var handleClose = function handleClose(event) { clearTimeout(hystersisTimer); hystersisTimer = setTimeout(function () { hystersisOpen = false; }, 800 + leaveDelay); setOpenState(false); if (onClose) {
    onClose(event);
} clearTimeout(closeTimer.current); closeTimer.current = setTimeout(function () { ignoreNonTouchEvents.current = false; }, theme.transitions.duration.shortest); }; var handleLeave = function handleLeave() { var forward = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true; return function (event) { var childrenProps = children.props; if (event.type === 'blur') {
    if (childrenProps.onBlur && forward) {
        childrenProps.onBlur(event);
    }
    handleBlur();
} if (event.type === 'mouseleave' && childrenProps.onMouseLeave && event.currentTarget === childNode) {
    childrenProps.onMouseLeave(event);
} clearTimeout(enterTimer.current); clearTimeout(leaveTimer.current); event.persist(); leaveTimer.current = setTimeout(function () { handleClose(event); }, leaveDelay); }; }; var detectTouchStart = function detectTouchStart(event) { ignoreNonTouchEvents.current = true; var childrenProps = children.props; if (childrenProps.onTouchStart) {
    childrenProps.onTouchStart(event);
} }; var handleTouchStart = function handleTouchStart(event) { detectTouchStart(event); clearTimeout(leaveTimer.current); clearTimeout(closeTimer.current); clearTimeout(touchTimer.current); event.persist(); touchTimer.current = setTimeout(function () { handleEnter()(event); }, enterTouchDelay); }; var handleTouchEnd = function handleTouchEnd(event) { if (children.props.onTouchEnd) {
    children.props.onTouchEnd(event);
} clearTimeout(touchTimer.current); clearTimeout(leaveTimer.current); event.persist(); leaveTimer.current = setTimeout(function () { handleClose(event); }, leaveTouchDelay); }; var handleUseRef = useForkRef(setChildNode, ref); var handleFocusRef = useForkRef(focusVisibleRef, handleUseRef); var handleOwnRef = T$2(function (instance) { setRef(handleFocusRef, vn(instance)); }, [handleFocusRef]); var handleRef = useForkRef(children.ref, handleOwnRef); if (title === '') {
    open = false;
} var shouldShowNativeTitle = !open && !disableHoverListener; var childrenProps = _extends$4({ 'aria-describedby': open ? id : null, title: shouldShowNativeTitle && typeof title === 'string' ? title : null }, other, children.props, { className: clsx(other.className, children.props.className), onTouchStart: detectTouchStart, ref: handleRef }); var interactiveWrapperListeners = {}; if (!disableTouchListener) {
    childrenProps.onTouchStart = handleTouchStart;
    childrenProps.onTouchEnd = handleTouchEnd;
} if (!disableHoverListener) {
    childrenProps.onMouseOver = handleEnter();
    childrenProps.onMouseLeave = handleLeave();
    if (interactive) {
        interactiveWrapperListeners.onMouseOver = handleEnter(false);
        interactiveWrapperListeners.onMouseLeave = handleLeave(false);
    }
} if (!disableFocusListener) {
    childrenProps.onFocus = handleFocus();
    childrenProps.onBlur = handleLeave();
    if (interactive) {
        interactiveWrapperListeners.onFocus = handleFocus(false);
        interactiveWrapperListeners.onBlur = handleLeave(false);
    }
} var mergedPopperProps = F$3(function () { return deepmerge({ popperOptions: { modifiers: { arrow: { enabled: Boolean(arrowRef), element: arrowRef } } } }, PopperProps); }, [arrowRef, PopperProps]); return /*#__PURE__*/ y$3(g$5, null, /*#__PURE__*/ sn(children, childrenProps), /*#__PURE__*/ y$3(PopperComponent, _extends$4({ className: clsx(classes.popper, interactive && classes.popperInteractive, arrow && classes.popperArrow), placement: placement, anchorEl: childNode, open: childNode ? open : false, id: childrenProps['aria-describedby'], transition: true }, interactiveWrapperListeners, mergedPopperProps), function (_ref) { var placementInner = _ref.placement, TransitionPropsInner = _ref.TransitionProps; return /*#__PURE__*/ y$3(TransitionComponent, _extends$4({ timeout: theme.transitions.duration.shorter }, TransitionPropsInner, TransitionProps), /*#__PURE__*/ y$3("div", { className: clsx(classes.tooltip, classes["tooltipPlacement".concat(capitalize(placementInner.split('-')[0]))], ignoreNonTouchEvents.current && classes.touch, arrow && classes.tooltipArrow) }, title, arrow ? /*#__PURE__*/ y$3("span", { className: classes.arrow, ref: setArrowRef }) : null)); })); });
var MUITooltip = withStyles(styles$1, { name: 'MuiTooltip', flip: false })(Tooltip$1);
var useStyles$l = makeStyles(function (theme) { return { root: { background: theme.styleConfig.container.backgroundColor, border: '1px solid', borderColor: theme.styleConfig.container.borderColor, borderRadius: theme.styleConfig.container.borderRadius, color: theme.styleConfig.colors.primary, width: theme.styleConfig.container.width, padding: theme.spacing(6), boxSizing: 'border-box' } }; });
var MainContainer = function MainContainer(_ref5) { var children = _ref5.children; var classes = useStyles$l(); return /*#__PURE__*/ wn.createElement("div", { className: classes.root }, children); };
var StytchClientContext = /*#__PURE__*/ wn.createContext(null);
var CheckCircle = {};
var interopRequireDefault = { exports: {} };
(function (module) { function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; } module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports; })(interopRequireDefault);
var interopRequireDefaultExports = interopRequireDefault.exports;
var interopRequireWildcard = { exports: {} };
var _typeof = { exports: {} };
(function (module) { function _typeof(o) {
    "@babel/helpers - typeof";
    return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(o);
} module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports; })(_typeof);
var _typeofExports = _typeof.exports;
(function (module) { var _typeof = _typeofExports["default"]; function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap)
    return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); } function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule)
    return e; if (null === e || "object" != _typeof(e) && "function" != typeof e)
    return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e))
    return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e)
    if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
    } return n["default"] = e, t && t.set(e, n), n; } module.exports = _interopRequireWildcard, module.exports.__esModule = true, module.exports["default"] = module.exports; })(interopRequireWildcard);
var interopRequireWildcardExports = interopRequireWildcard.exports;
var createSvgIcon = {};
var require$$0 = /*@__PURE__*/ getAugmentedNamespace(utils);
var hasRequiredCreateSvgIcon;
function requireCreateSvgIcon() { if (hasRequiredCreateSvgIcon)
    return createSvgIcon; hasRequiredCreateSvgIcon = 1; (function (exports) { Object.defineProperty(exports, "__esModule", { value: true }); Object.defineProperty(exports, "default", { enumerable: true, get: function get() { return _utils.createSvgIcon; } }); var _utils = require$$0; })(createSvgIcon); return createSvgIcon; }
var _interopRequireDefault$c = interopRequireDefaultExports;
var _interopRequireWildcard$c = interopRequireWildcardExports;
Object.defineProperty(CheckCircle, "__esModule", { value: true });
var default_1$c = CheckCircle["default"] = void 0;
var React$c = _interopRequireWildcard$c(require$$2);
var _createSvgIcon$c = _interopRequireDefault$c(requireCreateSvgIcon());
var _default$c = (0, _createSvgIcon$c["default"])(/*#__PURE__*/ React$c.createElement("path", { d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z" }), 'CheckCircle');
default_1$c = CheckCircle["default"] = _default$c;
var Close = {};
var _interopRequireDefault$b = interopRequireDefaultExports;
var _interopRequireWildcard$b = interopRequireWildcardExports;
Object.defineProperty(Close, "__esModule", { value: true });
var default_1$b = Close["default"] = void 0;
var React$b = _interopRequireWildcard$b(require$$2);
var _createSvgIcon$b = _interopRequireDefault$b(requireCreateSvgIcon());
var _default$b = (0, _createSvgIcon$b["default"])(/*#__PURE__*/ React$b.createElement("path", { d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" }), 'Close');
default_1$b = Close["default"] = _default$b;
var _Error = {};
var _interopRequireDefault$a = interopRequireDefaultExports;
var _interopRequireWildcard$a = interopRequireWildcardExports;
Object.defineProperty(_Error, "__esModule", { value: true });
var default_1$a = _Error["default"] = void 0;
var React$a = _interopRequireWildcard$a(require$$2);
var _createSvgIcon$a = _interopRequireDefault$a(requireCreateSvgIcon());
var _default$a = (0, _createSvgIcon$a["default"])(/*#__PURE__*/ React$a.createElement("path", { d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z" }), 'Error');
default_1$a = _Error["default"] = _default$a;
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null)
    return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
        continue;
    target[key] = source[key];
} return target; }
function _objectWithoutProperties(source, excluded) { if (source == null)
    return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0)
            continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key))
            continue;
        target[key] = source[key];
    }
} return target; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
        }
    }
} return target; }; return _extends.apply(this, arguments); }
var SuccessOutlinedIcon = createSvgIcon$1(/*#__PURE__*/ y$3("path", { d: "M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z" }));
var ReportProblemOutlinedIcon = createSvgIcon$1(/*#__PURE__*/ y$3("path", { d: "M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z" }));
var ErrorOutlineIcon = createSvgIcon$1(/*#__PURE__*/ y$3("path", { d: "M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z" }));
var InfoOutlinedIcon = createSvgIcon$1(/*#__PURE__*/ y$3("path", { d: "M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z" }));
var CloseIcon = createSvgIcon$1(/*#__PURE__*/ y$3("path", { d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" }));
var styles = function styles(theme) { var getColor = theme.palette.type === 'light' ? darken : lighten; var getBackgroundColor = theme.palette.type === 'light' ? lighten : darken; return { root: _extends({}, theme.typography.body2, { borderRadius: theme.shape.borderRadius, backgroundColor: 'transparent', display: 'flex', padding: '6px 16px' }), standardSuccess: { color: getColor(theme.palette.success.main, 0.6), backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9), '& $icon': { color: theme.palette.success.main } }, standardInfo: { color: getColor(theme.palette.info.main, 0.6), backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9), '& $icon': { color: theme.palette.info.main } }, standardWarning: { color: getColor(theme.palette.warning.main, 0.6), backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9), '& $icon': { color: theme.palette.warning.main } }, standardError: { color: getColor(theme.palette.error.main, 0.6), backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9), '& $icon': { color: theme.palette.error.main } }, outlinedSuccess: { color: getColor(theme.palette.success.main, 0.6), border: "1px solid ".concat(theme.palette.success.main), '& $icon': { color: theme.palette.success.main } }, outlinedInfo: { color: getColor(theme.palette.info.main, 0.6), border: "1px solid ".concat(theme.palette.info.main), '& $icon': { color: theme.palette.info.main } }, outlinedWarning: { color: getColor(theme.palette.warning.main, 0.6), border: "1px solid ".concat(theme.palette.warning.main), '& $icon': { color: theme.palette.warning.main } }, outlinedError: { color: getColor(theme.palette.error.main, 0.6), border: "1px solid ".concat(theme.palette.error.main), '& $icon': { color: theme.palette.error.main } }, filledSuccess: { color: '#fff', fontWeight: theme.typography.fontWeightMedium, backgroundColor: theme.palette.success.main }, filledInfo: { color: '#fff', fontWeight: theme.typography.fontWeightMedium, backgroundColor: theme.palette.info.main }, filledWarning: { color: '#fff', fontWeight: theme.typography.fontWeightMedium, backgroundColor: theme.palette.warning.main }, filledError: { color: '#fff', fontWeight: theme.typography.fontWeightMedium, backgroundColor: theme.palette.error.main }, icon: { marginRight: 12, padding: '7px 0', display: 'flex', fontSize: 22, opacity: 0.9 }, message: { padding: '8px 0' }, action: { display: 'flex', alignItems: 'center', marginLeft: 'auto', paddingLeft: 16, marginRight: -8 } }; };
var defaultIconMapping = { success: /*#__PURE__*/ y$3(SuccessOutlinedIcon, { fontSize: "inherit" }), warning: /*#__PURE__*/ y$3(ReportProblemOutlinedIcon, { fontSize: "inherit" }), error: /*#__PURE__*/ y$3(ErrorOutlineIcon, { fontSize: "inherit" }), info: /*#__PURE__*/ y$3(InfoOutlinedIcon, { fontSize: "inherit" }) };
var _ref = /*#__PURE__*/ y$3(CloseIcon, { fontSize: "small" });
var Alert$1 = /*#__PURE__*/ N$1(function Alert(props, ref) { var action = props.action, children = props.children, classes = props.classes, className = props.className, _props$closeText = props.closeText, closeText = _props$closeText === void 0 ? 'Close' : _props$closeText, color = props.color, icon = props.icon, _props$iconMapping = props.iconMapping, iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping, onClose = props.onClose, _props$role = props.role, role = _props$role === void 0 ? 'alert' : _props$role, _props$severity = props.severity, severity = _props$severity === void 0 ? 'success' : _props$severity, _props$variant = props.variant, variant = _props$variant === void 0 ? 'standard' : _props$variant, other = _objectWithoutProperties(props, ["action", "children", "classes", "className", "closeText", "color", "icon", "iconMapping", "onClose", "role", "severity", "variant"]); return /*#__PURE__*/ y$3(Paper$1, _extends({ role: role, square: true, elevation: 0, className: clsx(classes.root, classes["".concat(variant).concat(capitalize(color || severity))], className), ref: ref }, other), icon !== false ? /*#__PURE__*/ y$3("div", { className: classes.icon }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, /*#__PURE__*/ y$3("div", { className: classes.message }, children), action != null ? /*#__PURE__*/ y$3("div", { className: classes.action }, action) : null, action == null && onClose ? /*#__PURE__*/ y$3("div", { className: classes.action }, /*#__PURE__*/ y$3(IconButton$1, { size: "small", "aria-label": closeText, title: closeText, color: "inherit", onClick: onClose }, _ref)) : null); });
var MUIAlert = withStyles(styles, { name: 'MuiAlert' })(Alert$1);
var classnames = { exports: {} }; /*!
    Copyright (c) 2018 Jed Watson.
    Licensed under the MIT License (MIT), see
    http://jedwatson.github.io/classnames
*/
(function (module) { (function () { var hasOwn = {}.hasOwnProperty; function classNames() { var classes = ''; for (var i = 0; i < arguments.length; i++) {
    var arg = arguments[i];
    if (arg) {
        classes = appendClass(classes, parseValue(arg));
    }
} return classes; } function parseValue(arg) { if (typeof arg === 'string' || typeof arg === 'number') {
    return arg;
} if (_typeof2(arg) !== 'object') {
    return '';
} if (Array.isArray(arg)) {
    return classNames.apply(null, arg);
} if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {
    return arg.toString();
} var classes = ''; for (var key in arg) {
    if (hasOwn.call(arg, key) && arg[key]) {
        classes = appendClass(classes, key);
    }
} return classes; } function appendClass(value, newClass) { if (!newClass) {
    return value;
} if (value) {
    return value + ' ' + newClass;
} return value + newClass; } if (module.exports) {
    classNames["default"] = classNames;
    module.exports = classNames;
}
else {
    window.classNames = classNames;
} })(); })(classnames);
var classnamesExports = classnames.exports;
var C = /*@__PURE__*/ getDefaultExportFromCjs(classnamesExports);
var composeStyles = function composeStyles() { for (var _len3 = arguments.length, styles = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    styles[_key3] = arguments[_key3];
} return function (theme) { return styles.reduce(function (acc, style) { var rules = typeof style === 'function' ? style(theme) : style; return merge(acc, rules); }, {}); }; };
var makeStylesFactory = function makeStylesFactory() { for (var _len4 = arguments.length, baseStyles = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
    baseStyles[_key4] = arguments[_key4];
} return function () { for (var _len5 = arguments.length, styles = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
    styles[_key5] = arguments[_key5];
} return makeStyles(composeStyles.apply(void 0, baseStyles.concat(styles))); }; };
var noop = function noop() { return null; };
var makeToastStyles = makeStylesFactory(function (theme) { return { snackbar: { bottom: theme.spacing(5) }, closeButton: { padding: theme.spacing(0.5) }, closeIcon: { height: 15, width: 15 }, toast: _defineProperty2(_defineProperty2(_defineProperty2(_defineProperty2(_defineProperty2({ '& .MuiAlert-icon': { marginRight: theme.spacing(1) }, '& .MuiAlert-message': { padding: 0 }, '& .MuiAlert-action': { marginRight: theme.spacing(-0.5) } }, theme.breakpoints.down('xs'), { width: '100%' }), "width", 512), "padding", theme.spacing(1, 1.5)), "display", 'flex'), "alignItems", 'center'), error: {}, errorIcon: {}, success: {}, successIcon: {} }; });
var getToastIcon = function getToastIcon(type) { switch (type) {
    case 'error': return default_1$a;
    default: return default_1$c;
} };
var Toast = function Toast(_ref6) { var children = _ref6.children, _ref6$type = _ref6.type, type = _ref6$type === void 0 ? 'success' : _ref6$type, onClose = _ref6.onClose, classes = _ref6.classes, Typography = _ref6.TypographyComponent; var Icon = getToastIcon(type); return /*#__PURE__*/ wn.createElement(MUIAlert, { action: /*#__PURE__*/ wn.createElement(IconButton$1, { className: classes.closeButton, disableRipple: true, onClick: onClose }, /*#__PURE__*/ wn.createElement(default_1$b, { className: C(classes.closeIcon, _defineProperty2(_defineProperty2({}, classes.errorIcon, type === 'error'), classes.successIcon, type === 'success')) })), className: C(classes.toast, _defineProperty2(_defineProperty2({}, classes.error, type === 'error'), classes.success, type === 'success')), elevation: 6, icon: /*#__PURE__*/ wn.createElement(Icon, { className: C(_defineProperty2(_defineProperty2({}, classes.errorIcon, type === 'error'), classes.successIcon, type === 'success')), fontSize: "small" }), variant: "filled" }, /*#__PURE__*/ wn.createElement(Typography, { variant: "body2" }, children)); };
var DEFAULT_STATE$1 = { openToast: noop, closeToast: noop };
var ToastContext = /*#__PURE__*/ F$4(DEFAULT_STATE$1);
var useToast = function useToast() { return q$5(ToastContext); };
var ToastContextProviderCore = function ToastContextProviderCore(_ref7) { var children = _ref7.children, classes = _ref7.classes, TypographyComponent = _ref7.TypographyComponent; var _h = h$4(false), _h2 = _slicedToArray2(_h, 2), open = _h2[0], setOpen = _h2[1]; var _h3 = h$4(''), _h4 = _slicedToArray2(_h3, 2), toastText = _h4[0], setToastText = _h4[1]; var _h5 = h$4('success'), _h6 = _slicedToArray2(_h5, 2), toastType = _h6[0], setToastType = _h6[1]; var timeoutRef = _$1(null); var closeToast = function closeToast() { return setOpen(false); }; var triggerOpen = T$2(function (openDurationMS) { setOpen(true); if (timeoutRef.current) {
    clearTimeout(timeoutRef.current);
} timeoutRef.current = setTimeout(function () { setOpen(false); }, openDurationMS); }, []); var openToast = T$2(function (_ref8) { var type = _ref8.type, text = _ref8.text, _ref8$openDurationMS = _ref8.openDurationMS, openDurationMS = _ref8$openDurationMS === void 0 ? 5000 : _ref8$openDurationMS; setToastType(type); setToastText(text); triggerOpen(openDurationMS); }, [triggerOpen]); return /*#__PURE__*/ wn.createElement(ToastContext.Provider, { value: { openToast: openToast, closeToast: closeToast } }, /*#__PURE__*/ wn.createElement(Snackbar$1, { anchorOrigin: { horizontal: 'center', vertical: 'bottom' }, className: classes.snackbar, open: open }, /*#__PURE__*/ wn.createElement(Toast, { TypographyComponent: TypographyComponent, classes: classes, onClose: closeToast, type: toastType }, toastText)), children); };
var makeTypographyStyles = makeStylesFactory(function (theme) { return { typography: { '& ul': { margin: theme.spacing(1, 0, 0) } }, disabled: {} }; });
var colorToMUIColor = { primary: 'primary', secondary: 'textSecondary', error: 'error' };
var TypographyCore = function TypographyCore(_ref9) { var align = _ref9.align, children = _ref9.children, color = _ref9.color, component = _ref9.component, disabled = _ref9.disabled, _ref9$variant = _ref9.variant, variant = _ref9$variant === void 0 ? 'body1' : _ref9$variant, classes = _ref9.classes; return /*#__PURE__*/ wn.createElement(MUITypography, { align: align, className: C(classes.typography, _defineProperty2({}, classes.disabled, disabled)), color: color ? colorToMUIColor[color] : undefined, component: component, variant: variant }, children); };
var useStyles$k = makeTypographyStyles();
var Typography = function Typography(props) { var classes = useStyles$k(); return /*#__PURE__*/ wn.createElement(TypographyCore, Object.assign({}, props, { classes: classes })); };
var useStyles$j = makeToastStyles(function (theme) { return { toast: { backgroundColor: theme.styleConfig.container.backgroundColor, boxShadow: '0px 5px 10px 0px rgba(0, 0, 0, 0.20)', border: '1px solid', borderColor: theme.styleConfig.container.borderColor, borderRadius: theme.styleConfig.borderRadius }, error: { '& p': { color: theme.styleConfig.colors.error }, backgroundColor: theme.styleConfig.container.backgroundColor, color: theme.styleConfig.colors.error }, errorIcon: { color: theme.styleConfig.colors.error }, success: { '& p': { color: theme.styleConfig.colors.success }, backgroundColor: theme.styleConfig.container.backgroundColor, color: theme.styleConfig.colors.success }, successIcon: { color: theme.styleConfig.colors.success } }; });
var ToastContextProvider = function ToastContextProvider(props) { var classes = useStyles$j(); return /*#__PURE__*/ wn.createElement(ToastContextProviderCore, Object.assign({ TypographyComponent: Typography, classes: classes }, props)); };
var DEFAULT_ADMIN_PORTAL_STYLE_CONFIG = { container: { backgroundColor: '#FFFFFF', borderColor: '#FFFFFF', width: '100%' }, colors: { primary: '#000000', secondary: '#5C727D', success: '#005D26', error: '#BB0003', accent: '#ECFAFF', accentText: '#000000', subtle: '#EFEFEF' }, buttons: { primary: { backgroundColor: '#000000', textColor: '#FFFFFF', borderColor: '#000000' }, secondary: { backgroundColor: '#FFFFFF', textColor: '#000000', borderColor: '#000000' }, disabled: { backgroundColor: '#EFEFEF', textColor: '#B4B4B4', borderColor: '#EFEFEF' } }, inputs: { backgroundColor: '#FFFFFF', borderColor: '#D9D9D9', placeholderColor: '#5C727D', textColor: '#000000' }, borderRadius: '4px', fontFamily: 'Arial, Helvetica, sans-serif' };
var getTheme = function getTheme(styles) { var _a, _b, _c, _d, _e, _f; var styleConfig = merge({}, DEFAULT_ADMIN_PORTAL_STYLE_CONFIG, styles); var resolvedConfig = Object.assign(Object.assign({}, styleConfig), { buttons: { primary: Object.assign(Object.assign({}, styleConfig.buttons.primary), { borderRadius: (_a = styleConfig.buttons.primary.borderRadius) !== null && _a !== void 0 ? _a : styleConfig.borderRadius }), secondary: Object.assign(Object.assign({}, styleConfig.buttons.secondary), { borderRadius: (_b = styleConfig.buttons.secondary.borderRadius) !== null && _b !== void 0 ? _b : styleConfig.borderRadius }), disabled: Object.assign(Object.assign({}, styleConfig.buttons.disabled), { borderRadius: (_d = (_c = styleConfig.buttons.disabled) === null || _c === void 0 ? void 0 : _c.borderRadius) !== null && _d !== void 0 ? _d : styleConfig.borderRadius }) }, container: Object.assign(Object.assign({}, styleConfig.container), { borderRadius: (_e = styleConfig.container.borderRadius) !== null && _e !== void 0 ? _e : styleConfig.borderRadius }), inputs: Object.assign(Object.assign({}, styleConfig.inputs), { borderRadius: (_f = styleConfig.inputs.borderRadius) !== null && _f !== void 0 ? _f : styleConfig.borderRadius }) }); var theme = createTheme({ typography: { allVariants: { color: resolvedConfig.colors.primary }, button: { textTransform: 'none' }, fontFamily: styleConfig.fontFamily, h1: { fontSize: 30, fontWeight: 600, lineHeight: '125%' }, h2: { fontSize: 24, fontWeight: 600, lineHeight: '125%' }, h3: { fontSize: 20, fontWeight: 600, lineHeight: '125%' }, h4: { fontSize: 18, fontWeight: 600, lineHeight: '125%' }, body1: { fontSize: 18, fontWeight: 400, lineHeight: '150%' }, body2: { fontSize: 14, fontWeight: 400, lineHeight: '150%' } }, overrides: { MuiIconButton: { root: { color: resolvedConfig.colors.primary } }, MuiPaper: { root: { backgroundColor: resolvedConfig.container.backgroundColor, border: '1px solid', borderColor: resolvedConfig.colors.subtle, borderRadius: resolvedConfig.container.borderRadius } }, MuiTypography: { colorTextSecondary: { color: resolvedConfig.colors.secondary }, colorError: { color: resolvedConfig.colors.error } } }, styleConfig: resolvedConfig }); return theme; };
var ContextProvider = function ContextProvider(_ref10) { var client = _ref10.client, theme = _ref10.theme, children = _ref10.children; return /*#__PURE__*/ wn.createElement(ThemeProvider, { theme: theme }, /*#__PURE__*/ wn.createElement(StytchClientContext.Provider, { value: client }, children)); };
var AdminPortalWrapper = function AdminPortalWrapper(_ref11) { var children = _ref11.children, options = _ref11.options; var theme = getTheme(options.styles); return /*#__PURE__*/ wn.createElement(ContextProvider, { client: options.client, theme: theme }, /*#__PURE__*/ wn.createElement(MainContainer, null, /*#__PURE__*/ wn.createElement(ToastContextProvider, null, children))); };
var ReportProblemOutlined = {};
var _interopRequireDefault$9 = interopRequireDefaultExports;
var _interopRequireWildcard$9 = interopRequireWildcardExports;
Object.defineProperty(ReportProblemOutlined, "__esModule", { value: true });
var default_1$9 = ReportProblemOutlined["default"] = void 0;
var React$9 = _interopRequireWildcard$9(require$$2);
var _createSvgIcon$9 = _interopRequireDefault$9(requireCreateSvgIcon());
var _default$9 = (0, _createSvgIcon$9["default"])(/*#__PURE__*/ React$9.createElement("path", { d: "M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z" }), 'ReportProblemOutlined');
default_1$9 = ReportProblemOutlined["default"] = _default$9;
var useStyles$i = makeStyles(function (theme) { return { alert: { color: theme.styleConfig.colors.primary, padding: theme.spacing(3), backgroundColor: theme.styleConfig.colors.accent, display: 'flex', gap: theme.spacing(1) } }; });
var Alert = function Alert(_ref12) { var children = _ref12.children; var classes = useStyles$i(); return /*#__PURE__*/ wn.createElement("div", { className: classes.alert }, /*#__PURE__*/ wn.createElement(default_1$9, null), /*#__PURE__*/ wn.createElement(Typography, null, children)); };
var PageLoadingIndicator = function PageLoadingIndicator() { return /*#__PURE__*/ wn.createElement("div", { style: { height: '100%', minHeight: 400, display: 'flex', alignItems: 'center', justifyContent: 'center' } }, /*#__PURE__*/ wn.createElement(CircularProgress$1, { color: "inherit" })); };
var useStytchClient = function useStytchClient() { var client = wn.useContext(StytchClientContext); if (!client) {
    throw new Error('A Stytch client could not be found');
} return client; };
var useB2BInternals = function useB2BInternals() { var client = useStytchClient(); return readB2BInternals(client); };
var useApiNetworkClient = function useApiNetworkClient() { var _useB2BInternals = useB2BInternals(), apiNetworkClient = _useB2BInternals.apiNetworkClient; return apiNetworkClient; };
var useAdminPortalConfig = function useAdminPortalConfig() { var networkClient = useApiNetworkClient(); return useSWR('/b2b/admin_portal_config', function () { return networkClient.fetchSDK({ url: '/b2b/admin_portal_config', method: 'GET', errorMessage: 'Failed to fetch admin portal config' }); }); };
var useRbac = function useRbac(resourceId, action) { var client = useStytchClient(); var memberId = Cn(client.self.onChange, function () { var _a; return (_a = client.self.getSync()) === null || _a === void 0 ? void 0 : _a.member_id; }); return useSWR(function () { return memberId && ['rbac', memberId, resourceId, action]; }, function () { return client.rbac.isAuthorized(resourceId, action); }, { keepPreviousData: true }); };
var Add = createSvgIcon$1(/*#__PURE__*/ y$3("path", { d: "M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z" }));
var ChevronLeft = createSvgIcon$1(/*#__PURE__*/ y$3("path", { d: "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z" }));
var DeleteOutlined = createSvgIcon$1(/*#__PURE__*/ y$3("path", { d: "M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z" }));
var EditOutlined = createSvgIcon$1(/*#__PURE__*/ y$3("path", { d: "M14.06 9.02l.92.92L5.92 19H5v-.92l9.06-9.06M17.66 3c-.25 0-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29zm-3.6 3.19L3 17.25V21h3.75L17.81 9.94l-3.75-3.75z" }));
var ExpandMore$1 = createSvgIcon$1(/*#__PURE__*/ y$3("path", { d: "M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" }));
var InfoOutlined = createSvgIcon$1(/*#__PURE__*/ y$3("path", { d: "M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z" }));
var MoreVert = createSvgIcon$1(/*#__PURE__*/ y$3("path", { d: "M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z" }));
var Tune = createSvgIcon$1(/*#__PURE__*/ y$3("path", { d: "M3 17v2h6v-2H3zM3 5v2h10V5H3zm10 16v-2h8v-2h-8v-2h-2v6h2zM7 9v2H3v2h4v2h2V9H7zm14 4v-2H11v2h10zm-6-4h2V7h4V5h-4V3h-2v6z" }));
var VisibilityOutlined = createSvgIcon$1(/*#__PURE__*/ y$3("path", { d: "M12 6c3.79 0 7.17 2.13 8.82 5.5C19.17 14.87 15.79 17 12 17s-7.17-2.13-8.82-5.5C4.83 8.13 8.21 6 12 6m0-2C7 4 2.73 7.11 1 11.5 2.73 15.89 7 19 12 19s9.27-3.11 11-7.5C21.27 7.11 17 4 12 4zm0 5c1.38 0 2.5 1.12 2.5 2.5S13.38 14 12 14s-2.5-1.12-2.5-2.5S10.62 9 12 9m0-2c-2.48 0-4.5 2.02-4.5 4.5S9.52 16 12 16s4.5-2.02 4.5-4.5S14.48 7 12 7z" }));
var makeButtonStyles = makeStylesFactory(function (theme) { return { button: _defineProperty2(_defineProperty2(_defineProperty2(_defineProperty2(_defineProperty2(_defineProperty2(_defineProperty2(_defineProperty2(_defineProperty2(_defineProperty2({}, theme.breakpoints.down('xs'), { whiteSpace: 'unset', minHeight: 'fit-content' }), '&.MuiButton-fullWidth', { width: '100%' }), '&, &:active, &:hover', { boxShadow: 'none' }), "borderRadius", 3), "boxShadow", 'none'), "fontSize", 18), "minHeight", 45), "padding", '0 22px'), "whiteSpace", 'nowrap'), "width", 'fit-content'), compact: { '& .MuiButton-startIcon': { marginRight: theme.spacing(0.5) }, '& .MuiButton-endIcon': { marginLeft: theme.spacing(0.5) }, fontSize: 16, minHeight: 30, padding: '0 10px', minWidth: 'fit-content' }, iconOnly: { '& .MuiButton-startIcon, & .MuiButton-endIcon': { margin: 0 } }, ghost: {}, primary: {}, secondary: {}, text: {}, warningGhost: {}, warningPrimary: {}, warningText: {} }; });
var variantToMUIVariant = { ghost: 'outlined', primary: 'contained', secondary: 'contained', text: 'text' };
var ButtonCore = function ButtonCore(_a) { var children = _a.children, className = _a.className, compact = _a.compact, component = _a.component, variant = _a.variant, warning = _a.warning, classes = _a.classes, props = __rest(_a, ["children", "className", "compact", "component", "variant", "warning", "classes"]); var variantStyles = { ghost: classes.ghost, primary: classes.primary, secondary: classes.secondary, text: classes.text }; var buttonWarningStyles = { ghost: classes.warningGhost, primary: classes.warningPrimary, secondary: classes.warningPrimary, text: classes.warningText }; var buttonVariant = variant !== null && variant !== void 0 ? variant : 'primary'; var buttonStyles = warning ? buttonWarningStyles[buttonVariant] : variantStyles[buttonVariant]; return /*#__PURE__*/ wn.createElement(MUIButton, Object.assign({}, props, { className: C(classes.button, buttonStyles, _defineProperty2({}, classes.compact, compact), _defineProperty2({}, classes.iconOnly, !children), className), component: component !== null && component !== void 0 ? component : 'button', disableRipple: true, variant: variantToMUIVariant[buttonVariant] }), children); };
var mixed = function mixed(color) { return "color-mix(in srgb, ".concat(color, " 80%, #333)"); };
var useStyles$h = makeButtonStyles(function (theme) { var disabledStyle = { backgroundColor: theme.styleConfig.buttons.disabled.backgroundColor, borderColor: theme.styleConfig.buttons.disabled.borderColor, borderRadius: theme.styleConfig.buttons.disabled.borderRadius, color: theme.styleConfig.buttons.disabled.textColor }; return { button: { borderRadius: theme.styleConfig.borderRadius, fontWeight: 700 }, ghost: { '&:disabled': disabledStyle, '&:hover': { backgroundColor: mixed(theme.styleConfig.buttons.secondary.backgroundColor) }, backgroundColor: theme.styleConfig.buttons.secondary.backgroundColor, color: theme.styleConfig.buttons.secondary.textColor }, primary: { '&:disabled': disabledStyle, '&:hover': { backgroundColor: mixed(theme.styleConfig.buttons.primary.backgroundColor) }, backgroundColor: theme.styleConfig.buttons.primary.backgroundColor, color: theme.styleConfig.buttons.primary.textColor, borderRadius: theme.styleConfig.buttons.primary.borderRadius }, secondary: { '&:disabled': disabledStyle, '&:hover': { backgroundColor: mixed(theme.styleConfig.buttons.secondary.backgroundColor) }, backgroundColor: theme.styleConfig.buttons.secondary.backgroundColor, color: theme.styleConfig.buttons.secondary.textColor, borderRadius: theme.styleConfig.buttons.secondary.borderRadius }, text: { '&:disabled': disabledStyle, '&:hover': { backgroundColor: 'rgba(0, 0, 0, 0.1)' }, backgroundColor: 'transparent', color: theme.styleConfig.colors.primary }, warningGhost: { '&:disabled': disabledStyle, '&:hover': { backgroundColor: mixed(theme.styleConfig.buttons.secondary.backgroundColor), borderColor: theme.styleConfig.colors.error, color: theme.styleConfig.colors.error }, backgroundColor: theme.styleConfig.buttons.secondary.backgroundColor, borderColor: theme.styleConfig.colors.error, color: theme.styleConfig.colors.error }, warningPrimary: { '&:disabled': disabledStyle, '&:hover': { backgroundColor: mixed(theme.styleConfig.colors.error), color: theme.styleConfig.buttons.primary.textColor }, backgroundColor: theme.styleConfig.colors.error, color: theme.styleConfig.buttons.primary.textColor }, warningText: { '&:disabled': disabledStyle, '&:hover': { backgroundColor: 'rgba(0, 0, 0, 0.1)', color: theme.styleConfig.colors.error }, backgroundColor: 'transparent', color: theme.styleConfig.colors.error } }; });
var Button = function Button(_a) { var props = __rest(_a, []); var classes = useStyles$h(); return /*#__PURE__*/ wn.createElement(ButtonCore, Object.assign({}, props, { classes: classes })); };
var getShortId = function getShortId(prefix) { return "".concat(prefix !== null && prefix !== void 0 ? prefix : '').concat(Math.random().toString(36).slice(-6)); };
var useShortId = function useShortId(prefix) { return F$3(function () { return getShortId(prefix); }, [prefix]); };
var DEFAULT_GAP = 1;
var DEFAULT_GRID_COLUMN_WIDTH = 360;
var DEFAULT_MAX_ITEM_WIDTH = 720 + DEFAULT_GAP;
var FlexBox = function FlexBox(_ref13) { var children = _ref13.children, gap = _ref13.gap, alignItems = _ref13.alignItems, flexDirection = _ref13.flexDirection, justifyContent = _ref13.justifyContent, flexWrap = _ref13.flexWrap; var theme = useTheme(); return /*#__PURE__*/ wn.createElement("div", { style: { display: 'flex', gap: theme.spacing(gap !== null && gap !== void 0 ? gap : DEFAULT_GAP), alignItems: alignItems, justifyContent: justifyContent, flexDirection: flexDirection, flexWrap: flexWrap } }, children); };
var useToggleState = function useToggleState(initialState) { var _h7 = h$4(false), _h8 = _slicedToArray2(_h7, 2), isOpen = _h8[0], setIsOpen = _h8[1]; var toggle = function toggle() { return setIsOpen(function (prev) { return !prev; }); }; var open = function open() { return setIsOpen(true); }; var close = function close() { return setIsOpen(false); }; return { close: close, isOpen: isOpen, open: open, toggle: toggle }; };
var promiseNoop = function promiseNoop() { return Promise.resolve(); };
var useModalState = function useModalState() { var confirmAction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : promiseNoop; var _useToggleState = useToggleState(), isOpen = _useToggleState.isOpen, open = _useToggleState.open, close = _useToggleState.close; var _useToast = useToast(), openToast = _useToast.openToast; var confirm = function confirm() { return __awaiter(void 0, void 0, void 0, /*#__PURE__*/ _regeneratorRuntime().mark(function _callee() { return _regeneratorRuntime().wrap(function _callee$(_context) { while (1)
    switch (_context.prev = _context.next) {
        case 0:
            _context.prev = 0;
            _context.next = 3;
            return confirmAction();
        case 3:
            _context.next = 8;
            break;
        case 5:
            _context.prev = 5;
            _context.t0 = _context["catch"](0);
            if (_context.t0 && _typeof2(_context.t0) === 'object' && 'message' in _context.t0 && typeof _context.t0.message === 'string') {
                openToast({ text: _context.t0.message, type: 'error' });
            }
        case 8:
        case "end": return _context.stop();
    } }, _callee, null, [[0, 5]]); })); }; return { isOpen: isOpen, open: open, close: close, confirm: confirm }; };
var useAsyncState = h$4;
var MODAL_WIDTH = 800;
var useStyles$g = makeStyles(function (theme) { return { closeButton: { position: 'absolute', right: theme.spacing(1), top: theme.spacing(1) }, contentText: { whiteSpace: 'pre-line' }, dialog: { '& .MuiDialogTitle-root': { padding: theme.spacing(4, 4, 0, 4) }, '& .MuiDialogContent-root': { padding: theme.spacing(2, 4) }, '& .MuiDialogActions-root': { justifyContent: 'flex-start', padding: theme.spacing(2, 4, 4, 4) }, '& .MuiDialogActions-spacing > :not(:first-child)': { marginLeft: theme.spacing(2) }, '& .MuiDialog-paper': _defineProperty2(_defineProperty2(_defineProperty2(_defineProperty2(_defineProperty2(_defineProperty2({}, theme.breakpoints.down('xs'), { width: '100%', margin: 0, borderRadius: 0 }), "backgroundColor", theme.styleConfig.container.backgroundColor), "borderRadius", theme.styleConfig.container.borderRadius), "width", MODAL_WIDTH), "maxWidth", MODAL_WIDTH), "margin", theme.spacing(6)) }, content: { display: 'flex', flexDirection: 'column', gap: theme.spacing(1.5) } }; });
var Modal = function Modal(_ref14) { var cancelButtonText = _ref14.cancelButtonText, children = _ref14.children, description = _ref14.description, confirmButtonText = _ref14.confirmButtonText, disableConfirm = _ref14.disableConfirm, warning = _ref14.warning, close = _ref14.close, confirm = _ref14.confirm, title = _ref14.title, showLoadingOnConfirm = _ref14.showLoadingOnConfirm, noCancelButton = _ref14.noCancelButton, isOpen = _ref14.isOpen, keepOpenOnConfirm = _ref14.keepOpenOnConfirm; var classes = useStyles$g(); var _useAsyncState = useAsyncState(false), _useAsyncState2 = _slicedToArray2(_useAsyncState, 2), confirming = _useAsyncState2[0], setConfirming = _useAsyncState2[1]; var isXsScreen = useMediaQuery(function (theme) { return theme.breakpoints.down('xs'); }); var descriptionId = useShortId('confirmation-modal-description'); var titleId = useShortId('confirmation-modal-title'); var handleConfirm = function handleConfirm(e) { return __awaiter(void 0, void 0, void 0, /*#__PURE__*/ _regeneratorRuntime().mark(function _callee2() { return _regeneratorRuntime().wrap(function _callee2$(_context2) { while (1)
    switch (_context2.prev = _context2.next) {
        case 0:
            e.preventDefault();
            setConfirming(true);
            _context2.prev = 2;
            _context2.next = 5;
            return confirm();
        case 5: return _context2.abrupt("return", _context2.sent);
        case 6:
            _context2.prev = 6;
            setConfirming(false);
            if (!keepOpenOnConfirm) {
                close();
            }
            return _context2.finish(6);
        case 10:
        case "end": return _context2.stop();
    } }, _callee2, null, [[2, , 6, 10]]); })); }; var onClose = function onClose() { close(); }; var confirmDisabled = confirming || disableConfirm; return /*#__PURE__*/ wn.createElement(Dialog$1, { "aria-describedby": descriptionId, "aria-labelledby": titleId, className: classes.dialog, fullScreen: isXsScreen, onClose: onClose, open: isOpen }, isXsScreen && ( /*#__PURE__*/wn.createElement(IconButton$1, { className: classes.closeButton, disableRipple: true, onClick: onClose }, /*#__PURE__*/ wn.createElement(default_1$b, { fontSize: "small" }))), /*#__PURE__*/ wn.createElement(DialogTitle$1, { id: titleId }, /*#__PURE__*/ wn.createElement(Typography, { variant: "h2" }, title)), /*#__PURE__*/ wn.createElement("form", { onSubmit: handleConfirm }, /*#__PURE__*/ wn.createElement(DialogContent$1, { className: classes.content }, description && /*#__PURE__*/ wn.createElement(Typography, null, description), children && /*#__PURE__*/ wn.createElement(FlexBox, { flexDirection: "column" }, children)), /*#__PURE__*/ wn.createElement(DialogActions$1, null, !noCancelButton && ( /*#__PURE__*/wn.createElement(Button, { autoFocus: warning, disabled: confirming, onClick: onClose, variant: "ghost" }, cancelButtonText !== null && cancelButtonText !== void 0 ? cancelButtonText : "Cancel")), /*#__PURE__*/ wn.createElement(Button, { autoFocus: !warning, disabled: confirmDisabled, type: "submit", variant: "primary", warning: warning }, confirming && showLoadingOnConfirm ? /*#__PURE__*/ wn.createElement(CircularProgress$1, { size: 18 }) : confirmButtonText !== null && confirmButtonText !== void 0 ? confirmButtonText : 'Ok')))); };
var useMutateWithToast = function useMutateWithToast(callback) { var _useToast2 = useToast(), openToast = _useToast2.openToast; var mutate = T$2(function (properties) { var _ref15 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, errorMessage = _ref15.errorMessage; return __awaiter(void 0, void 0, void 0, /*#__PURE__*/ _regeneratorRuntime().mark(function _callee3() { return _regeneratorRuntime().wrap(function _callee3$(_context3) { while (1)
    switch (_context3.prev = _context3.next) {
        case 0:
            _context3.prev = 0;
            _context3.next = 3;
            return callback(properties);
        case 3: return _context3.abrupt("return", _context3.sent);
        case 6:
            _context3.prev = 6;
            _context3.t0 = _context3["catch"](0);
            if (errorMessage) {
                openToast({ type: 'error', text: typeof errorMessage === 'function' ? errorMessage(_context3.t0) : errorMessage });
            }
            throw _context3.t0;
        case 10:
        case "end": return _context3.stop();
    } }, _callee3, null, [[0, 6]]); })); }, [callback, openToast]); return { mutate: mutate }; };
var ssoGetConnectionsKey = function ssoGetConnectionsKey(orgId) { return ['sso.getConnections', orgId]; };
var useSsoConnections = function useSsoConnections() { var _a; var client = useStytchClient(); var orgId = (_a = client.organization.getSync()) === null || _a === void 0 ? void 0 : _a.organization_id; return useSWR(ssoGetConnectionsKey(orgId), function () { return client.sso.getConnections(); }); };
var useRevalidateConnectionList = function useRevalidateConnectionList() { var _useSWRConfig = useSWRConfig(), mutate = _useSWRConfig.mutate; var client = useStytchClient(); return T$2(function () { var _a; var orgId = (_a = client.organization.getSync()) === null || _a === void 0 ? void 0 : _a.organization_id; if (orgId) {
    return mutate(ssoGetConnectionsKey(orgId));
} }, [client.organization, mutate]); };
var mutateSamlConnection = function mutateSamlConnection(client) { return function (options) { return client.sso.saml.updateConnection(options); }; };
var mutateOidcConnection = function mutateOidcConnection(client) { return function (options) { return client.sso.oidc.updateConnection(options); }; };
var updateConnectionByURL = function updateConnectionByURL(client) { return function (options) { return client.sso.saml.updateConnectionByURL(options); }; };
var deleteConnection = function deleteConnection(client) { return function (_ref16) { var connection_id = _ref16.connection_id; return client.sso.deleteConnection(connection_id); }; };
var deleteVerificationCertificate = function deleteVerificationCertificate(client) { return function (options) { return client.sso.saml.deleteVerificationCertificate(options); }; };
var useMutateFnSsoConnection = function useMutateFnSsoConnection(mutateFn) { var _useSWRConfig2 = useSWRConfig(), mutateSWR = _useSWRConfig2.mutate; var client = useStytchClient(); var revalidateConnectionList = useRevalidateConnectionList(); return useMutateWithToast(T$2(function (options) { return __awaiter(void 0, void 0, void 0, /*#__PURE__*/ _regeneratorRuntime().mark(function _callee4() { return _regeneratorRuntime().wrap(function _callee4$(_context4) { while (1)
    switch (_context4.prev = _context4.next) {
        case 0:
            _context4.next = 2;
            return mutateSWR(['sso.connection', options.connection_id], function () { return mutateFn(client)(options); });
        case 2: return _context4.abrupt("return", revalidateConnectionList());
        case 3:
        case "end": return _context4.stop();
    } }, _callee4); })); }, [client, mutateFn, mutateSWR, revalidateConnectionList])); };
var useMutateSsoConnectionByUrl = function useMutateSsoConnectionByUrl() { return useMutateFnSsoConnection(updateConnectionByURL); };
var useDeleteSsoConnection = function useDeleteSsoConnection() { return useMutateFnSsoConnection(deleteConnection); };
var useDeleteSsoConnectionCert = function useDeleteSsoConnectionCert() { return useMutateFnSsoConnection(deleteVerificationCertificate); };
var useMutateSsoConnection = function useMutateSsoConnection(connectionType) { return useMutateFnSsoConnection(connectionType === 'saml' ? mutateSamlConnection : mutateOidcConnection); };
var useMutateSamlConnection = function useMutateSamlConnection() { return useMutateSsoConnection('saml'); };
var DeleteConfirmModal = function DeleteConfirmModal(_a) { var connectionName = _a.connectionName, modalProps = __rest(_a, ["connectionName"]); return /*#__PURE__*/ wn.createElement(Modal, Object.assign({}, modalProps, { title: "Delete ".concat(connectionName || 'connection', "?"), confirmButtonText: "Delete", warning: true }), /*#__PURE__*/ wn.createElement(Typography, null, "Once deleted, the connection cannot be restored. Any members assigned implicit roles via this connection, as well as members allowed to JIT provision via this SSO connection, will lose access immediately.")); };
var useMutateDeleteConnection = function useMutateDeleteConnection() { var _useDeleteSsoConnecti = useDeleteSsoConnection(), mutate = _useDeleteSsoConnecti.mutate; var deleteConnection = function deleteConnection(_ref17) { var connectionId = _ref17.connectionId; return mutate({ connection_id: connectionId }); }; return { deleteConnection: deleteConnection }; };
var useDeleteConnection = function useDeleteConnection() { var _ref18 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}, onConfirm = _ref18.onConfirm; var _h9 = h$4(), _h10 = _slicedToArray2(_h9, 2), connection = _h10[0], setConnection = _h10[1]; var _useMutateDeleteConne = useMutateDeleteConnection(), deleteConnection = _useMutateDeleteConne.deleteConnection; var handleConfirm = function handleConfirm() { return __awaiter(void 0, void 0, void 0, /*#__PURE__*/ _regeneratorRuntime().mark(function _callee5() { return _regeneratorRuntime().wrap(function _callee5$(_context5) { while (1)
    switch (_context5.prev = _context5.next) {
        case 0:
            if (!connection) {
                _context5.next = 10;
                break;
            }
            _context5.prev = 1;
            _context5.next = 4;
            return deleteConnection({ connectionId: connection.id });
        case 4:
            _context5.next = 9;
            break;
        case 6:
            _context5.prev = 6;
            _context5.t0 = _context5["catch"](1);
            throw new Error("Failed to delete ".concat(connection.displayName));
        case 9: onConfirm === null || onConfirm === void 0 ? void 0 : onConfirm();
        case 10:
        case "end": return _context5.stop();
    } }, _callee5, null, [[1, 6]]); })); }; var _useModalState = useModalState(handleConfirm), close = _useModalState.close, confirm = _useModalState.confirm, isOpen = _useModalState.isOpen, open = _useModalState.open; var handleRequestDelete = T$2(function (connection) { setConnection(connection); open(); }, [open]); return { handleRequestDelete: handleRequestDelete, modalProps: { connectionName: connection === null || connection === void 0 ? void 0 : connection.displayName, isOpen: isOpen, close: close, confirm: confirm } }; };
var makeTagStyles = makeStylesFactory(function (theme) { return { tag: { fontFamily: 'IBM Plex Mono, monospace', fontSize: 18, fontWeight: 400, lineHeight: '150%', padding: theme.spacing(0, 1), borderRadius: 4, width: 'fit-content' } }; });
var TagCore = function TagCore(_ref19) { var children = _ref19.children, classes = _ref19.classes; return /*#__PURE__*/ wn.createElement("span", { className: classes.tag }, children); };
var useStyles$f = makeTagStyles(function (theme) { return { tag: { fontFamily: theme.styleConfig.fontFamily, fontSize: function fontSize(_ref20) { var size = _ref20.size; return size === 'sm' ? 14 : 18; }, backgroundColor: theme.styleConfig.colors.accent, color: theme.styleConfig.colors.accentText } }; });
var Tag = function Tag(props) { var classes = useStyles$f(props); return /*#__PURE__*/ wn.createElement(TagCore, Object.assign({}, props, { classes: classes })); };
var organizationGetKey = function organizationGetKey(orgId) { return ['organization.get', orgId]; };
var useOrgInfo = function useOrgInfo() { var _a; var client = useStytchClient(); var orgId = (_a = client.organization.getSync()) === null || _a === void 0 ? void 0 : _a.organization_id; return useSWR(organizationGetKey(orgId), function () { return client.organization.get(); }); };
var deepEqual = createDeepEqual();
var CODE_HORIZONTAL_PADDING = 1;
var commonCodeStyles$1 = { code: { borderRadius: 4, width: 'fit-content' } };
var makeCodeStyles = makeStylesFactory(commonCodeStyles$1, function (theme) { return { code: { fontFamily: 'IBM Plex Mono, monospace', fontSize: 16, fontWeight: 400, lineHeight: '150%', padding: theme.spacing(0.5, CODE_HORIZONTAL_PADDING), wordBreak: 'break-word' } }; });
var CodeCore = function CodeCore(_ref21) { var children = _ref21.children, classes = _ref21.classes; return /*#__PURE__*/ wn.createElement("span", { className: C(classes.code) }, children); };
var commonCodeStyles = function commonCodeStyles(theme) { return { code: { color: theme.styleConfig.colors.accentText, backgroundColor: theme.styleConfig.colors.accent } }; };
var useStyles$e = makeCodeStyles(commonCodeStyles);
var Code = function Code(props) { var classes = useStyles$e(); return /*#__PURE__*/ wn.createElement(CodeCore, Object.assign({}, props, { classes: classes })); };
var useStyles$d = makeStyles(function () { return { labelContainer: { display: 'flex', alignItems: 'center' } }; });
var LabelCore = function LabelCore(_ref22) { var children = _ref22.children, disabled = _ref22.disabled, htmlFor = _ref22.htmlFor, required = _ref22.required, _ref22$variant = _ref22.variant, variant = _ref22$variant === void 0 ? 'body2' : _ref22$variant, Typography = _ref22.TypographyComponent; var classes = useStyles$d(); return /*#__PURE__*/ wn.createElement("span", { className: classes.labelContainer }, /*#__PURE__*/ wn.createElement("label", { "aria-required": required, htmlFor: htmlFor }, /*#__PURE__*/ wn.createElement(Typography, { disabled: disabled, variant: variant }, children)), required && ( /*#__PURE__*/wn.createElement(Typography, { color: "error", disabled: disabled, variant: "body2" }, "*"))); };
var Label = function Label(props) { return /*#__PURE__*/ wn.createElement(LabelCore, Object.assign({}, props, { TypographyComponent: Typography })); };
var makeCopyableTextStyles = makeStylesFactory(commonCodeStyles$1, function (theme) { return { copyableText: { '&:hover': { marginRight: 0 }, '& svg': { marginRight: theme.spacing(CODE_HORIZONTAL_PADDING) }, borderRadius: 4, display: 'flex', alignItems: 'center', height: 'fit-content', width: 'fit-content', marginRight: theme.spacing(3.5) }, copyIcon: { '& svg': { marginRight: theme.spacing(CODE_HORIZONTAL_PADDING) } }, hasCopiedIcon: { marginRight: 0 }, noWrap: { '& span': { wordBreak: 'unset', whiteSpace: 'nowrap' } } }; });
var CopyableTextCore = function CopyableTextCore(_ref23) { var children = _ref23.children, textToCopy = _ref23.textToCopy, noWrap = _ref23.noWrap, id = _ref23.id, label = _ref23.label, classes = _ref23.classes, Code = _ref23.CodeComponent, Label = _ref23.LabelComponent, Typography = _ref23.TypographyComponent, useClickToCopy = _ref23.useClickToCopy; var _a; var inputId = useShortId(id); if (children && typeof children !== 'string') {
    throw new Error('CopyableText children must be a string');
} var _useClickToCopy = useClickToCopy({ text: (_a = textToCopy !== null && textToCopy !== void 0 ? textToCopy : children) !== null && _a !== void 0 ? _a : '' }), copied = _useClickToCopy.copied, copyToClipboard = _useClickToCopy.copyToClipboard, CopyIcon = _useClickToCopy.CopyIcon, containerHoverClass = _useClickToCopy.containerHoverClass; return /*#__PURE__*/ wn.createElement("div", { className: C(_defineProperty2({}, classes.noWrap, noWrap)) }, label && /*#__PURE__*/ wn.createElement(Label, { htmlFor: inputId }, label), !children && /*#__PURE__*/ wn.createElement(Typography, null, "\u2013"), children && ( /*#__PURE__*/wn.createElement("span", { className: C(containerHoverClass, classes.copyableText, classes.code, _defineProperty2({}, classes.hasCopiedIcon, copied)), onClick: copyToClipboard }, /*#__PURE__*/ wn.createElement(Code, null, children), /*#__PURE__*/ wn.createElement("div", { className: classes.copyIcon }, CopyIcon)))); };
var CheckCircleOutlined = {};
var _interopRequireDefault$8 = interopRequireDefaultExports;
var _interopRequireWildcard$8 = interopRequireWildcardExports;
Object.defineProperty(CheckCircleOutlined, "__esModule", { value: true });
var default_1$8 = CheckCircleOutlined["default"] = void 0;
var React$8 = _interopRequireWildcard$8(require$$2);
var _createSvgIcon$8 = _interopRequireDefault$8(requireCreateSvgIcon());
var _default$8 = (0, _createSvgIcon$8["default"])(/*#__PURE__*/ React$8.createElement("path", { d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm4.59-12.42L10 14.17l-2.59-2.58L6 13l4 4 8-8z" }), 'CheckCircleOutlined');
default_1$8 = CheckCircleOutlined["default"] = _default$8;
var FileCopyOutlined = {};
var _interopRequireDefault$7 = interopRequireDefaultExports;
var _interopRequireWildcard$7 = interopRequireWildcardExports;
Object.defineProperty(FileCopyOutlined, "__esModule", { value: true });
var default_1$7 = FileCopyOutlined["default"] = void 0;
var React$7 = _interopRequireWildcard$7(require$$2);
var _createSvgIcon$7 = _interopRequireDefault$7(requireCreateSvgIcon());
var _default$7 = (0, _createSvgIcon$7["default"])(/*#__PURE__*/ React$7.createElement("path", { d: "M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4H8c-1.1 0-1.99.9-1.99 2L6 21c0 1.1.89 2 1.99 2H19c1.1 0 2-.9 2-2V11l-6-6zM8 21V7h6v5h5v9H8z" }), 'FileCopyOutlined');
default_1$7 = FileCopyOutlined["default"] = _default$7;
var makeClickToCopyStyles = makeStylesFactory({ checkCircle: { display: 'block !important' }, darkBackground: {}, containerHover: { '&:hover': { '& svg': { display: 'block' }, cursor: 'pointer' }, '& svg': { display: 'none' } } });
var useClickToCopyCore = function useClickToCopyCore(_ref24) { var classes = _ref24.classes, darkBackground = _ref24.darkBackground, _ref24$iconSize = _ref24.iconSize, iconSize = _ref24$iconSize === void 0 ? 'small' : _ref24$iconSize, text = _ref24.text; var _h11 = h$4(false), _h12 = _slicedToArray2(_h11, 2), copied = _h12[0], setCopied = _h12[1]; var copyToClipboard = function copyToClipboard(e) { e.stopPropagation(); setCopied(true); navigator.clipboard.writeText(text); setTimeout(function () { return setCopied(false); }, 1000); }; var CopyIcon = copied ? ( /*#__PURE__*/wn.createElement(default_1$8, { className: C(classes.checkCircle, _defineProperty2({}, classes.darkBackground, darkBackground)), fontSize: iconSize })) : ( /*#__PURE__*/wn.createElement(default_1$7, { fontSize: iconSize })); return { copied: copied, copyToClipboard: copyToClipboard, CopyIcon: CopyIcon, containerHoverClass: classes.containerHover }; };
var useStyles$c = makeClickToCopyStyles();
var useClickToCopy = function useClickToCopy(params) { var classes = useStyles$c(); return useClickToCopyCore(Object.assign(Object.assign({}, params), { classes: classes })); };
var useStyles$b = makeCopyableTextStyles(commonCodeStyles, { copyableText: { whiteSpace: function whiteSpace(_ref25) { var _whiteSpace = _ref25.whiteSpace; return _whiteSpace; } } });
var CopyableText = function CopyableText(props) { var classes = useStyles$b(props); return /*#__PURE__*/ wn.createElement(CopyableTextCore, Object.assign({}, props, { CodeComponent: Code, LabelComponent: Label, TypographyComponent: Typography, classes: classes, useClickToCopy: useClickToCopy })); };
var makeInputStyles = makeStylesFactory(function (theme) { return { inputContainer: _defineProperty2(_defineProperty2(_defineProperty2({}, theme.breakpoints.down('sm'), { width: '100%', minWidth: 'unset', flex: 1 }), "width", DEFAULT_GRID_COLUMN_WIDTH), "minWidth", DEFAULT_GRID_COLUMN_WIDTH), multilineContainer: { width: '100%', maxWidth: DEFAULT_MAX_ITEM_WIDTH }, readOnlyContainer: { display: '-webkit-box', '-webkit-line-clamp': 2, '-webkit-box-orient': 'vertical', overflow: 'hidden', overflowWrap: 'break-word' }, input: { '& .MuiOutlinedInput-notchedOutline': { border: '1px solid', borderRadius: 4 }, '&.MuiOutlinedInput-multiline': { padding: 0 }, '& [class*="MuiOutlinedInput-input"]': { '&::placeholder': { opacity: 1 }, padding: theme.spacing(1) }, '&:hover .MuiOutlinedInput-notchedOutline, &.Mui-focused .MuiOutlinedInput-notchedOutline': { borderWidth: 1 } }, fullWidth: { width: '100%' }, fileUploadContainer: { alignItems: 'center', display: 'flex', marginBottom: theme.spacing(0.5), gap: theme.spacing(0.5) }, fileUploadHidden: { display: 'none' } }; });
var FILE_UPLOAD_ID = 'file-upload';
var FileUpload = function FileUpload(_ref26) { var onChange = _ref26.onChange, readOnly = _ref26.readOnly, filename = _ref26.filename, setFilename = _ref26.setFilename, classes = _ref26.classes, Button = _ref26.ButtonComponent, Typography = _ref26.TypographyComponent; var _h13 = h$4(new FileReader()), _h14 = _slicedToArray2(_h13, 1), fileReader = _h14[0]; var fileInputKey = Math.floor(Math.random() * 10000); p$3(function () { var onLoad = function onLoad() { if (typeof fileReader.result === 'string') {
    onChange === null || onChange === void 0 ? void 0 : onChange(fileReader.result);
} }; fileReader.addEventListener('load', onLoad); return function () { return fileReader.removeEventListener('load', onLoad); }; }, [fileReader, onChange]); p$3(function () { setFilename(null); }, [readOnly, setFilename]); var onFileUpload = function onFileUpload(event) { var file = event.target.files ? event.target.files[0] : null; var filename = (file === null || file === void 0 ? void 0 : file.name) ? file.name.replace('C:\\fakepath\\', '') : null; setFilename(filename); if (file) {
    fileReader.readAsText(file);
} }; var resetFileUpload = function resetFileUpload() { var inputElement = document.querySelector('input[type=file]'); if (inputElement) {
    inputElement.value = '';
} }; var uploadedFilename = filename !== null && filename !== void 0 ? filename : 'No file chosen'; var fileInputId = "".concat(FILE_UPLOAD_ID, "-").concat(fileInputKey); return /*#__PURE__*/ wn.createElement("label", { className: classes.fileUploadContainer, htmlFor: fileInputId }, /*#__PURE__*/ wn.createElement("input", { className: classes.fileUploadHidden, id: fileInputId, onChange: onFileUpload, onClick: resetFileUpload, type: "file" }), /*#__PURE__*/ wn.createElement(Button, { compact: true, component: "span", variant: "secondary" }, "Choose file"), /*#__PURE__*/ wn.createElement(Typography, null, uploadedFilename)); };
var InputCore = function InputCore(_ref27) { var caption = _ref27.caption, copyable = _ref27.copyable, disabled = _ref27.disabled, error = _ref27.error, fileUpload = _ref27.fileUpload, fullWidth = _ref27.fullWidth, id = _ref27.id, inputProps = _ref27.inputProps, inputRef = _ref27.inputRef, label = _ref27.label, multiline = _ref27.multiline, onBlur = _ref27.onBlur, onChange = _ref27.onChange, onFocus = _ref27.onFocus, onKeyDown = _ref27.onKeyDown, placeholder = _ref27.placeholder, readOnly = _ref27.readOnly, readOnlyConcealed = _ref27.readOnlyConcealed, required = _ref27.required, type = _ref27.type, value = _ref27.value, classes = _ref27.classes, ButtonComponent = _ref27.ButtonComponent, CopyableText = _ref27.CopyableTextComponent, Label = _ref27.LabelComponent, Typography = _ref27.TypographyComponent; var inputId = useShortId(id); var _h15 = h$4(null), _h16 = _slicedToArray2(_h15, 2), filename = _h16[0], setFilename = _h16[1]; var handleOnChange = function handleOnChange(e) { onChange === null || onChange === void 0 ? void 0 : onChange(e.target.value); if (fileUpload && filename) {
    setFilename(null);
} }; var showCaption = !!caption && !error; var concealedValue = (value === null || value === void 0 ? void 0 : value.length) ? '•'.repeat(Math.min(25, value.length)) : ''; var visibleValue = readOnlyConcealed ? concealedValue : value; var shouldDisable = disabled && !readOnly; var showCopyableText = readOnly && copyable && !!visibleValue; var showPlainText = readOnly && (!copyable || !visibleValue); return /*#__PURE__*/ wn.createElement("div", { className: C(classes.inputContainer, _defineProperty2(_defineProperty2(_defineProperty2({}, classes.multilineContainer, multiline), classes.readOnlyContainer, readOnly), classes.fullWidth, fullWidth)) }, label && ( /*#__PURE__*/wn.createElement(Label, { disabled: shouldDisable, htmlFor: inputId, required: required }, label)), showPlainText && /*#__PURE__*/ wn.createElement(Typography, null, visibleValue || '–'), showCopyableText && /*#__PURE__*/ wn.createElement(CopyableText, { textToCopy: value }, visibleValue), !readOnly && ( /*#__PURE__*/wn.createElement(wn.Fragment, null, fileUpload && ( /*#__PURE__*/wn.createElement(FileUpload, { ButtonComponent: ButtonComponent, TypographyComponent: Typography, classes: classes, filename: filename, onChange: onChange, readOnly: shouldDisable, setFilename: setFilename })), /*#__PURE__*/ wn.createElement(OutlinedInput$1, { className: classes.input, disabled: shouldDisable, error: !!error, fullWidth: true, id: inputId, inputProps: inputProps, inputRef: inputRef, multiline: multiline, onBlur: onBlur, onChange: handleOnChange, onFocus: onFocus, onKeyDown: onKeyDown, placeholder: placeholder, required: required, rows: 3, type: type, value: value }), showCaption && ( /*#__PURE__*/wn.createElement(Typography, { disabled: shouldDisable, variant: "body2" }, caption)), error && ( /*#__PURE__*/wn.createElement(Typography, { color: "error", variant: "body2" }, error))))); };
var useStyles$a = makeInputStyles(function (theme) { return { input: { color: theme.styleConfig.inputs.textColor, '& .MuiOutlinedInput-notchedOutline': { borderColor: theme.styleConfig.inputs.borderColor }, '& [class*="MuiOutlinedInput-input"]': { '&::placeholder': { color: theme.styleConfig.inputs.placeholderColor } }, '&.Mui-disabled .MuiOutlinedInput-notchedOutline': { borderColor: theme.styleConfig.inputs.borderColor }, '&:hover .MuiOutlinedInput-notchedOutline, &.Mui-focused .MuiOutlinedInput-notchedOutline': { borderColor: theme.styleConfig.inputs.borderColor }, '&.Mui-error': { color: theme.styleConfig.colors.error } } }; });
var LabelBody1 = function LabelBody1(props) { return /*#__PURE__*/ wn.createElement(Label, Object.assign({ variant: "body1" }, props)); };
var Input = function Input(_a) { var labelVariant = _a.labelVariant, props = __rest(_a, ["labelVariant"]); var classes = useStyles$a(props); return /*#__PURE__*/ wn.createElement(InputCore, Object.assign({}, props, { classes: classes, ButtonComponent: Button, CopyableTextComponent: CopyableText, LabelComponent: labelVariant === 'body1' ? LabelBody1 : Label, TypographyComponent: Typography })); };
var AddRounded = {};
var _interopRequireDefault$6 = interopRequireDefaultExports;
var _interopRequireWildcard$6 = interopRequireWildcardExports;
Object.defineProperty(AddRounded, "__esModule", { value: true });
var default_1$6 = AddRounded["default"] = void 0;
var React$6 = _interopRequireWildcard$6(require$$2);
var _createSvgIcon$6 = _interopRequireDefault$6(requireCreateSvgIcon());
var _default$6 = (0, _createSvgIcon$6["default"])(/*#__PURE__*/ React$6.createElement("path", { d: "M18 13h-5v5c0 .55-.45 1-1 1s-1-.45-1-1v-5H6c-.55 0-1-.45-1-1s.45-1 1-1h5V6c0-.55.45-1 1-1s1 .45 1 1v5h5c.55 0 1 .45 1 1s-.45 1-1 1z" }), 'AddRounded');
default_1$6 = AddRounded["default"] = _default$6;
var ContentSpacingCore = function ContentSpacingCore(_ref28) { var children = _ref28.children, gap = _ref28.gap; var theme = useTheme(); return /*#__PURE__*/ wn.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: theme.spacing(gap !== null && gap !== void 0 ? gap : DEFAULT_GAP) } }, children); };
var ADD_NEW_BUTTON_TEXT = 'Add new';
var ListEditorCore = function ListEditorCore(_a) { var title = _a.title, description = _a.description, limit = _a.limit, addModalProps = _a.addModalProps, hideAddButton = _a.hideAddButton, onAdd = _a.onAdd, Button = _a.ButtonComponent, EmbeddedTable = _a.EmbeddedTableComponent, Modal = _a.ModalComponent, Typography = _a.TypographyComponent, embeddedTableProps = __rest(_a, ["title", "description", "limit", "addModalProps", "hideAddButton", "onAdd", "ButtonComponent", "EmbeddedTableComponent", "ModalComponent", "TypographyComponent"]); if (!addModalProps && !onAdd) {
    throw new Error('Either addModalProps or onAdd prop must be provided');
} var modalState = useModalState(addModalProps === null || addModalProps === void 0 ? void 0 : addModalProps.confirm); var items = embeddedTableProps.items, readOnly = embeddedTableProps.readOnly; var onClose = function onClose() { var _a; (_a = addModalProps === null || addModalProps === void 0 ? void 0 : addModalProps.close) === null || _a === void 0 ? void 0 : _a.call(addModalProps); modalState.close(); }; var addNew = addModalProps ? modalState.open : onAdd; return /*#__PURE__*/ wn.createElement(ContentSpacingCore, null, addModalProps && ( /*#__PURE__*/wn.createElement(Modal, Object.assign({}, addModalProps, modalState, { close: onClose }), addModalProps.content)), /*#__PURE__*/ wn.createElement("div", null, title && /*#__PURE__*/ wn.createElement(Typography, { variant: "h4" }, title), description && /*#__PURE__*/ wn.createElement(Typography, null, description)), items && items.length > 0 && ( /*#__PURE__*/wn.createElement(EmbeddedTable, Object.assign({}, embeddedTableProps, { bottomAction: !hideAddButton && (!limit || items.length < limit) && ( /*#__PURE__*/wn.createElement(Button, { compact: true, onClick: addNew, startIcon: /*#__PURE__*/ wn.createElement(default_1$6, null), variant: "text" }, ADD_NEW_BUTTON_TEXT)) }))), !hideAddButton && !readOnly && !items.length && ( /*#__PURE__*/wn.createElement(Button, { compact: true, onClick: addNew, startIcon: /*#__PURE__*/ wn.createElement(default_1$6, null), variant: "ghost" }, ADD_NEW_BUTTON_TEXT))); };
var validateRowKey = function validateRowKey(items, rowKeyExtractor) { var _a; if (items.length > 0 && typeof items[0] !== 'string' && (!((_a = items[0]) === null || _a === void 0 ? void 0 : _a.id) || typeof items[0].id !== 'string') && !rowKeyExtractor) {
    throw new Error('rowKeyExtractor is required if items are not strings or do not have an id property');
} };
var getTableCellValue = function getTableCellValue(children) { var value = children; if (typeof children === 'string' || typeof children === 'number' || typeof children === 'boolean') {
    value = String(children);
} if (!children) {
    value = '–';
} return value; };
var useTableActionStyles = makeStyles(function (theme) { return { tableActions: { display: 'flex', gap: theme.spacing(1), margin: theme.spacing(0, -1.25) } }; });
var TABLE_ACTIONS_HEADER = 'Actions';
var TableActionsCore = function TableActionsCore(_ref29) { var warningAction = _ref29.warningAction, action = _ref29.action, customAction = _ref29.customAction, Button = _ref29.ButtonComponent; var classes = useTableActionStyles(); return /*#__PURE__*/ wn.createElement("div", { className: classes.tableActions }, action && ( /*#__PURE__*/wn.createElement(Button, { compact: true, onClick: action.onClick, variant: "text" }, action.text)), warningAction && ( /*#__PURE__*/wn.createElement(Button, { compact: true, onClick: warningAction.onClick, variant: "text", warning: true }, warningAction.text)), customAction); };
var makeEmbeddedTableStyles = makeStylesFactory(function (theme) { return { embeddedTableWithActions: { width: 'calc(100% - 2px)' }, tableCell: { padding: theme.spacing(0.5, 1), minWidth: 80 }, tableActionsCell: { position: 'sticky', right: 0, width: '1%' }, tableHeader: {}, bottomAction: { borderBottom: 'none' } }; });
var EmbeddedTableCore = function EmbeddedTableCore(_ref30) { var itemRenderer = _ref30.itemRenderer, items = _ref30.items, rowKeyExtractor = _ref30.rowKeyExtractor, getItemActionProps = _ref30.getItemActionProps, readOnly = _ref30.readOnly, bottomAction = _ref30.bottomAction, initialItemState = _ref30.initialItemState, classes = _ref30.classes, TableActions = _ref30.TableActionsComponent, Typography = _ref30.TypographyComponent; var tableActionClasses = useTableActionStyles(); validateRowKey(items, rowKeyExtractor); var getId = T$2(function (item) { return rowKeyExtractor ? rowKeyExtractor(item) : typeof item === 'string' ? item : item.id; }, [rowKeyExtractor]); var itemState = initialItemState !== null && initialItemState !== void 0 ? initialItemState : {}; var _h17 = h$4(items.reduce(function (acc, item) { return Object.assign(Object.assign({}, acc), _defineProperty2({}, getId(item), itemState)); }, {})), _h18 = _slicedToArray2(_h17, 2), itemsState = _h18[0], setItemsState = _h18[1]; var setItemState = function setItemState(item, state) { var id = getId(item); setItemsState(function (prevState) { return Object.assign(Object.assign({}, prevState), _defineProperty2({}, id, state)); }); }; p$3(function () { setItemsState(items.reduce(function (acc, item) { var _a; return Object.assign(Object.assign({}, acc), _defineProperty2({}, getId(item), (_a = itemsState[getId(item)]) !== null && _a !== void 0 ? _a : itemState)); }, {})); }, [items, getId]); return /*#__PURE__*/ wn.createElement(TableContainer$1, null, /*#__PURE__*/ wn.createElement(MUITable, { className: C(_defineProperty2({}, classes.embeddedTableWithActions, getItemActionProps)) }, /*#__PURE__*/ wn.createElement(TableHead$1, null, /*#__PURE__*/ wn.createElement(MUITableRow, null, itemRenderer.map(function (column) { return /*#__PURE__*/ wn.createElement(MUITableCell, { className: C(classes.tableCell, classes.tableHeader), key: "col-header-".concat(column.title) }, /*#__PURE__*/ wn.createElement(Typography, { variant: "body2" }, column.title)); }), !readOnly && getItemActionProps && ( /*#__PURE__*/wn.createElement(MUITableCell, { className: C(classes.tableCell, classes.tableActionsCell, classes.tableHeader) }, /*#__PURE__*/ wn.createElement(Typography, { variant: "body2" }, TABLE_ACTIONS_HEADER))))), /*#__PURE__*/ wn.createElement(TableBody$1, null, items.map(function (item) { var id = getId(item); return /*#__PURE__*/ wn.createElement(MUITableRow, { key: id }, itemRenderer.map(function (column, i) { var children = column.getValue(item, itemsState[id]); var value = getTableCellValue(children); return /*#__PURE__*/ wn.createElement(MUITableCell, { className: classes.tableCell, key: "col-".concat(column.title, "-").concat(i) }, typeof value === 'string' ? /*#__PURE__*/ wn.createElement(Typography, { variant: "body2" }, value) : value); }), !readOnly && getItemActionProps && ( /*#__PURE__*/wn.createElement(MUITableCell, { className: C(classes.tableCell, classes.tableActionsCell) }, /*#__PURE__*/ wn.createElement(TableActions, Object.assign({}, getItemActionProps(item, function (state) { return state && setItemState(item, state); }, itemsState[id])))))); }), !readOnly && bottomAction && ( /*#__PURE__*/wn.createElement(MUITableRow, null, /*#__PURE__*/ wn.createElement(MUITableCell, { className: C(classes.tableCell, classes.bottomAction), colSpan: getItemActionProps ? itemRenderer.length : itemRenderer.length - 1 }), /*#__PURE__*/ wn.createElement(MUITableCell, { className: C(classes.tableCell, classes.tableActionsCell, classes.bottomAction) }, /*#__PURE__*/ wn.createElement("div", { className: tableActionClasses.tableActions }, bottomAction))))))); };
makeStyles(function (theme) { return { tableActions: { display: 'flex', gap: theme.spacing(1), margin: theme.spacing(0, -1.25) } }; });
var TableActions = function TableActions(props) { return /*#__PURE__*/ wn.createElement(TableActionsCore, Object.assign({}, props, { ButtonComponent: Button })); };
var useStyles$9 = makeEmbeddedTableStyles(function (theme) { return { tableHeader: { borderBottomColor: theme.styleConfig.colors.subtle } }; });
var EmbeddedTable = function EmbeddedTable(props) { var classes = useStyles$9(); return /*#__PURE__*/ wn.createElement(EmbeddedTableCore, Object.assign({}, props, { TableActionsComponent: TableActions, TypographyComponent: Typography, classes: classes })); };
var ListEditor = function ListEditor(props) { return /*#__PURE__*/ wn.createElement(ListEditorCore, Object.assign({}, props, { ButtonComponent: Button, EmbeddedTableComponent: EmbeddedTable, ModalComponent: Modal, TypographyComponent: Typography })); };
var CheckRounded = {};
var _interopRequireDefault$5 = interopRequireDefaultExports;
var _interopRequireWildcard$5 = interopRequireWildcardExports;
Object.defineProperty(CheckRounded, "__esModule", { value: true });
var default_1$5 = CheckRounded["default"] = void 0;
var React$5 = _interopRequireWildcard$5(require$$2);
var _createSvgIcon$5 = _interopRequireDefault$5(requireCreateSvgIcon());
var _default$5 = (0, _createSvgIcon$5["default"])(/*#__PURE__*/ React$5.createElement("path", { d: "M9 16.17L5.53 12.7a.9959.9959 0 00-1.41 0c-.39.39-.39 1.02 0 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71c.39-.39.39-1.02 0-1.41a.9959.9959 0 00-1.41 0L9 16.17z" }), 'CheckRounded');
default_1$5 = CheckRounded["default"] = _default$5;
var DoneAll = {};
var _interopRequireDefault$4 = interopRequireDefaultExports;
var _interopRequireWildcard$4 = interopRequireWildcardExports;
Object.defineProperty(DoneAll, "__esModule", { value: true });
var default_1$4 = DoneAll["default"] = void 0;
var React$4 = _interopRequireWildcard$4(require$$2);
var _createSvgIcon$4 = _interopRequireDefault$4(requireCreateSvgIcon());
var _default$4 = (0, _createSvgIcon$4["default"])(/*#__PURE__*/ React$4.createElement("path", { d: "M18 7l-1.41-1.41-6.34 6.34 1.41 1.41L18 7zm4.24-1.41L11.66 16.17 7.48 12l-1.41 1.41L11.66 19l12-12-1.42-1.41zM.41 13.41L6 19l1.41-1.41L1.83 12 .41 13.41z" }), 'DoneAll');
default_1$4 = DoneAll["default"] = _default$4;
var ExpandMore = {};
var _interopRequireDefault$3 = interopRequireDefaultExports;
var _interopRequireWildcard$3 = interopRequireWildcardExports;
Object.defineProperty(ExpandMore, "__esModule", { value: true });
var default_1$3 = ExpandMore["default"] = void 0;
var React$3 = _interopRequireWildcard$3(require$$2);
var _createSvgIcon$3 = _interopRequireDefault$3(requireCreateSvgIcon());
var _default$3 = (0, _createSvgIcon$3["default"])(/*#__PURE__*/ React$3.createElement("path", { d: "M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" }), 'ExpandMore');
default_1$3 = ExpandMore["default"] = _default$3;
var RemoveRounded = {};
var _interopRequireDefault$2 = interopRequireDefaultExports;
var _interopRequireWildcard$2 = interopRequireWildcardExports;
Object.defineProperty(RemoveRounded, "__esModule", { value: true });
var default_1$2 = RemoveRounded["default"] = void 0;
var React$2 = _interopRequireWildcard$2(require$$2);
var _createSvgIcon$2 = _interopRequireDefault$2(requireCreateSvgIcon());
var _default$2 = (0, _createSvgIcon$2["default"])(/*#__PURE__*/ React$2.createElement("path", { d: "M18 13H6c-.55 0-1-.45-1-1s.45-1 1-1h12c.55 0 1 .45 1 1s-.45 1-1 1z" }), 'RemoveRounded');
default_1$2 = RemoveRounded["default"] = _default$2;
var MULTISELECT_VALUE = 'all_values';
var makeSelectStyles = makeStylesFactory(function (theme) { return { checkIcon: {}, menuPaper: { marginTop: theme.spacing(0.5), maxHeight: 280, maxWidth: DEFAULT_GRID_COLUMN_WIDTH }, readOnlyContainer: { display: '-webkit-box', '-webkit-line-clamp': 2, '-webkit-box-orient': 'vertical', overflow: 'hidden' }, select: { '& .MuiInputBase-root': { padding: 0 }, '& .MuiInputBase-input': { padding: theme.spacing(1, 3, 1, 1) }, '& .MuiSelect-icon': { fontSize: 20, marginRight: theme.spacing(0.5), marginTop: theme.spacing(0.25) }, '& .MuiSelect-select': { '&:focus': { backgroundColor: 'transparent' } }, '&:hover': {}, border: '1px solid', borderRadius: 4 }, selectContainer: _defineProperty2(_defineProperty2(_defineProperty2({}, theme.breakpoints.down('sm'), { width: '100%', minWidth: 'unset', flex: 1 }), "width", DEFAULT_GRID_COLUMN_WIDTH), "minWidth", DEFAULT_GRID_COLUMN_WIDTH), selectContainerOpen: {}, disabled: {}, fullWidth: { width: '100%' } }; });
var SelectCore = function SelectCore(_ref31) { var caption = _ref31.caption, disabled = _ref31.disabled, fullWidth = _ref31.fullWidth, id = _ref31.id, label = _ref31.label, menuAnchorHorizontal = _ref31.menuAnchorHorizontal, selectItems = _ref31.selectItems, multiple = _ref31.multiple, onChange = _ref31.onChange, placeholder = _ref31.placeholder, readOnly = _ref31.readOnly, required = _ref31.required, value = _ref31.value, classes = _ref31.classes, Label = _ref31.LabelComponent, MenuItem = _ref31.MenuItemComponent, Typography = _ref31.TypographyComponent; var _a; var selectId = useShortId(id); var _h19 = h$4(false), _h20 = _slicedToArray2(_h19, 2), isOpen = _h20[0], setIsOpen = _h20[1]; var totalOptions = selectItems.filter(function (item) { return !item.disabled; }).length; var isMultiSelect = multiple && Array.isArray(value); var hasMoreThanOneChild = totalOptions > 1; var MultiSelectIcon; var canSelectAll; if (isMultiSelect && hasMoreThanOneChild) {
    if (value.length > 0) {
        MultiSelectIcon = default_1$2;
        canSelectAll = false;
    }
    else {
        MultiSelectIcon = default_1$4;
        canSelectAll = true;
    }
} var handleChange = function handleChange(event) { if (Array.isArray(event.target.value) && event.target.value.includes(MULTISELECT_VALUE)) {
    return;
} onChange === null || onChange === void 0 ? void 0 : onChange(event.target.value); }; var selectAll = function selectAll() { if (!isMultiSelect || !hasMoreThanOneChild || !onChange) {
    return;
} var newValue = selectItems.filter(function (item) { return !item.disabled; }).map(function (item) { return item.value; }); onChange(newValue); }; var deselectAll = function deselectAll() { if (!isMultiSelect || !hasMoreThanOneChild || !onChange) {
    return;
} var newValue = []; onChange(newValue); }; var getRenderValue = function getRenderValue(value) { var _a; if (value === undefined || value === null || Array.isArray(value) && value.length === 0) {
    return null;
} if (Array.isArray(value)) {
    var valueSet = new Set(value);
    return selectItems.filter(function (item) { return valueSet.has(item.value); }).map(function (item) { return item.label; }).join(', ');
} return (_a = selectItems.find(function (item) { return item.value === value; })) === null || _a === void 0 ? void 0 : _a.label; }; var renderValue = function renderValue(val) { var renderText = getRenderValue(val); if (!renderText) {
    return placeholder || 'Select option...';
}
else if (Array.isArray(val) && val.length === totalOptions && hasMoreThanOneChild) {
    return 'All';
} return renderText; }; var shouldDisable = disabled && !readOnly; return /*#__PURE__*/ wn.createElement("div", { className: C(classes.selectContainer, _defineProperty2(_defineProperty2(_defineProperty2({}, classes.selectContainerOpen, isOpen), classes.readOnlyContainer, readOnly), classes.fullWidth, fullWidth)) }, label && ( /*#__PURE__*/wn.createElement(Label, { disabled: shouldDisable, htmlFor: selectId, required: required }, label)), readOnly && /*#__PURE__*/ wn.createElement(Typography, null, (_a = getRenderValue(value)) !== null && _a !== void 0 ? _a : 'None selected'), !readOnly && ( /*#__PURE__*/wn.createElement(wn.Fragment, null, /*#__PURE__*/ wn.createElement(MuiSelect, { IconComponent: default_1$3, MenuProps: { anchorOrigin: { horizontal: menuAnchorHorizontal !== null && menuAnchorHorizontal !== void 0 ? menuAnchorHorizontal : 'center', vertical: 'bottom' }, getContentAnchorEl: null, transformOrigin: { horizontal: 'center', vertical: 'top' }, PopoverClasses: { paper: classes.menuPaper } }, className: C(classes.select, _defineProperty2({}, classes.disabled, disabled)), disableUnderline: true, disabled: shouldDisable, displayEmpty: true, fullWidth: true, id: selectId, multiple: multiple, onChange: handleChange, onClose: function onClose() { return setIsOpen(false); }, onOpen: function onOpen() { return setIsOpen(true); }, renderValue: renderValue, value: value !== null && value !== void 0 ? value : '' }, isMultiSelect && hasMoreThanOneChild && ( /*#__PURE__*/wn.createElement(MenuItem, { Icon: MultiSelectIcon ? /*#__PURE__*/ wn.createElement(MultiSelectIcon, { className: classes.checkIcon, fontSize: "small" }) : /*#__PURE__*/ wn.createElement("div", null), forceSelected: !!MultiSelectIcon, label: canSelectAll ? 'Select all' : 'Unselect', onClick: canSelectAll ? selectAll : deselectAll, value: MULTISELECT_VALUE })), selectItems.map(function (menuItem) { return /*#__PURE__*/ wn.createElement(MenuItem, Object.assign({ Icon: /*#__PURE__*/ wn.createElement(default_1$5, { className: classes.checkIcon, fontSize: "small" }), key: menuItem.value }, menuItem)); })), caption && ( /*#__PURE__*/wn.createElement(Typography, { disabled: shouldDisable, variant: "body2" }, caption))))); };
var useStyles$8 = makeStyles(function (theme) { return { container: { display: 'flex', alignItems: 'center', justifyContent: 'space-between' }, icon: { '& .MuiSvgIcon-root': { marginTop: theme.spacing(0.5) }, display: 'flex', marginRight: theme.spacing(1), visibility: 'hidden' }, iconVisible: { visibility: 'visible' }, text: { display: 'flex', flexDirection: 'column', textWrap: 'wrap' }, menuItem: { display: 'flex', alignItems: 'flex-start', padding: theme.spacing(1), flex: 1 }, premiumButton: { marginRight: theme.spacing(1) } }; });
var MenuItemCore = function MenuItemCore(_ref32) { var Icon = _ref32.Icon, disabled = _ref32.disabled, footer = _ref32.footer, forceSelected = _ref32.forceSelected, label = _ref32.label, onClick = _ref32.onClick, selected = _ref32.selected, subtext = _ref32.subtext, Typography = _ref32.TypographyComponent; var classes = useStyles$8(); return /*#__PURE__*/ wn.createElement("div", { className: classes.container }, /*#__PURE__*/ wn.createElement(MenuItem$2, { button: !!onClick || undefined, className: classes.menuItem, "data-value": label, disableRipple: true, disabled: disabled, onClick: onClick }, Icon && /*#__PURE__*/ wn.createElement("div", { className: C(classes.icon, _defineProperty2({}, classes.iconVisible, selected || forceSelected)) }, Icon), /*#__PURE__*/ wn.createElement("div", { className: classes.text }, /*#__PURE__*/ wn.createElement(Typography, null, label), /*#__PURE__*/ wn.createElement(Typography, { variant: "body2" }, subtext))), footer); };
var MenuItem = function MenuItem(props) { return /*#__PURE__*/ wn.createElement(MenuItemCore, Object.assign({}, props, { TypographyComponent: Typography })); };
var useStyles$7 = makeSelectStyles(function (theme) { return { checkIcon: { color: theme.styleConfig.colors.primary }, menuPaper: { backgroundColor: theme.styleConfig.container.backgroundColor, color: theme.styleConfig.colors.primary }, select: { color: theme.styleConfig.colors.primary, '& .MuiSelect-icon': { color: theme.styleConfig.colors.primary }, borderColor: theme.styleConfig.inputs.borderColor } }; });
var Select = function Select(props) { var classes = useStyles$7(); return /*#__PURE__*/ wn.createElement(SelectCore, Object.assign({}, props, { LabelComponent: Label, MenuItemComponent: MenuItem, TypographyComponent: Typography, classes: classes })); };
var useStyles$6 = makeStyles(function (theme) { return { settingsContainer: { border: '1px solid', borderColor: theme.styleConfig.colors.subtle, borderRadius: theme.styleConfig.borderRadius, backgroundColor: theme.styleConfig.container.backgroundColor }, titleContainer: _defineProperty2(_defineProperty2(_defineProperty2(_defineProperty2(_defineProperty2(_defineProperty2(_defineProperty2({}, theme.breakpoints.down('xs'), { flexDirection: 'column', alignItems: 'flex-start', gap: theme.spacing(1) }), "padding", theme.spacing(1.5, 2)), "borderBottom", '1px solid'), "borderBottomColor", theme.styleConfig.colors.subtle), "display", 'flex'), "justifyContent", 'space-between'), "alignItems", 'center'), content: { padding: theme.spacing(2) }, actions: { display: 'flex', gap: theme.spacing(1), alignItems: 'center' } }; });
var DEFAULT_STATE = { editing: false, setEditing: noop };
var SettingsContext = /*#__PURE__*/ F$4(DEFAULT_STATE);
var useSettingsContainer = function useSettingsContainer() { return q$5(SettingsContext); };
var SettingsContainer = function SettingsContainer(_ref33) { var _ref33$canEdit = _ref33.canEdit, canEdit = _ref33$canEdit === void 0 ? true : _ref33$canEdit, disableSave = _ref33.disableSave, children = _ref33.children, hasCTA = _ref33.hasCTA, onCancel = _ref33.onCancel, onSave = _ref33.onSave, title = _ref33.title, customCTA = _ref33.customCTA, creating = _ref33.creating, externalEditing = _ref33.editing, externalSetEditing = _ref33.setEditing, modalDescription = _ref33.modalDescription, useBlockNavigation = _ref33.useBlockNavigation; var classes = useStyles$6(); var _h21 = h$4(creating !== null && creating !== void 0 ? creating : false), _h22 = _slicedToArray2(_h21, 2), internalEditing = _h22[0], internalSetEditing = _h22[1]; var _h23 = h$4(false), _h24 = _slicedToArray2(_h23, 2), isSaving = _h24[0], setIsSaving = _h24[1]; var _useToast3 = useToast(), openToast = _useToast3.openToast, closeToast = _useToast3.closeToast; var shouldUseExternalEditing = externalEditing !== undefined && !!externalSetEditing; var editing = shouldUseExternalEditing ? externalEditing : internalEditing; var setEditing = shouldUseExternalEditing ? externalSetEditing : internalSetEditing; var _useBlockNavigation = useBlockNavigation(editing && !isSaving), allowNavigation = _useBlockNavigation.allowNavigation, blocked = _useBlockNavigation.blocked, cancelNavigation = _useBlockNavigation.cancelNavigation; var edit = function edit() { setEditing(true); }; var cancel = function cancel() { onCancel === null || onCancel === void 0 ? void 0 : onCancel(); closeToast(); setEditing(false); }; var save = function save() { return __awaiter(void 0, void 0, void 0, /*#__PURE__*/ _regeneratorRuntime().mark(function _callee6() { var message; return _regeneratorRuntime().wrap(function _callee6$(_context6) { while (1)
    switch (_context6.prev = _context6.next) {
        case 0:
            setIsSaving(true);
            _context6.prev = 1;
            _context6.next = 4;
            return onSave === null || onSave === void 0 ? void 0 : onSave();
        case 4:
            setEditing(false);
            _context6.next = 11;
            break;
        case 7:
            _context6.prev = 7;
            _context6.t0 = _context6["catch"](1);
            message = extractErrorMessage(_context6.t0);
            if (message) {
                openToast({ type: 'error', text: message });
            }
        case 11:
            _context6.prev = 11;
            setIsSaving(false);
            return _context6.finish(11);
        case 14:
        case "end": return _context6.stop();
    } }, _callee6, null, [[1, 7, 11, 14]]); })); }; var modalState = useModalState(save); if (!modalDescription) {
    modalDescription = 'Double check before saving your changes.';
} return /*#__PURE__*/ wn.createElement(SettingsContext.Provider, { value: { editing: editing, setEditing: setEditing } }, /*#__PURE__*/ wn.createElement(Modal, Object.assign({}, modalState, { confirmButtonText: "Save changes", description: modalDescription, title: "Save changes?", warning: true })), /*#__PURE__*/ wn.createElement(Modal, { isOpen: blocked, close: cancelNavigation, confirm: function confirm() { allowNavigation(); return Promise.resolve(); }, confirmButtonText: "Navigate without saving", cancelButtonText: "Keep editing", description: 'Your changes are unsaved – are you sure you want to navigate away?', title: "Save changes?", warning: true }), /*#__PURE__*/ wn.createElement("div", { className: classes.settingsContainer }, /*#__PURE__*/ wn.createElement("div", { className: classes.titleContainer }, /*#__PURE__*/ wn.createElement(Typography, { variant: "h3" }, title), /*#__PURE__*/ wn.createElement("div", { className: classes.actions }, hasCTA && ( /*#__PURE__*/wn.createElement(wn.Fragment, null, editing ? ( /*#__PURE__*/wn.createElement(wn.Fragment, null, /*#__PURE__*/ wn.createElement(Button, { compact: true, onClick: cancel, variant: "ghost" }, "Cancel"), /*#__PURE__*/ wn.createElement(Button, { compact: true, disabled: disableSave, onClick: modalState.open }, "Save"))) : ( /*#__PURE__*/wn.createElement(wn.Fragment, null, customCTA ? customCTA : canEdit && ( /*#__PURE__*/wn.createElement(Button, { compact: true, onClick: edit, variant: "ghost" }, "Edit")))))))), /*#__PURE__*/ wn.createElement("div", { className: classes.content }, children))); };
var SettingsList = function SettingsList(_ref34) { var children = _ref34.children; return /*#__PURE__*/ wn.createElement("dl", { style: { margin: 0 } }, children); };
var SettingsListItem = function SettingsListItem(_ref35) { var children = _ref35.children, title = _ref35.title; return /*#__PURE__*/ wn.createElement(wn.Fragment, null, /*#__PURE__*/ wn.createElement(Typography, { component: "dt" }, title), /*#__PURE__*/ wn.createElement("dd", { style: { margin: '0 0 8px' } }, children)); };
var makeInfoIconStyles = makeStylesFactory(function () { return { infoIconContainer: { width: 'fit-content' } }; });
var InfoIconCore = function InfoIconCore(_ref36) { var tooltipText = _ref36.tooltipText, classes = _ref36.classes, Tooltip = _ref36.TooltipComponent; return /*#__PURE__*/ wn.createElement("div", { className: classes.infoIconContainer }, /*#__PURE__*/ wn.createElement(Tooltip, { text: tooltipText }, /*#__PURE__*/ wn.createElement(InfoOutlined, null))); };
var makeTooltipStyles = makeStylesFactory(function (theme) { return { targetWrapper: { display: 'flex', width: 'fit-content' }, tooltip: { '& .MuiTooltip-tooltip': { maxWidth: 240, padding: theme.spacing(1), borderRadius: 4 }, '& .MuiTooltip-tooltipPlacementRight': { margin: theme.spacing(0, 1) }, '& .MuiTooltip-tooltipPlacementLeft': { margin: theme.spacing(0, 1) }, zIndex: 2000 } }; });
var TooltipCore = function TooltipCore(_ref37) { var text = _ref37.text, children = _ref37.children, disabled = _ref37.disabled, _ref37$placement = _ref37.placement, placement = _ref37$placement === void 0 ? 'right' : _ref37$placement, classes = _ref37.classes, Typography = _ref37.TypographyComponent; if (disabled) {
    return children;
} return /*#__PURE__*/ wn.createElement(MUITooltip, { PopperProps: { className: classes.tooltip }, interactive: true, placement: placement, title: /*#__PURE__*/ wn.createElement(Typography, { variant: "body2" }, text) }, /*#__PURE__*/ wn.createElement("span", { className: classes.targetWrapper }, children)); };
var useStyles$5 = makeTooltipStyles(function (theme) { return { tooltip: { '& .MuiTooltip-tooltip': { '& p': { color: theme.styleConfig.buttons.primary.textColor }, backgroundColor: theme.styleConfig.buttons.primary.backgroundColor } } }; });
var Tooltip = function Tooltip(props) { var classes = useStyles$5(); return /*#__PURE__*/ wn.createElement(TooltipCore, Object.assign({}, props, { TypographyComponent: Typography, classes: classes })); };
var useStyles$4 = makeInfoIconStyles(function (theme) { return { infoIconContainer: { color: theme.styleConfig.colors.primary } }; });
var InfoIcon = function InfoIcon(props) { var classes = useStyles$4(); return /*#__PURE__*/ wn.createElement(InfoIconCore, Object.assign({}, props, { classes: classes, TooltipComponent: Tooltip })); };
var SettingsSection = function SettingsSection(_ref38) { var children = _ref38.children, title = _ref38.title, tooltipText = _ref38.tooltipText; return /*#__PURE__*/ wn.createElement(FlexBox, { flexDirection: "column", gap: 0.5 }, /*#__PURE__*/ wn.createElement(FlexBox, { alignItems: "center", flexDirection: "row", gap: 1 }, /*#__PURE__*/ wn.createElement(Typography, { variant: "h4" }, title), tooltipText && /*#__PURE__*/ wn.createElement(InfoIcon, { tooltipText: tooltipText })), children); };
var useFormState = function useFormState(_ref39) { var remoteState = _ref39.remoteState; var _h25 = h$4(remoteState), _h26 = _slicedToArray2(_h25, 2), localState = _h26[0], setLocalState = _h26[1]; var resetLocalState = T$2(function () { setLocalState(remoteState); }, [remoteState]); var _h27 = h$4(false), _h28 = _slicedToArray2(_h27, 2), editing = _h28[0], setEditing = _h28[1]; var handleSetEditing = T$2(function (newEditing) { if (newEditing) {
    resetLocalState();
} setEditing(newEditing); }, [resetLocalState]); return { localState: localState, setLocalState: setLocalState, editing: editing, handleSetEditing: handleSetEditing }; };
var useStateSliceSetter = function useStateSliceSetter(setState, key) { return T$2(function (value) { setState(function (state) { return Object.assign(Object.assign({}, state), _defineProperty2({}, key, value)); }); }, [key, setState]); };
var samlIdpMap = { generic: { displayName: 'Custom SAML', setupOrder: ['copyToIdp', 'attributeMapping', 'copyFromIdp'], idpValueOrder: ['ssoUrl', 'entityId', 'certificate'], acsUrlLabel: 'ACS URL (Reply URL)', audienceUriLabel: 'Audience URI (SP Entity ID)', idpSsoUrlLabel: 'IdP Sign-on URL', idpEntityIdLabel: 'IdP Entity ID', x509CertificateLabel: 'x509 Certificate (PEM Format)', metadataUrlLabel: 'Metadata URL', nameIdFormatLabel: 'Name ID Format', nameIdFormatValue: 'Primary Email Address', attributeMappingLabel: 'Attribute Mapping' }, 'microsoft-entra': { displayName: 'Entra SAML', setupOrder: ['copyToIdp', 'attributeMapping', 'copyFromIdp'], idpValueOrder: ['ssoUrl', 'entityId', 'certificate'], acsUrlLabel: 'Reply URL (Assertion Consumer Service URL)', audienceUriLabel: 'Identifier (Entity ID)', idpSsoUrlLabel: 'Login Url', idpEntityIdLabel: 'Microsoft Entra Identifier', x509CertificateLabel: 'PEM Certificate', metadataUrlLabel: 'App Federation Metadata Url', nameIdFormatLabel: 'Unique User Identifier (Name ID) Format', nameIdFormatValue: 'user.primaryauthoritativeemail', attributeMappingLabel: 'Claim Names' }, okta: { displayName: 'Okta SAML', setupOrder: ['copyToIdp', 'attributeMapping', 'copyFromIdp'], idpValueOrder: ['ssoUrl', 'entityId', 'certificate'], acsUrlLabel: 'Single sign-on URL', audienceUriLabel: 'Audience URI (SP Entity ID)', idpSsoUrlLabel: 'Sign-on URL', idpEntityIdLabel: 'Issuer', x509CertificateLabel: 'Signing Certificate', metadataUrlLabel: 'Metadata URL', nameIdFormatLabel: 'Name ID Format', nameIdFormatValue: 'EmailAddress', attributeMappingLabel: 'Attribute Statements' }, 'google-workspace': { displayName: 'Google SAML', setupOrder: ['copyFromIdp', 'copyToIdp', 'attributeMapping'], idpValueOrder: ['entityId', 'ssoUrl', 'certificate'], acsUrlLabel: 'ACS URL', audienceUriLabel: 'Entity ID', idpSsoUrlLabel: 'SSO URL', idpEntityIdLabel: 'Entity ID', x509CertificateLabel: 'Certificate', metadataUrlLabel: false, nameIdFormatLabel: 'NameID Format', nameIdFormatValue: 'EMAIL; Basic Information > Primary email', attributeMappingLabel: 'Attribute Mapping' } };
var oidcIdpMap = { generic: { displayName: 'Custom OIDC', setupOrder: ['copyToIdp', 'copyFromIdp'], redirectUrlLabel: 'Redirect URI', clientIdLabel: 'Client ID', clientSecretLabel: 'Client Secret', issuerLabel: 'Issuer' }, 'microsoft-entra': { displayName: 'Entra OIDC', setupOrder: ['copyToIdp', 'copyFromIdp'], redirectUrlLabel: 'Redirect URI', clientIdLabel: 'Application (Client) ID', clientSecretLabel: 'Client Secret', issuerLabel: 'Issuer', issuerDerivedLabel: 'Directory (tenant) ID', extractIssuerFromInput: function extractIssuerFromInput(input) { var match = input.match(/^https:\/\/login\.microsoftonline\.com\/(.+)\/v2\.0$/); return match === null || match === void 0 ? void 0 : match[1]; }, transformInputToIssuer: function transformInputToIssuer(id) { return "https://login.microsoftonline.com/".concat(id, "/v2.0"); } }, okta: { displayName: 'Okta OIDC', setupOrder: ['copyToIdp', 'copyFromIdp'], redirectUrlLabel: 'Sign-on Redirect URI', clientIdLabel: 'Client ID', clientSecretLabel: 'Client Secret', issuerLabel: 'Okta URL (Issuer)' } };
var getIdpInfo = function getIdpInfo(idp, type) { if (type === 'saml') {
    var idpKey = idp in samlIdpMap ? idp : 'generic';
    return { idp: samlIdpMap[idpKey], type: type };
}
else {
    var _idpKey = idp in oidcIdpMap ? idp : 'generic';
    return { idp: oidcIdpMap[_idpKey], type: type };
} };
var getIdpAndConnectionInfo = function getIdpAndConnectionInfo(connection) { return Object.assign(Object.assign({}, getIdpInfo(connection.identity_provider, connection.connectionType)), { connection: connection }); };
var AppDetails = function AppDetails(_ref40) { var connectionProp = _ref40.connection; var _getIdpAndConnectionI = getIdpAndConnectionInfo(connectionProp), connection = _getIdpAndConnectionI.connection, idp = _getIdpAndConnectionI.idp, type = _getIdpAndConnectionI.type; return /*#__PURE__*/ wn.createElement(wn.Fragment, null, type === 'saml' && ( /*#__PURE__*/wn.createElement(wn.Fragment, null, /*#__PURE__*/ wn.createElement(SettingsListItem, { title: idp.acsUrlLabel }, /*#__PURE__*/ wn.createElement(CopyableText, null, connection.acs_url)), /*#__PURE__*/ wn.createElement(SettingsListItem, { title: idp.audienceUriLabel }, /*#__PURE__*/ wn.createElement(CopyableText, null, connection.audience_uri)))), type === 'oidc' && ( /*#__PURE__*/wn.createElement(SettingsListItem, { title: idp.redirectUrlLabel }, /*#__PURE__*/ wn.createElement(CopyableText, null, connection.redirect_url))), type === 'saml' && ( /*#__PURE__*/wn.createElement(SettingsListItem, { title: idp.nameIdFormatLabel }, /*#__PURE__*/ wn.createElement(Typography, { color: "secondary" }, idp.nameIdFormatValue)))); };
var collator = Intl.Collator();
var nameKeys = new Set(['full_name', 'first_name', 'last_name']);
var requiredKeys = new Set([].concat(_toConsumableArray2(nameKeys), ['email']));
var attributeMappingItemRenderer = [{ title: 'Key', getValue: function getValue(_ref41) { var key = _ref41.key; var isRequiredKey = requiredKeys.has(key); var label = key; return /*#__PURE__*/ wn.createElement(Typography, { color: "secondary" }, label, isRequiredKey && ( /*#__PURE__*/wn.createElement(wn.Fragment, null, ' ', /*#__PURE__*/ wn.createElement(Typography, { component: "span", color: "error" }, "*")))); } }, { title: 'Value', getValue: function getValue(_ref42) { var value = _ref42.value; return /*#__PURE__*/ wn.createElement(Typography, { color: "secondary" }, value); } }];
var attributeMappingKeyExtractor = function attributeMappingKeyExtractor(_ref43) { var key = _ref43.key; return key; };
var AttributeMappingTable = function AttributeMappingTable(_ref44) { var editing = _ref44.editing, localState = _ref44.localState, remoteState = _ref44.remoteState, setLocalState = _ref44.setLocalState; var _ref45 = editing ? localState : remoteState, attributeMapping = _ref45.attributeMapping; var attributeMappingItems = F$3(function () { return Object.entries(attributeMapping).map(function (_ref46) { var _ref47 = _slicedToArray2(_ref46, 2), key = _ref47[0], value = _ref47[1]; return { key: key, value: value }; }).sort(function (a, b) { return collator.compare(a.key, b.key); }); }, [attributeMapping]); var _h29 = h$4([['', '']]), _h30 = _slicedToArray2(_h29, 2), pendingAttributeMapping = _h30[0], setPendingAttributeMapping = _h30[1]; var _h31 = h$4('key'), _h32 = _slicedToArray2(_h31, 2), editMode = _h32[0], setEditMode = _h32[1]; var _h33 = h$4(''), _h34 = _slicedToArray2(_h33, 2), editedAttributeMappingKey = _h34[0], setEditedAttributeMappingKey = _h34[1]; var _h35 = h$4(''), _h36 = _slicedToArray2(_h35, 2), editedAttributeMappingValue = _h36[0], setEditedAttributeMappingValue = _h36[1]; var _h37 = h$4(''), _h38 = _slicedToArray2(_h37, 2), editedAttributeMappingLastNameValue = _h38[0], setEditedAttributeMappingLastNameValue = _h38[1]; var editAttributeMappingModalProps = useModalState(function () { var editedMapping = editMode === 'name' && editedAttributeMappingKey === 'first_name' ? { first_name: editedAttributeMappingValue, last_name: editedAttributeMappingLastNameValue } : _defineProperty2({}, editedAttributeMappingKey, editedAttributeMappingValue); setLocalState(function (state) { var mergedMapping = Object.assign(Object.assign({}, state.attributeMapping), editedMapping); if (editMode === 'name') {
    if (editedAttributeMappingKey === 'full_name') {
        delete mergedMapping.first_name;
        delete mergedMapping.last_name;
    }
    if (editedAttributeMappingKey === 'first_name') {
        delete mergedMapping.full_name;
    }
} return Object.assign(Object.assign({}, state), { attributeMapping: mergedMapping }); }); }); var hasFirstAndLastNameKeys = !!(attributeMapping.first_name && attributeMapping.last_name); var hasFullNameKey = !!attributeMapping.full_name; var handleEditAttributeMapping = T$2(function (key) { var _a, _b, _c; if (key === 'full_name' && !attributeMapping.first_name && !attributeMapping.last_name || (key === 'first_name' || key === 'last_name') && !hasFullNameKey) {
    setEditMode('name');
    var effectiveKey = key === 'full_name' ? 'full_name' : 'first_name';
    setEditedAttributeMappingKey(effectiveKey);
    setEditedAttributeMappingValue((_a = attributeMapping[effectiveKey]) !== null && _a !== void 0 ? _a : '');
    setEditedAttributeMappingLastNameValue((_b = attributeMapping.last_name) !== null && _b !== void 0 ? _b : '');
}
else {
    setEditMode('key');
    setEditedAttributeMappingKey(key);
    setEditedAttributeMappingValue((_c = attributeMapping[key]) !== null && _c !== void 0 ? _c : '');
} editAttributeMappingModalProps.open(); }, [attributeMapping, editAttributeMappingModalProps, hasFullNameKey]); var deleteAttributeMapping = T$2(function (key) { setLocalState(function (state) { var _a = state.attributeMapping, _b = key; _a[_b]; var rest = __rest(_a, [_typeof2(_b) === "symbol" ? _b : _b + ""]); return Object.assign(Object.assign({}, state), { attributeMapping: rest }); }); }, [setLocalState]); var deleteAttributeMappingModalProps = useModalState(function () { if (pendingDeleteAttributeMappingKey) {
    deleteAttributeMapping(pendingDeleteAttributeMappingKey);
} }); var _h39 = h$4(), _h40 = _slicedToArray2(_h39, 2), pendingDeleteAttributeMappingKey = _h40[0], setPendingDeleteAttributeMappingKey = _h40[1]; var handleRequestDeleteAttributeMapping = T$2(function (key) { if (key !== 'groups') {
    deleteAttributeMapping(key);
}
else {
    setPendingDeleteAttributeMappingKey(key);
    deleteAttributeMappingModalProps.open();
} }, [deleteAttributeMapping, deleteAttributeMappingModalProps]); return /*#__PURE__*/ wn.createElement(wn.Fragment, null, /*#__PURE__*/ wn.createElement(Modal, Object.assign({}, editAttributeMappingModalProps, { title: "Edit custom mapping", confirmButtonText: "Save" }), /*#__PURE__*/ wn.createElement(FlexBox, { flexDirection: "column", gap: 1 }, editMode === 'name' ? ( /*#__PURE__*/wn.createElement(Select, { selectItems: [{ label: 'Full Name', value: 'full_name' }, { label: 'First Name, Last Name', value: 'first_last_name' }], fullWidth: true, caption: "You can change the format of the key.", value: editedAttributeMappingKey === 'full_name' ? 'full_name' : 'first_last_name', onChange: function onChange(value) { setEditedAttributeMappingKey(value === 'full_name' ? 'full_name' : 'first_name'); } })) : ( /*#__PURE__*/wn.createElement(Input, { label: "Key", fullWidth: true, value: editedAttributeMappingKey, onChange: setEditedAttributeMappingKey })), editMode === 'name' && (editedAttributeMappingKey === 'first_name' || editedAttributeMappingKey === 'last_name') ? ( /*#__PURE__*/wn.createElement(wn.Fragment, null, /*#__PURE__*/ wn.createElement(FlexBox, { gap: 2 }, /*#__PURE__*/ wn.createElement(Input, { label: "First Name", fullWidth: true, value: editedAttributeMappingValue, onChange: setEditedAttributeMappingValue }), /*#__PURE__*/ wn.createElement(Input, { label: "Last Name", fullWidth: true, value: editedAttributeMappingLastNameValue, onChange: setEditedAttributeMappingLastNameValue })))) : ( /*#__PURE__*/wn.createElement(Input, { label: "Value", fullWidth: true, value: editedAttributeMappingValue, onChange: setEditedAttributeMappingValue })))), /*#__PURE__*/ wn.createElement(Modal, Object.assign({}, deleteAttributeMappingModalProps, { title: "Delete mapping?", confirmButtonText: "Delete", warning: true }), /*#__PURE__*/ wn.createElement(Typography, null, "Deleting the Groups attribute mapping will also disable any Group Role assignments you have added above. They will not be deleted, but you must add a Groups mapping to make edits.")), /*#__PURE__*/ wn.createElement(ListEditor, { items: attributeMappingItems, itemRenderer: attributeMappingItemRenderer, rowKeyExtractor: attributeMappingKeyExtractor, addModalProps: { confirm: function confirm() { setLocalState(function (state) { return Object.assign(Object.assign({}, state), { attributeMapping: Object.assign(Object.assign({}, state.attributeMapping), Object.fromEntries(pendingAttributeMapping.filter(function (_ref49) { var _ref50 = _slicedToArray2(_ref49, 2), key = _ref50[0], value = _ref50[1]; return key && value && !state.attributeMapping[key]; }))) }); }); return Promise.resolve(); }, title: 'Add custom mapping', content: ( /*#__PURE__*/wn.createElement(FlexBox, { flexDirection: "column", gap: 1 }, pendingAttributeMapping.map(function (_ref51, i) { var _ref52 = _slicedToArray2(_ref51, 2), key = _ref52[0], value = _ref52[1]; return /*#__PURE__*/ wn.createElement(FlexBox, { gap: 1, key: i }, /*#__PURE__*/ wn.createElement(Input, { label: "Key", fullWidth: true, value: key, onChange: function onChange(value) { setPendingAttributeMapping(function (state) { return state.map(function (item, index) { return index === i ? [value, item[1]] : item; }); }); } }), /*#__PURE__*/ wn.createElement(Input, { label: "Value", fullWidth: true, value: value, onChange: function onChange(value) { setPendingAttributeMapping(function (state) { return state.map(function (item, index) { return index === i ? [item[0], value] : item; }); }); } })); }), /*#__PURE__*/ wn.createElement(Button, { variant: "text", startIcon: /*#__PURE__*/ wn.createElement(Add, null), fullWidth: true, onClick: function onClick() { setPendingAttributeMapping(function (state) { return [].concat(_toConsumableArray2(state), [['', '']]); }); } }, "Add custom mapping"))) }, hideAddButton: !editing, getItemActionProps: editing ? function (item) { return { action: item.key === 'email' && item.value === 'NameID' ? undefined : { text: 'Edit', onClick: function onClick() { handleEditAttributeMapping(item.key); } }, warningAction: item.key === 'email' || nameKeys.has(item.key) && !(hasFirstAndLastNameKeys && hasFullNameKey) ? undefined : { text: 'Delete', onClick: function onClick() { handleRequestDeleteAttributeMapping(item.key); } } }; } : undefined })); };
var makeSamlOption = function makeSamlOption(idpName) { return { idp: samlIdpMap[idpName], idpName: idpName, type: 'saml' }; };
var makeOidcOption = function makeOidcOption(idpName) { return { idp: oidcIdpMap[idpName], idpName: idpName, type: 'oidc' }; };
var idpOptions = { 'saml:google-workspace': makeSamlOption('google-workspace'), 'saml:okta': makeSamlOption('okta'), 'oidc:okta': makeOidcOption('okta'), 'saml:microsoft-entra': makeSamlOption('microsoft-entra'), 'oidc:microsoft-entra': makeOidcOption('microsoft-entra'), 'saml:generic': makeSamlOption('generic'), 'oidc:generic': makeOidcOption('generic') };
var idpSelectItems = Object.entries(idpOptions).map(function (_ref53) { var _ref54 = _slicedToArray2(_ref53, 2), idpKey = _ref54[0], idp = _ref54[1].idp; return { label: idp.displayName, value: idpKey }; });
var samlIdpSelectItems = Object.values(idpOptions).filter(function (item) { return item.type === 'saml'; }).map(function (item) { return { label: item.idp.displayName, value: item.idpName }; });
var oidcIdpSelectItems = Object.values(idpOptions).filter(function (item) { return item.type === 'oidc'; }).map(function (item) { return { label: item.idp.displayName, value: item.idpName }; });
var useBeforeUnloadNavigationBlock = function useBeforeUnloadNavigationBlock(shouldWarn) { p$3(function () { if (shouldWarn) {
    var handleBeforeUnload = function handleBeforeUnload(e) { e.preventDefault(); e.returnValue = true; };
    window.addEventListener('beforeunload', handleBeforeUnload);
    return function () { window.removeEventListener('beforeunload', handleBeforeUnload); };
} }, [shouldWarn]); };
var routerReducer = function routerReducer(state, action) { switch (action.type) {
    case 'navigate':
        if (state.blockersActive.size > 0) {
            return Object.assign(Object.assign({}, state), { pendingRoute: action.payload });
        }
        return Object.assign(Object.assign({}, state), { currentRoute: action.payload, pendingRoute: undefined });
    case 'addBlocker': {
        var blockersActive = new Set(state.blockersActive);
        blockersActive.add(action.payload.callback);
        return Object.assign(Object.assign({}, state), { blockersActive: blockersActive });
    }
    case 'removeBlocker': {
        var _blockersActive = new Set(state.blockersActive);
        _blockersActive["delete"](action.payload.callback);
        if (_blockersActive.size === 0 && state.pendingRoute) {
            return Object.assign(Object.assign({}, state), { blockersActive: _blockersActive, currentRoute: state.pendingRoute, pendingRoute: undefined });
        }
        return Object.assign(Object.assign({}, state), { blockersActive: _blockersActive });
    }
    case 'approveNavigation':
        if (!state.pendingRoute) {
            return state;
        }
        return Object.assign(Object.assign({}, state), { currentRoute: state.pendingRoute, pendingRoute: undefined });
    case 'cancelNavigation': return Object.assign(Object.assign({}, state), { pendingRoute: undefined });
    default: return state;
} };
var createRouter = function createRouter() { var initialState = { blockersActive: new Set() }; var StateContext = /*#__PURE__*/ wn.createContext({}); var ControllerContext = /*#__PURE__*/ wn.createContext({ navigate: noop, useBlockNavigation: function useBlockNavigation() { return { blocked: false, allowNavigation: noop, cancelNavigation: noop }; } }); var useRouterState = function useRouterState() { return wn.useContext(StateContext); }; var useRouterController = function useRouterController() { return wn.useContext(ControllerContext); }; var Router = function Router(_ref55) { var routeMap = _ref55.routeMap; var _useRouterState = useRouterState(), currentRoute = _useRouterState.currentRoute; var ChildComponent = routeMap[currentRoute.screen]; var childComponentProps = currentRoute.params; return ChildComponent ? /*#__PURE__*/ wn.createElement(ChildComponent, Object.assign({}, childComponentProps)) : null; }; var RouterProvider = function RouterProvider(_ref56) { var children = _ref56.children, initialRoute = _ref56.initialRoute; var _wn$useReducer = wn.useReducer(routerReducer, Object.assign(Object.assign({}, initialState), { currentRoute: initialRoute })), _wn$useReducer2 = _slicedToArray2(_wn$useReducer, 2), state = _wn$useReducer2[0], dispatch = _wn$useReducer2[1]; var navigate = T$2(function (destination) { dispatch({ type: 'navigate', payload: destination }); }, []); var routerState = F$3(function () { return { currentRoute: state.currentRoute }; }, [state.currentRoute]); var isNavigationBlocked = !!state.pendingRoute; var useBlockNavigation = T$2(function (enableBlock) { var callback = F$3(function () { return typeof enableBlock === 'function' ? enableBlock : function () { return enableBlock; }; }, [enableBlock]); p$3(function () { var shouldEnableBlock = callback(); if (shouldEnableBlock) {
    dispatch({ type: 'addBlocker', payload: { callback: callback } });
    return function () { dispatch({ type: 'removeBlocker', payload: { callback: callback } }); };
} }, [callback, enableBlock]); return { blocked: isNavigationBlocked, allowNavigation: function allowNavigation() { dispatch({ type: 'approveNavigation' }); }, cancelNavigation: function cancelNavigation() { dispatch({ type: 'cancelNavigation' }); } }; }, [isNavigationBlocked]); useBeforeUnloadNavigationBlock(state.blockersActive.size > 0); var controller = F$3(function () { return { navigate: navigate, useBlockNavigation: useBlockNavigation }; }, [navigate, useBlockNavigation]); return /*#__PURE__*/ wn.createElement(ControllerContext.Provider, { value: controller }, /*#__PURE__*/ wn.createElement(StateContext.Provider, { value: routerState }, children)); }; return { RouterProvider: RouterProvider, Router: Router, useRouterController: useRouterController, useRouterState: useRouterState }; };
var _createRouter = createRouter(), SsoRouterProvider = _createRouter.RouterProvider, SsoRouter = _createRouter.Router, useSsoRouterController = _createRouter.useRouterController;
var certItemRenderer = [{ title: 'Issuer', getValue: function getValue(item) { return /*#__PURE__*/ wn.createElement(Typography, { color: "secondary" }, 'issuer' in item ? item.issuer : 'Pending'); } }, { title: 'Created', getValue: function getValue(item) { return /*#__PURE__*/ wn.createElement(Typography, { color: "secondary" }, 'created_at' in item ? new Date(item.created_at).toLocaleString() : 'Pending'); } }, { title: 'Expires', getValue: function getValue(item) { return /*#__PURE__*/ wn.createElement(Typography, { color: "secondary" }, 'expires_at' in item ? new Date(item.expires_at).toLocaleString() : 'Pending'); } }];
var certKeyExtractor = function certKeyExtractor(item) { return 'certificate_id' in item ? item.certificate_id : 'new-certificate-id-pending'; };
var CertificateTable = function CertificateTable(_ref48) { var editing = _ref48.editing, localState = _ref48.localState, manualConfiguration = _ref48.manualConfiguration, remoteState = _ref48.remoteState, setLocalState = _ref48.setLocalState; var _a, _b, _c; var certificates = F$3(function () { if (!remoteState) {
    return undefined;
} var remoteCertificates = remoteState; if (!editing) {
    return remoteCertificates;
} return [].concat(_toConsumableArray2(remoteCertificates.filter(function (cert) { var _a; return !((_a = localState.deletedCertificateIds) === null || _a === void 0 ? void 0 : _a.includes(cert.certificate_id)); })), _toConsumableArray2(localState.certificate ? [{ certificate: localState.certificate, isPending: true }] : [])); }, [editing, localState, remoteState]); var viewCertModalProps = useModalState(); var _h41 = h$4(), _h42 = _slicedToArray2(_h41, 2), viewCertificateContents = _h42[0], setViewCertificateContents = _h42[1]; var persistPendingCertificate = useStateSliceSetter(setLocalState, 'certificate'); var addCertModalProps = useModalState(function () { persistPendingCertificate(pendingCert); }); var _h43 = h$4(''), _h44 = _slicedToArray2(_h43, 2), pendingCert = _h44[0], setPendingCert = _h44[1]; var remoteCertificateCount = (_a = remoteState === null || remoteState === void 0 ? void 0 : remoteState.length) !== null && _a !== void 0 ? _a : 0; var remoteCertificatePendingDeletionCount = (_c = (_b = localState.deletedCertificateIds) === null || _b === void 0 ? void 0 : _b.length) !== null && _c !== void 0 ? _c : 0; var minimumRequiredCertificates = 1; var maximumAllowedCertificates = 5; var canDeleteCertificates = remoteCertificateCount - remoteCertificatePendingDeletionCount > minimumRequiredCertificates; var canAddCertificate = editing && manualConfiguration && !localState.certificate && remoteCertificateCount - remoteCertificatePendingDeletionCount < maximumAllowedCertificates; return /*#__PURE__*/ wn.createElement(wn.Fragment, null, /*#__PURE__*/ wn.createElement(Modal, Object.assign({}, viewCertModalProps, { title: "View x509 Certificate", confirmButtonText: "Close", noCancelButton: true }), /*#__PURE__*/ wn.createElement(CopyableText, { whiteSpace: "pre-wrap" }, viewCertificateContents)), /*#__PURE__*/ wn.createElement(Modal, Object.assign({}, addCertModalProps, { title: "Add Certificate" }), /*#__PURE__*/ wn.createElement(Input, { label: "x509 Certificate", multiline: true, onChange: function onChange(value) { setPendingCert(value); }, placeholder: "Enter certificate", value: pendingCert })), /*#__PURE__*/ wn.createElement(ListEditor, { items: certificates !== null && certificates !== void 0 ? certificates : [], itemRenderer: certItemRenderer, rowKeyExtractor: certKeyExtractor, onAdd: function onAdd() { setPendingCert(''); addCertModalProps.open(); }, getItemActionProps: function getItemActionProps(item) { return { action: { text: item.isPending ? 'Edit' : 'View', onClick: function onClick() { if (item.isPending) {
                setPendingCert(item.certificate);
                addCertModalProps.open();
            }
            else {
                setViewCertificateContents(item.certificate);
                viewCertModalProps.open();
            } } }, warningAction: editing && (item.isPending || canDeleteCertificates) ? { text: 'Delete', onClick: function onClick() { if (item.isPending) {
                persistPendingCertificate(undefined);
            }
            else if ('certificate_id' in item) {
                setLocalState(function (state) { var _a; return Object.assign(Object.assign({}, state), { deletedCertificateIds: [].concat(_toConsumableArray2((_a = state.deletedCertificateIds) !== null && _a !== void 0 ? _a : []), [item.certificate_id]) }); });
            } } } : undefined }; }, hideAddButton: !canAddCertificate })); };
var DetailsSectionBody = function DetailsSectionBody(_ref57) { var taggedConnection = _ref57.connection, localState = _ref57.localState, remoteState = _ref57.remoteState, setLocalState = _ref57.setLocalState; var _a, _b; var _useSettingsContainer = useSettingsContainer(), editing = _useSettingsContainer.editing; var _ref58 = editing ? localState : remoteState, displayName = _ref58.displayName, identityProvider = _ref58.identityProvider; var handleDisplayNameChange = useStateSliceSetter(setLocalState, 'displayName'); var handleIdentityProviderChange = useStateSliceSetter(setLocalState, 'identityProvider'); var handleMetadataUrlChange = useStateSliceSetter(setLocalState, 'metadataUrl'); var handleSsoUrlChange = useStateSliceSetter(setLocalState, 'ssoUrl'); var handleEntityIdChange = useStateSliceSetter(setLocalState, 'entityId'); var handleClientIdChange = useStateSliceSetter(setLocalState, 'clientId'); var handleClientSecretChange = useStateSliceSetter(setLocalState, 'clientSecret'); var handleIssuerChange = useStateSliceSetter(setLocalState, 'issuer'); var handleIssuerDerivedValueChange = useStateSliceSetter(setLocalState, 'issuerDerivedValue'); var handleAuthorizationUrlChange = useStateSliceSetter(setLocalState, 'authorizationUrl'); var handleTokenUrlChange = useStateSliceSetter(setLocalState, 'tokenUrl'); var handleUserInfoUrlChange = useStateSliceSetter(setLocalState, 'userInfoUrl'); var handleJwksUrlChange = useStateSliceSetter(setLocalState, 'jwksUrl'); var _getIdpAndConnectionI2 = getIdpAndConnectionInfo(taggedConnection), connection = _getIdpAndConnectionI2.connection, idp = _getIdpAndConnectionI2.idp, type = _getIdpAndConnectionI2.type; var idpRequiresManualConfig = type === 'saml' && idp.metadataUrlLabel === false; var manualConfiguration = localState.manualConfiguration || idpRequiresManualConfig; var setManualConfiguration = useStateSliceSetter(setLocalState, 'manualConfiguration'); return /*#__PURE__*/ wn.createElement(FlexBox, { flexDirection: "column", gap: 2 }, /*#__PURE__*/ wn.createElement(SettingsSection, { title: "Display Name" }, editing ? ( /*#__PURE__*/wn.createElement(Input, { value: displayName, onChange: handleDisplayNameChange })) : ( /*#__PURE__*/wn.createElement(Typography, null, displayName))), /*#__PURE__*/ wn.createElement(SettingsSection, { title: "IdP" }, editing ? ( /*#__PURE__*/wn.createElement(Select, { placeholder: "Select", selectItems: type === 'saml' ? samlIdpSelectItems : oidcIdpSelectItems, value: identityProvider, onChange: handleIdentityProviderChange })) : ( /*#__PURE__*/wn.createElement(Typography, null, idp.displayName))), /*#__PURE__*/ wn.createElement(SettingsSection, { title: "App Values", tooltipText: "Copy these App (Service Provider) Values into your IdP." }, /*#__PURE__*/ wn.createElement(SettingsList, null, /*#__PURE__*/ wn.createElement(SettingsListItem, { title: "Connection ID" }, /*#__PURE__*/ wn.createElement(CopyableText, null, connection.connection_id)), /*#__PURE__*/ wn.createElement(AppDetails, { connection: connection }))), /*#__PURE__*/ wn.createElement(SettingsSection, { title: "IdP Values" }, /*#__PURE__*/ wn.createElement(SettingsList, null, type === 'saml' && ( /*#__PURE__*/wn.createElement(wn.Fragment, null, editing && !manualConfiguration ? ( /*#__PURE__*/wn.createElement(SettingsListItem, { title: idp.metadataUrlLabel }, /*#__PURE__*/ wn.createElement(Input, { placeholder: "Enter ".concat(idp.metadataUrlLabel), value: localState.metadataUrl || '', onChange: handleMetadataUrlChange }))) : ( /*#__PURE__*/wn.createElement(wn.Fragment, null, /*#__PURE__*/ wn.createElement(SettingsListItem, { title: idp.idpSsoUrlLabel }, editing ? ( /*#__PURE__*/wn.createElement(Input, { placeholder: "Enter ".concat(idp.idpSsoUrlLabel), value: localState.ssoUrl || '', onChange: handleSsoUrlChange })) : ( /*#__PURE__*/wn.createElement(Typography, { color: "secondary" }, connection.idp_sso_url || '–'))), /*#__PURE__*/ wn.createElement(SettingsListItem, { title: idp.idpEntityIdLabel }, editing ? ( /*#__PURE__*/wn.createElement(Input, { placeholder: "Enter ".concat(idp.idpEntityIdLabel), value: localState.entityId || '', onChange: handleEntityIdChange })) : ( /*#__PURE__*/wn.createElement(Typography, { color: "secondary" }, connection.idp_entity_id || '–'))))), /*#__PURE__*/ wn.createElement(SettingsListItem, { title: idp.x509CertificateLabel }, /*#__PURE__*/ wn.createElement(CertificateTable, { editing: editing, remoteState: connection.verification_certificates, localState: localState, setLocalState: setLocalState, manualConfiguration: manualConfiguration })), editing && !idpRequiresManualConfig && ( /*#__PURE__*/wn.createElement(Button, { compact: true, variant: "ghost", onClick: function onClick() { setManualConfiguration(!manualConfiguration); } }, manualConfiguration ? "Configure using ".concat(idp.metadataUrlLabel) : 'Configure manually')))), type === 'oidc' && ( /*#__PURE__*/wn.createElement(wn.Fragment, null, /*#__PURE__*/ wn.createElement(SettingsListItem, { title: idp.clientIdLabel }, editing ? ( /*#__PURE__*/wn.createElement(Input, { placeholder: "Enter ".concat(idp.clientIdLabel), value: localState.clientId || '', onChange: handleClientIdChange })) : ( /*#__PURE__*/wn.createElement(Typography, { color: "secondary" }, connection.client_id || '–'))), /*#__PURE__*/ wn.createElement(SettingsListItem, { title: idp.clientSecretLabel }, editing ? ( /*#__PURE__*/wn.createElement(Input, { placeholder: "Enter ".concat(idp.clientSecretLabel), value: localState.clientSecret || '', onChange: handleClientSecretChange })) : ( /*#__PURE__*/wn.createElement(Typography, { color: "secondary" }, connection.client_secret || '–'))), idp.issuerDerivedLabel ? ( /*#__PURE__*/wn.createElement(SettingsListItem, { title: idp.issuerDerivedLabel }, editing ? ( /*#__PURE__*/wn.createElement(Input, { placeholder: "Enter ".concat(idp.issuerDerivedLabel), value: localState.issuerDerivedValue || '', onChange: handleIssuerDerivedValueChange })) : ( /*#__PURE__*/wn.createElement(Typography, { color: "secondary" }, ((_a = idp.extractIssuerFromInput) === null || _a === void 0 ? void 0 : _a.call(idp, connection.issuer)) || '–')))) : ( /*#__PURE__*/wn.createElement(SettingsListItem, { title: idp.issuerLabel }, editing ? ( /*#__PURE__*/wn.createElement(Input, { placeholder: "URL", value: localState.issuer || '', onChange: handleIssuerChange })) : ( /*#__PURE__*/wn.createElement(Typography, { color: "secondary" }, connection.issuer || '–')))), editing && ( /*#__PURE__*/wn.createElement(wn.Fragment, null, manualConfiguration && ( /*#__PURE__*/wn.createElement(wn.Fragment, null, /*#__PURE__*/ wn.createElement(SettingsListItem, { title: "Authorization URL" }, /*#__PURE__*/ wn.createElement(Input, { placeholder: "Enter Authorization URL", value: localState.authorizationUrl || '', onChange: handleAuthorizationUrlChange })), /*#__PURE__*/ wn.createElement(SettingsListItem, { title: "Token URL" }, /*#__PURE__*/ wn.createElement(Input, { placeholder: "Enter Token URL", value: localState.tokenUrl || '', onChange: handleTokenUrlChange })), /*#__PURE__*/ wn.createElement(SettingsListItem, { title: "User info URL" }, /*#__PURE__*/ wn.createElement(Input, { placeholder: "Enter User info URL", value: localState.userInfoUrl || '', onChange: handleUserInfoUrlChange })), /*#__PURE__*/ wn.createElement(SettingsListItem, { title: "JWKS URL" }, /*#__PURE__*/ wn.createElement(Input, { placeholder: "Enter JWKS URL", value: localState.jwksUrl || '', onChange: handleJwksUrlChange })))), /*#__PURE__*/ wn.createElement(Button, { compact: true, variant: "ghost", onClick: function onClick() { setManualConfiguration(!manualConfiguration); } }, manualConfiguration ? "Configure using ".concat((_b = idp.issuerDerivedLabel) !== null && _b !== void 0 ? _b : idp.issuerLabel) : 'Configure manually'))))))), type === 'saml' && ( /*#__PURE__*/wn.createElement(SettingsSection, { title: idp.attributeMappingLabel }, /*#__PURE__*/ wn.createElement(AttributeMappingTable, { editing: editing, localState: localState, remoteState: remoteState, setLocalState: setLocalState })))); };
var DetailsSection = function DetailsSection(_ref59) { var canUpdateConnection = _ref59.canUpdateConnection, connectionProp = _ref59.connection; var _getIdpAndConnectionI3 = getIdpAndConnectionInfo(connectionProp), idp = _getIdpAndConnectionI3.idp, connection = _getIdpAndConnectionI3.connection, type = _getIdpAndConnectionI3.type; var remoteState = F$3(function () { var _a; return { displayName: connection.display_name, identityProvider: connection.identity_provider, attributeMapping: 'attribute_mapping' in connection ? connection.attribute_mapping : {}, manualConfiguration: false, authorizationUrl: 'authorization_url' in connection ? connection.authorization_url : undefined, clientId: 'client_id' in connection ? connection.client_id : undefined, clientSecret: 'client_secret' in connection ? connection.client_secret : undefined, entityId: 'idp_entity_id' in connection ? connection.idp_entity_id : undefined, issuer: 'issuer' in connection ? connection.issuer : undefined, issuerDerivedValue: type === 'oidc' ? (_a = idp.extractIssuerFromInput) === null || _a === void 0 ? void 0 : _a.call(idp, connection.issuer) : undefined, jwksUrl: 'jwks_url' in connection ? connection.jwks_url : undefined, ssoUrl: 'idp_sso_url' in connection ? connection.idp_sso_url : undefined, tokenUrl: 'token_url' in connection ? connection.token_url : undefined, userInfoUrl: 'userinfo_url' in connection ? connection.userinfo_url : undefined }; }, [connection, idp, type]); var _useFormState = useFormState({ remoteState: remoteState }), localState = _useFormState.localState, setLocalState = _useFormState.setLocalState, editing = _useFormState.editing, handleSetEditing = _useFormState.handleSetEditing; var _useMutateSsoConnecti = useMutateSsoConnection(type), mutate = _useMutateSsoConnecti.mutate; var _useDeleteSsoConnecti2 = useDeleteSsoConnectionCert(), deleteCertificate = _useDeleteSsoConnecti2.mutate; var _useMutateSsoConnecti2 = useMutateSsoConnectionByUrl(), mutateByUrl = _useMutateSsoConnecti2.mutate; var handleSave = T$2(function () { return __awaiter(void 0, void 0, void 0, /*#__PURE__*/ _regeneratorRuntime().mark(function _callee7() { var _a, baseOptions, mutatedProperties, idpRequiresManualConfig, isManualConfig, _iterator, _step, _loop, _ret, getIssuer, issuer; return _regeneratorRuntime().wrap(function _callee7$(_context8) { while (1)
    switch (_context8.prev = _context8.next) {
        case 0:
            baseOptions = { connection_id: connection.connection_id };
            mutatedProperties = {};
            if (remoteState.displayName !== localState.displayName) {
                mutatedProperties.display_name = localState.displayName;
            }
            if (remoteState.identityProvider !== localState.identityProvider) {
                mutatedProperties.identity_provider = localState.identityProvider;
            }
            idpRequiresManualConfig = type === 'saml' && idp.metadataUrlLabel === false;
            isManualConfig = localState.manualConfiguration || idpRequiresManualConfig;
            if (!(type === 'saml')) {
                _context8.next = 39;
                break;
            }
            if (!((_a = localState.deletedCertificateIds) === null || _a === void 0 ? void 0 : _a.length)) {
                _context8.next = 27;
                break;
            }
            _iterator = _createForOfIteratorHelper(localState.deletedCertificateIds);
            _context8.prev = 9;
            _loop = /*#__PURE__*/ _regeneratorRuntime().mark(function _loop() { var certificateId; return _regeneratorRuntime().wrap(function _loop$(_context7) { while (1)
                switch (_context7.prev = _context7.next) {
                    case 0:
                        certificateId = _step.value;
                        _context7.prev = 1;
                        _context7.next = 4;
                        return deleteCertificate({ connection_id: connection.connection_id, certificate_id: certificateId });
                    case 4:
                        _context7.next = 11;
                        break;
                    case 6:
                        _context7.prev = 6;
                        _context7.t0 = _context7["catch"](1);
                        if (!(_context7.t0 instanceof StytchSDKAPIError && _context7.t0.error_type === 'sso_verification_key_not_found')) {
                            _context7.next = 10;
                            break;
                        }
                        return _context7.abrupt("return", { v: void 0 });
                    case 10: throw _context7.t0;
                    case 11: setLocalState(function (state) { var _a; return Object.assign(Object.assign({}, state), { deletedCertificateIds: (_a = state.deletedCertificateIds) === null || _a === void 0 ? void 0 : _a.filter(function (id) { return id !== certificateId; }) }); });
                    case 12:
                    case "end": return _context7.stop();
                } }, _loop, null, [[1, 6]]); });
            _iterator.s();
        case 12:
            if ((_step = _iterator.n()).done) {
                _context8.next = 19;
                break;
            }
            return _context8.delegateYield(_loop(), "t0", 14);
        case 14:
            _ret = _context8.t0;
            if (!_ret) {
                _context8.next = 17;
                break;
            }
            return _context8.abrupt("return", _ret.v);
        case 17:
            _context8.next = 12;
            break;
        case 19:
            _context8.next = 24;
            break;
        case 21:
            _context8.prev = 21;
            _context8.t1 = _context8["catch"](9);
            _iterator.e(_context8.t1);
        case 24:
            _context8.prev = 24;
            _iterator.f();
            return _context8.finish(24);
        case 27:
            if (!isManualConfig) {
                _context8.next = 33;
                break;
            }
            if (localState.ssoUrl !== remoteState.ssoUrl) {
                mutatedProperties.idp_sso_url = localState.ssoUrl;
            }
            if (localState.entityId !== remoteState.entityId) {
                mutatedProperties.idp_entity_id = localState.entityId;
            }
            if (localState.certificate) {
                mutatedProperties.x509_certificate = localState.certificate;
            }
            _context8.next = 36;
            break;
        case 33:
            if (!localState.metadataUrl) {
                _context8.next = 36;
                break;
            }
            _context8.next = 36;
            return mutateByUrl({ connection_id: connection.connection_id, metadata_url: localState.metadataUrl });
        case 36:
            if (!deepEqual(remoteState.attributeMapping, localState.attributeMapping)) {
                mutatedProperties.attribute_mapping = localState.attributeMapping;
            }
            _context8.next = 40;
            break;
        case 39: if (type === 'oidc') {
            if (localState.clientId !== remoteState.clientId) {
                mutatedProperties.client_id = localState.clientId;
            }
            if (localState.clientSecret !== remoteState.clientSecret) {
                mutatedProperties.client_secret = localState.clientSecret;
            }
            if (isManualConfig) {
                if (localState.authorizationUrl !== remoteState.authorizationUrl) {
                    mutatedProperties.authorization_url = localState.authorizationUrl;
                }
                if (localState.tokenUrl !== remoteState.tokenUrl) {
                    mutatedProperties.token_url = localState.tokenUrl;
                }
                if (localState.userInfoUrl !== remoteState.userInfoUrl) {
                    mutatedProperties.userinfo_url = localState.userInfoUrl;
                }
                if (localState.jwksUrl !== remoteState.jwksUrl) {
                    mutatedProperties.jwks_url = localState.jwksUrl;
                }
            }
            getIssuer = function getIssuer() { var _a; if (localState.issuerDerivedValue !== undefined) {
                if (!localState.issuerDerivedValue && !remoteState.issuerDerivedValue) {
                    return undefined;
                }
                return (_a = idp.transformInputToIssuer) === null || _a === void 0 ? void 0 : _a.call(idp, localState.issuerDerivedValue);
            } return localState.issuer; };
            issuer = getIssuer();
            if (issuer !== undefined && issuer !== remoteState.issuer) {
                mutatedProperties.issuer = issuer;
            }
        }
        case 40:
            if (!(Object.keys(mutatedProperties).length > 0)) {
                _context8.next = 43;
                break;
            }
            _context8.next = 43;
            return mutate(Object.assign(Object.assign({}, baseOptions), mutatedProperties));
        case 43:
        case "end": return _context8.stop();
    } }, _callee7, null, [[9, 21, 24, 27]]); })); }, [connection.connection_id, deleteCertificate, idp, localState.attributeMapping, localState.authorizationUrl, localState.certificate, localState.clientId, localState.clientSecret, localState.deletedCertificateIds, localState.displayName, localState.entityId, localState.identityProvider, localState.issuer, localState.issuerDerivedValue, localState.jwksUrl, localState.manualConfiguration, localState.metadataUrl, localState.ssoUrl, localState.tokenUrl, localState.userInfoUrl, mutate, mutateByUrl, remoteState.attributeMapping, remoteState.authorizationUrl, remoteState.clientId, remoteState.clientSecret, remoteState.displayName, remoteState.entityId, remoteState.identityProvider, remoteState.issuer, remoteState.issuerDerivedValue, remoteState.jwksUrl, remoteState.ssoUrl, remoteState.tokenUrl, remoteState.userInfoUrl, setLocalState, type]); var _useSsoRouterControll = useSsoRouterController(), useBlockNavigation = _useSsoRouterControll.useBlockNavigation; return /*#__PURE__*/ wn.createElement(SettingsContainer, { title: "Details", hasCTA: canUpdateConnection, onSave: handleSave, useBlockNavigation: useBlockNavigation, editing: editing, setEditing: handleSetEditing }, /*#__PURE__*/ wn.createElement(DetailsSectionBody, { connection: connection, localState: localState, remoteState: remoteState, setLocalState: setLocalState })); };
var useMutateOrganization = function useMutateOrganization() { var _useSWRConfig3 = useSWRConfig(), mutateSWR = _useSWRConfig3.mutate; var client = useStytchClient(); return useMutateWithToast(T$2(function (properties) { return __awaiter(void 0, void 0, void 0, /*#__PURE__*/ _regeneratorRuntime().mark(function _callee9() { var _a, organizationId; return _regeneratorRuntime().wrap(function _callee9$(_context10) { while (1)
    switch (_context10.prev = _context10.next) {
        case 0:
            organizationId = (_a = client.organization.getSync()) === null || _a === void 0 ? void 0 : _a.organization_id;
            _context10.next = 3;
            return mutateSWR(organizationGetKey(organizationId), function () { return __awaiter(void 0, void 0, void 0, /*#__PURE__*/ _regeneratorRuntime().mark(function _callee8() { var resp; return _regeneratorRuntime().wrap(function _callee8$(_context9) { while (1)
                switch (_context9.prev = _context9.next) {
                    case 0:
                        _context9.next = 2;
                        return client.organization.update(properties);
                    case 2:
                        resp = _context9.sent;
                        return _context9.abrupt("return", resp.organization);
                    case 4:
                    case "end": return _context9.stop();
                } }, _callee8); })); }, { optimisticData: function optimisticData(org) { return Object.assign(Object.assign({}, org), properties); }, rollbackOnError: true, populateCache: true, revalidate: false });
        case 3:
        case "end": return _context10.stop();
    } }, _callee9); })); }, [client.organization, mutateSWR])); };
var SetDefaultConfirmModal = function SetDefaultConfirmModal(_a) { var connectionName = _a.connectionName, defaultConnectionName = _a.defaultConnectionName, modalProps = __rest(_a, ["connectionName", "defaultConnectionName"]); return /*#__PURE__*/ wn.createElement(Modal, Object.assign({}, modalProps, { title: "Set ".concat(connectionName || '', " as default?"), confirmButtonText: "Set as default" }), /*#__PURE__*/ wn.createElement(Typography, null, "This will be the default SSO connection for your entire organization. The default connection ID is used to initiate the SSO authentication flow if the connection ID is missing and you only specify the org ID or slug."), defaultConnectionName && ( /*#__PURE__*/wn.createElement(Typography, { color: "error" }, "This will replace ", defaultConnectionName, " as the default connection for your organization."))); };
var useMutateDefaultConnection = function useMutateDefaultConnection() { var _useMutateOrganizatio = useMutateOrganization(), mutate = _useMutateOrganizatio.mutate; var setDefault = function setDefault(_ref60) { var connectionId = _ref60.connectionId, connectionName = _ref60.connectionName; return mutate({ sso_default_connection_id: connectionId }, { errorMessage: "Failed to set ".concat(connectionName, " as default connection") }); }; return { setDefault: setDefault }; };
var useSetDefaultConnection = function useSetDefaultConnection(_ref61) { var defaultConnectionName = _ref61.defaultConnectionName; var _h45 = h$4(), _h46 = _slicedToArray2(_h45, 2), connection = _h46[0], setConnection = _h46[1]; var _h47 = h$4(defaultConnectionName), _h48 = _slicedToArray2(_h47, 2), cachedDefaultConnectionName = _h48[0], setCachedDefaultConnectionName = _h48[1]; var _useToggleState2 = useToggleState(), isOpen = _useToggleState2.isOpen, open = _useToggleState2.open, close = _useToggleState2.close; var handleRequestSetDefault = T$2(function (connection) { setConnection(connection); setCachedDefaultConnectionName(defaultConnectionName); open(); }, [defaultConnectionName, open]); var _useMutateDefaultConn = useMutateDefaultConnection(), setDefault = _useMutateDefaultConn.setDefault; var confirm = function confirm() { return __awaiter(void 0, void 0, void 0, /*#__PURE__*/ _regeneratorRuntime().mark(function _callee10() { return _regeneratorRuntime().wrap(function _callee10$(_context11) { while (1)
    switch (_context11.prev = _context11.next) {
        case 0:
            if (!connection) {
                _context11.next = 3;
                break;
            }
            _context11.next = 3;
            return setDefault({ connectionId: connection.id, connectionName: connection.displayName });
        case 3: return _context11.abrupt("return", Promise.resolve());
        case 4:
        case "end": return _context11.stop();
    } }, _callee10); })); }; return { handleRequestSetDefault: handleRequestSetDefault, modalProps: { connectionName: connection === null || connection === void 0 ? void 0 : connection.displayName, defaultConnectionName: cachedDefaultConnectionName, isOpen: isOpen, close: close, confirm: confirm } }; };
var OrganizationUpdatesSectionBody = function OrganizationUpdatesSectionBody(_ref62) { var connection = _ref62.connection, defaultConnectionName = _ref62.defaultConnectionName, orgJitProvisioningPolicy = _ref62.orgJitProvisioningPolicy, localState = _ref62.localState, setLocalState = _ref62.setLocalState, remoteState = _ref62.remoteState; var _useSettingsContainer2 = useSettingsContainer(), editing = _useSettingsContainer2.editing; var _useSetDefaultConnect = useSetDefaultConnection({ defaultConnectionName: defaultConnectionName }), handleRequestSetDefault = _useSetDefaultConnect.handleRequestSetDefault, modalProps = _useSetDefaultConnect.modalProps; var _ref63 = editing ? localState : remoteState, isDefaultConnection = _ref63.isDefaultConnection, jitProvisioningEnabled = _ref63.jitProvisioningEnabled; var _useRbac = useRbac('stytch.organization', 'update.settings.default-sso-connection'), canSetDefaultConnection = _useRbac.data; var _useRbac2 = useRbac('stytch.organization', 'update.settings.sso-jit-provisioning'), canSetSsoJitProvisioning = _useRbac2.data; return /*#__PURE__*/ wn.createElement(FlexBox, { flexDirection: "column", gap: 2 }, editing && ( /*#__PURE__*/wn.createElement(SetDefaultConfirmModal, Object.assign({}, modalProps, { confirm: function confirm() { setLocalState(function (state) { return Object.assign(Object.assign({}, state), { isDefaultConnection: true }); }); return Promise.resolve(); } }))), /*#__PURE__*/ wn.createElement(SettingsSection, { title: "Set as default SSO Connection", tooltipText: "The default connection ID is used to initiate the SSO authentication flow if the connection ID is missing and you only specify the org ID or slug. You can only have one default connection. " }, editing && !remoteState.isDefaultConnection && canSetDefaultConnection ? isDefaultConnection ? ( /*#__PURE__*/wn.createElement(wn.Fragment, null, /*#__PURE__*/ wn.createElement(Typography, null, "This connection will be set as the default upon saving."), /*#__PURE__*/ wn.createElement(Button, { variant: "ghost", compact: true, onClick: function onClick() { setLocalState(function (state) { return Object.assign(Object.assign({}, state), { isDefaultConnection: false }); }); } }, "Cancel"))) : ( /*#__PURE__*/wn.createElement(wn.Fragment, null, /*#__PURE__*/ wn.createElement(Typography, null, "This will replace your existing default SSO connection."), /*#__PURE__*/ wn.createElement(Button, { variant: "ghost", compact: true, onClick: function onClick() { handleRequestSetDefault({ displayName: connection.display_name, id: connection.connection_id }); } }, "Set as default"))) : isDefaultConnection ? ( /*#__PURE__*/wn.createElement(Typography, null, "This connection is already set as the default.")) : ( /*#__PURE__*/wn.createElement(Typography, null, "This connection is not set as the default."))), /*#__PURE__*/ wn.createElement(SettingsSection, { title: "JIT provisioning via this connection", tooltipText: "If enabled, users who successfully authenticate through this SSO Connection will be automatically granted an account if they do not already exist within your organization." }, editing && canSetSsoJitProvisioning && (orgJitProvisioningPolicy === 'RESTRICTED' || orgJitProvisioningPolicy === 'NOT_ALLOWED') ? jitProvisioningEnabled ? ( /*#__PURE__*/wn.createElement(Button, { variant: "ghost", compact: true, onClick: function onClick() { setLocalState(function (state) { return Object.assign(Object.assign({}, state), { jitProvisioningEnabled: false }); }); }, warning: true }, "Disable")) : ( /*#__PURE__*/wn.createElement(Button, { variant: "ghost", compact: true, onClick: function onClick() { setLocalState(function (state) { return Object.assign(Object.assign({}, state), { jitProvisioningEnabled: true }); }); } }, "Enable")) : ( /*#__PURE__*/wn.createElement(Typography, null, orgJitProvisioningPolicy === 'ALL_ALLOWED' ? 'Enabled at the organization level for all SSO connections.' : !jitProvisioningEnabled || orgJitProvisioningPolicy === 'NOT_ALLOWED' ? 'Disabled' : 'Enabled')))); };
var OrganizationUpdatesSection = function OrganizationUpdatesSection(_ref64) { var connection = _ref64.connection, defaultConnectionName = _ref64.defaultConnectionName, isDefaultConnection = _ref64.isDefaultConnection; var _useRbac3 = useRbac('stytch.organization', 'update.settings.default-sso-connection'), canSetDefaultConnection = _useRbac3.data; var _useRbac4 = useRbac('stytch.organization', 'update.settings.sso-jit-provisioning'), canSetSsoJitProvisioning = _useRbac4.data; var _useOrgInfo = useOrgInfo(), organization = _useOrgInfo.data; var orgJitProvisioningPolicy = organization === null || organization === void 0 ? void 0 : organization.sso_jit_provisioning; var remoteState = F$3(function () { return { isDefaultConnection: isDefaultConnection, jitProvisioningEnabled: !!(orgJitProvisioningPolicy === 'ALL_ALLOWED' || orgJitProvisioningPolicy === 'RESTRICTED' && (organization === null || organization === void 0 ? void 0 : organization.sso_jit_provisioning_allowed_connections.includes(connection.connection_id))) }; }, [connection.connection_id, isDefaultConnection, orgJitProvisioningPolicy, organization === null || organization === void 0 ? void 0 : organization.sso_jit_provisioning_allowed_connections]); var _useFormState2 = useFormState({ remoteState: remoteState }), localState = _useFormState2.localState, setLocalState = _useFormState2.setLocalState, editing = _useFormState2.editing, handleSetEditing = _useFormState2.handleSetEditing; var _useMutateDefaultConn2 = useMutateDefaultConnection(), setDefault = _useMutateDefaultConn2.setDefault; var _useMutateOrganizatio2 = useMutateOrganization(), mutate = _useMutateOrganizatio2.mutate; var handleSave = T$2(function () { return __awaiter(void 0, void 0, void 0, /*#__PURE__*/ _regeneratorRuntime().mark(function _callee11() { var _a, _b, promises, allowedConnections, _allowedConnections; return _regeneratorRuntime().wrap(function _callee11$(_context12) { while (1)
    switch (_context12.prev = _context12.next) {
        case 0:
            if (organization) {
                _context12.next = 2;
                break;
            }
            return _context12.abrupt("return", Promise.reject(new Error('Failed to save changes.')));
        case 2:
            promises = [];
            if (!remoteState.isDefaultConnection && localState.isDefaultConnection) {
                promises.push(setDefault({ connectionId: connection.connection_id, connectionName: connection.display_name }));
            }
            if (localState.jitProvisioningEnabled && !remoteState.jitProvisioningEnabled) {
                if (orgJitProvisioningPolicy === 'NOT_ALLOWED' || orgJitProvisioningPolicy === 'RESTRICTED') {
                    allowedConnections = new Set((_a = organization.sso_jit_provisioning_allowed_connections) !== null && _a !== void 0 ? _a : []);
                    allowedConnections.add(connection.connection_id);
                    promises.push(mutate({ sso_jit_provisioning: 'RESTRICTED', sso_jit_provisioning_allowed_connections: Array.from(allowedConnections) }, { errorMessage: 'Failed to enable JIT provisioning.' }));
                }
            }
            if (!localState.jitProvisioningEnabled && remoteState.jitProvisioningEnabled) {
                if (orgJitProvisioningPolicy === 'RESTRICTED') {
                    _allowedConnections = new Set((_b = organization.sso_jit_provisioning_allowed_connections) !== null && _b !== void 0 ? _b : []);
                    _allowedConnections["delete"](connection.connection_id);
                    promises.push(mutate({ sso_jit_provisioning: _allowedConnections.size === 0 ? 'NOT_ALLOWED' : 'RESTRICTED', sso_jit_provisioning_allowed_connections: Array.from(_allowedConnections) }, { errorMessage: 'Failed to disable JIT provisioning.' }));
                }
            }
            return _context12.abrupt("return", Promise.all(promises).then(function () { }));
        case 7:
        case "end": return _context12.stop();
    } }, _callee11); })); }, [connection.connection_id, connection.display_name, localState.isDefaultConnection, localState.jitProvisioningEnabled, mutate, orgJitProvisioningPolicy, organization, remoteState.isDefaultConnection, remoteState.jitProvisioningEnabled, setDefault]); var _useSsoRouterControll2 = useSsoRouterController(), useBlockNavigation = _useSsoRouterControll2.useBlockNavigation; return /*#__PURE__*/ wn.createElement(SettingsContainer, { title: "Organization updates", hasCTA: canSetDefaultConnection || canSetSsoJitProvisioning, onSave: handleSave, useBlockNavigation: useBlockNavigation, editing: editing, setEditing: handleSetEditing }, /*#__PURE__*/ wn.createElement(OrganizationUpdatesSectionBody, { connection: connection, defaultConnectionName: defaultConnectionName, orgJitProvisioningPolicy: orgJitProvisioningPolicy, remoteState: remoteState, localState: localState, setLocalState: setLocalState })); };
var ChevronRight = {};
var _interopRequireDefault$1 = interopRequireDefaultExports;
var _interopRequireWildcard$1 = interopRequireWildcardExports;
Object.defineProperty(ChevronRight, "__esModule", { value: true });
var default_1$1 = ChevronRight["default"] = void 0;
var React$1 = _interopRequireWildcard$1(require$$2);
var _createSvgIcon$1 = _interopRequireDefault$1(requireCreateSvgIcon());
var _default$1 = (0, _createSvgIcon$1["default"])(/*#__PURE__*/ React$1.createElement("path", { d: "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" }), 'ChevronRight');
default_1$1 = ChevronRight["default"] = _default$1;
var TABLE_CONTAINER_ID = 'table-container';
var EXPANDED_CONTENT_CLASSNAME = 'expanded-content';
var leftAlignExpandedContent = function leftAlignExpandedContent(containerId) { var container = document.getElementById(containerId); var expandedContentDivs = document.querySelectorAll("#".concat(containerId, " .").concat(EXPANDED_CONTENT_CLASSNAME)); expandedContentDivs.forEach(function (expandedContent) { expandedContent.style.marginLeft = (container === null || container === void 0 ? void 0 : container.scrollLeft) + 'px'; }); };
var makeTableStyles = makeStylesFactory(function (theme) { return { tableCell: { padding: theme.spacing(0.5, 1), minWidth: 80 }, tableHeader: {}, tableWithExpandedContent: { '& tr td:nth-child(2), & tr th:nth-child(2)': { paddingLeft: theme.spacing(0) } }, tableWithActions: { width: 'calc(100% - 2px)' }, tableActionsCell: { position: 'sticky', right: 0, width: '1%' }, tableHeaderActionsCell: {}, cellWithExpandedContent: { borderBottom: 'none' }, expandMoreCell: { padding: theme.spacing(0, 0, 0, 1), width: theme.spacing(4.5), minWidth: 'unset' }, openChevron: { transform: 'rotate(90deg)' }, expandedRow: {}, expandedContentCell: { padding: 0 }, expandedContentContainer: { padding: theme.spacing(0.5, 2, 1) }, clickable: { cursor: 'pointer' } }; });
var TableCell = function TableCell(_a) { var children = _a.children, className = _a.className, classes = _a.classes, Typography = _a.TypographyComponent, props = __rest(_a, ["children", "className", "classes", "TypographyComponent"]); var value = getTableCellValue(children); return /*#__PURE__*/ wn.createElement(MUITableCell, Object.assign({ className: C(classes.tableCell, className) }, props), typeof value === 'string' ? /*#__PURE__*/ wn.createElement(Typography, null, value) : children); };
var TableRow = function TableRow(_ref65) { var id = _ref65.id, ExpandedContent = _ref65.ExpandedContent, item = _ref65.item, itemRenderer = _ref65.itemRenderer, onRowClick = _ref65.onRowClick, tableWidth = _ref65.tableWidth, tableContainerId = _ref65.tableContainerId, getItemActionProps = _ref65.getItemActionProps, classes = _ref65.classes, TableActions = _ref65.TableActionsComponent, Typography = _ref65.TypographyComponent; var _h49 = h$4(false), _h50 = _slicedToArray2(_h49, 2), open = _h50[0], setOpen = _h50[1]; p$3(function () { if (open) {
    leftAlignExpandedContent(tableContainerId);
} }, [open, tableContainerId]); var toggleOpen = function toggleOpen(e) { e.stopPropagation(); setOpen(function (prev) { return !prev; }); }; var handleRowClick = function handleRowClick(e) { if (onRowClick) {
    onRowClick(id);
}
else if (ExpandedContent) {
    toggleOpen(e);
} }; return /*#__PURE__*/ wn.createElement(wn.Fragment, null, /*#__PURE__*/ wn.createElement(MUITableRow, { className: C(_defineProperty2(_defineProperty2({}, classes.expandedRow, open), classes.clickable, !!onRowClick)), onClick: handleRowClick, style: { width: 'fit-content' } }, ExpandedContent && ( /*#__PURE__*/wn.createElement(TableCell, { TypographyComponent: Typography, className: C(classes.expandMoreCell, _defineProperty2({}, classes.cellWithExpandedContent, !!ExpandedContent)), classes: classes }, /*#__PURE__*/ wn.createElement(IconButton$1, { "aria-label": "expand row", onClick: toggleOpen, size: "small" }, /*#__PURE__*/ wn.createElement(default_1$1, { className: open ? classes.openChevron : '' })))), itemRenderer.map(function (column) { return /*#__PURE__*/ wn.createElement(TableCell, { TypographyComponent: Typography, className: C(_defineProperty2({}, classes.cellWithExpandedContent, !!ExpandedContent)), classes: classes, key: "row-".concat(id, "-col-").concat(String(column.title)) }, column.getValue(item)); }), getItemActionProps && ( /*#__PURE__*/wn.createElement(TableCell, { TypographyComponent: Typography, className: C(classes.tableCell, classes.tableActionsCell), classes: classes }, /*#__PURE__*/ wn.createElement(TableActions, Object.assign({}, getItemActionProps(item)))))), ExpandedContent && ( /*#__PURE__*/wn.createElement(MUITableRow, null, /*#__PURE__*/ wn.createElement(TableCell, { TypographyComponent: Typography, className: C(classes.expandedRow, classes.expandedContentCell), classes: classes, colSpan: itemRenderer.length + 1 }, /*#__PURE__*/ wn.createElement(Collapse$1, { "in": open, timeout: "auto", unmountOnExit: true }, /*#__PURE__*/ wn.createElement("div", { className: "".concat(EXPANDED_CONTENT_CLASSNAME, " ").concat(classes.expandedContentContainer), style: { width: tableWidth } }, /*#__PURE__*/ wn.createElement(ExpandedContent, { data: item }))))))); };
var TableCore = function TableCore(_ref66) { var ExpandedContent = _ref66.ExpandedContent, itemRenderer = _ref66.itemRenderer, items = _ref66.items, rowKeyExtractor = _ref66.rowKeyExtractor, onRowClick = _ref66.onRowClick, getItemActionProps = _ref66.getItemActionProps, classes = _ref66.classes, TableActions = _ref66.TableActionsComponent, Typography = _ref66.TypographyComponent; var containerId = useShortId(TABLE_CONTAINER_ID); var _h51 = h$4(), _h52 = _slicedToArray2(_h51, 2), tableWidth = _h52[0], setTableWidth = _h52[1]; p$3(function () { var _a; var container = document.getElementById(containerId); var originalTableWidth = (_a = document.querySelector("#".concat(containerId, " thead"))) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect().width; function handleScroll() { if (!originalTableWidth || !container)
    return; var tableWidth = container.getBoundingClientRect().width; if (originalTableWidth - container.scrollLeft + 16 >= tableWidth) {
    leftAlignExpandedContent(containerId);
} } function handleResize() { var _a; setTableWidth((_a = container === null || container === void 0 ? void 0 : container.getBoundingClientRect().width) !== null && _a !== void 0 ? _a : 0); handleScroll(); } handleResize(); window.addEventListener('resize', handleResize); container === null || container === void 0 ? void 0 : container.addEventListener('scroll', handleScroll); return function () { container === null || container === void 0 ? void 0 : container.removeEventListener('scroll', handleScroll); window.removeEventListener('resize', handleResize); }; }, [containerId]); validateRowKey(items, rowKeyExtractor); return /*#__PURE__*/ wn.createElement(TableContainer$1, { id: containerId }, /*#__PURE__*/ wn.createElement(MUITable, { className: C(_defineProperty2(_defineProperty2({}, classes.tableWithExpandedContent, !!ExpandedContent), classes.tableWithActions, !!getItemActionProps)) }, /*#__PURE__*/ wn.createElement(TableHead$1, null, /*#__PURE__*/ wn.createElement(MUITableRow, null, ExpandedContent && ( /*#__PURE__*/wn.createElement(TableCell, { TypographyComponent: Typography, className: C(classes.expandMoreCell, classes.tableHeader), classes: classes }, /*#__PURE__*/ wn.createElement(wn.Fragment, null))), itemRenderer.map(function (column) { return /*#__PURE__*/ wn.createElement(TableCell, { TypographyComponent: Typography, className: classes.tableHeader, classes: classes, key: "col-header-".concat(String(column.title)) }, /*#__PURE__*/ wn.createElement(Typography, { variant: "body2" }, column.title)); }), getItemActionProps && ( /*#__PURE__*/wn.createElement(TableCell, { TypographyComponent: Typography, className: C(classes.tableCell, classes.tableActionsCell, classes.tableHeader, classes.tableHeaderActionsCell), classes: classes }, /*#__PURE__*/ wn.createElement(Typography, { variant: "body2" }, TABLE_ACTIONS_HEADER))))), /*#__PURE__*/ wn.createElement(TableBody$1, null, items.map(function (item) { var id = rowKeyExtractor ? rowKeyExtractor(item) : item.id; return /*#__PURE__*/ wn.createElement(TableRow, { ExpandedContent: ExpandedContent, TableActionsComponent: TableActions, TypographyComponent: Typography, classes: classes, getItemActionProps: getItemActionProps, id: id, item: item, itemRenderer: itemRenderer, key: id, onRowClick: onRowClick, tableContainerId: containerId, tableWidth: tableWidth }); })))); };
var useStyles$3 = makeTableStyles(function (theme) { return { tableCell: { borderBottomColor: theme.styleConfig.colors.subtle, color: theme.styleConfig.colors.primary }, tableActionsCell: { minWidth: 0 }, tableHeaderActionsCell: { '& > *': { position: 'absolute', left: -10000, top: 'auto', width: 1, height: 1, overflow: 'hidden' } } }; });
var Table = function Table(props) { var classes = useStyles$3(); return /*#__PURE__*/ wn.createElement(TableCore, Object.assign({}, props, { TableActionsComponent: TableActions, TypographyComponent: Typography, classes: classes })); };
var TagList = function TagList(_ref67) { var tags = _ref67.tags; return /*#__PURE__*/ wn.createElement("ul", { style: { listStyle: 'none', padding: 0, margin: 0, display: 'flex', gap: 8 } }, tags.map(function (tag) { return /*#__PURE__*/ wn.createElement("li", { key: tag }, /*#__PURE__*/ wn.createElement(Tag, null, tag)); })); };
var RoleAssignmentsSectionBody = function RoleAssignmentsSectionBody(_ref68) { var connection = _ref68.connection, localState = _ref68.localState, setLocalState = _ref68.setLocalState, remoteState = _ref68.remoteState; var _a, _b, _c; var _useSettingsContainer3 = useSettingsContainer(), editing = _useSettingsContainer3.editing; var _ref69 = editing ? localState : remoteState, connectionRoleIds = _ref69.connectionRoleIds, groupedRoles = _ref69.groupedRoles; var hasGroupAttributeMapping = !!((_a = connection.attribute_mapping) === null || _a === void 0 ? void 0 : _a.groups); var roles = (_b = useB2BInternals().bootstrap.getSync().rbacPolicy) === null || _b === void 0 ? void 0 : _b.roles; var rolesSelectItems = (_c = roles === null || roles === void 0 ? void 0 : roles.map(function (_ref70) { var role_id = _ref70.role_id; return { label: role_id, value: role_id }; })) !== null && _c !== void 0 ? _c : []; var handleAddGroupRole = T$2(function () { setLocalState(function (state) { return Object.assign(Object.assign({}, state), { groupedRoles: [].concat(_toConsumableArray2(state.groupedRoles), [{ group: '', roleIds: [] }]) }); }); }, [setLocalState]); var handleConnectionRolesChange = T$2(function (value) { return setLocalState(function (state) { return Object.assign(Object.assign({}, state), { connectionRoleIds: value }); }); }, [setLocalState]); var _getIdpInfo = getIdpInfo(connection.identity_provider, 'saml'), idp = _getIdpInfo.idp; return /*#__PURE__*/ wn.createElement(FlexBox, { flexDirection: "column", gap: 2 }, /*#__PURE__*/ wn.createElement(SettingsSection, { title: "Connection Roles", tooltipText: "Connection Roles are automatically assigned to all Members who authenticate via this SSO connection." }, editing ? ( /*#__PURE__*/wn.createElement(Select, { selectItems: rolesSelectItems, multiple: true, value: connectionRoleIds, onChange: handleConnectionRolesChange })) : connection.saml_connection_implicit_role_assignments.length > 0 ? ( /*#__PURE__*/wn.createElement(TagList, { tags: connection.saml_connection_implicit_role_assignments.map(function (_ref71) { var role_id = _ref71.role_id; return role_id; }) })) : ( /*#__PURE__*/wn.createElement(Typography, null, "No roles assigned."))), /*#__PURE__*/ wn.createElement(SettingsSection, { title: "Group Roles", tooltipText: "If a Member is part of a group, they will be assigned both the Connection Role and their Group Role." }, hasGroupAttributeMapping ? editing ? ( /*#__PURE__*/wn.createElement(wn.Fragment, null, groupedRoles.map(function (_ref72, i) { var group = _ref72.group, roleIds = _ref72.roleIds; return /*#__PURE__*/ wn.createElement(FlexBox, { key: i, alignItems: "stretch", justifyContent: "space-between" }, /*#__PURE__*/ wn.createElement(Input, { label: "Group name", fullWidth: true, value: group, onChange: function onChange(value) { setLocalState(function (state) { return Object.assign(Object.assign({}, state), { groupedRoles: state.groupedRoles.map(function (item, index) { return index === i ? Object.assign(Object.assign({}, item), { group: value }) : item; }) }); }); } }), /*#__PURE__*/ wn.createElement(Select, { label: "Group Role", multiple: true, selectItems: rolesSelectItems, value: roleIds, fullWidth: true, onChange: function onChange(values) { setLocalState(function (state) { return Object.assign(Object.assign({}, state), { groupedRoles: state.groupedRoles.map(function (item, index) { return index === i ? Object.assign(Object.assign({}, item), { roleIds: values }) : item; }) }); }); } })); }), /*#__PURE__*/ wn.createElement(Button, { variant: "text", startIcon: /*#__PURE__*/ wn.createElement(Add, null), onClick: handleAddGroupRole }, "Add group roles"))) : groupedRoles.length > 0 ? ( /*#__PURE__*/wn.createElement(Table, { items: groupedRoles, rowKeyExtractor: roleAssignmentKeyExtractor, itemRenderer: roleAssignmentItemRenderer })) : ( /*#__PURE__*/wn.createElement(Typography, null, "No roles assigned.")) : ( /*#__PURE__*/wn.createElement(Typography, null, "Add a \"groups\" key in the ", idp.attributeMappingLabel, " first to assign group roles.")))); };
var roleAssignmentKeyExtractor = function roleAssignmentKeyExtractor(_ref73) { var group = _ref73.group; return group; };
var roleAssignmentItemRenderer = [{ title: 'Group', getValue: function getValue(_ref74) { var group = _ref74.group; return /*#__PURE__*/ wn.createElement(Typography, { color: "secondary" }, group); } }, { title: 'Role', getValue: function getValue(_ref75) { var roleIds = _ref75.roleIds; return /*#__PURE__*/ wn.createElement(TagList, { tags: roleIds }); } }];
var RoleAssignmentsSection = function RoleAssignmentsSection(_ref76) { var canUpdateConnection = _ref76.canUpdateConnection, connection = _ref76.connection; var connectionRoleIds = F$3(function () { return connection.saml_connection_implicit_role_assignments.map(function (_ref77) { var role_id = _ref77.role_id; return role_id; }); }, [connection.saml_connection_implicit_role_assignments]); var groupedRoles = F$3(function () { return Object.values(connection.saml_group_implicit_role_assignments.reduce(function (acc, _ref78) { var group = _ref78.group, role_id = _ref78.role_id; if (!acc[group]) {
    acc[group] = { group: group, roleIds: [] };
} acc[group].roleIds.push(role_id); return acc; }, {})); }, [connection.saml_group_implicit_role_assignments]); var remoteState = F$3(function () { return { connectionRoleIds: connectionRoleIds, groupedRoles: groupedRoles }; }, [connectionRoleIds, groupedRoles]); var _useFormState3 = useFormState({ remoteState: remoteState }), localState = _useFormState3.localState, setLocalState = _useFormState3.setLocalState, editing = _useFormState3.editing, handleSetEditing = _useFormState3.handleSetEditing; var _useMutateSamlConnect = useMutateSamlConnection(), mutate = _useMutateSamlConnect.mutate; var handleSave = T$2(function () { return __awaiter(void 0, void 0, void 0, /*#__PURE__*/ _regeneratorRuntime().mark(function _callee12() { var baseOptions, mutatedProperties, filteredGroupRoles; return _regeneratorRuntime().wrap(function _callee12$(_context13) { while (1)
    switch (_context13.prev = _context13.next) {
        case 0:
            baseOptions = { connection_id: connection.connection_id };
            mutatedProperties = {};
            if (!deepEqual(remoteState.connectionRoleIds, localState.connectionRoleIds)) {
                mutatedProperties.saml_connection_implicit_role_assignments = localState.connectionRoleIds.map(function (role_id) { return { role_id: role_id }; });
            }
            filteredGroupRoles = localState.groupedRoles.filter(function (_ref79) { var group = _ref79.group, roleIds = _ref79.roleIds; return group && roleIds.length > 0; });
            if (!deepEqual(remoteState.groupedRoles, filteredGroupRoles)) {
                mutatedProperties.saml_group_implicit_role_assignments = filteredGroupRoles.flatMap(function (_ref80) { var group = _ref80.group, roleIds = _ref80.roleIds; return roleIds.map(function (role_id) { return { group: group, role_id: role_id }; }); });
            }
            if (!(Object.keys(mutatedProperties).length > 0)) {
                _context13.next = 7;
                break;
            }
            return _context13.abrupt("return", mutate(Object.assign(Object.assign({}, baseOptions), mutatedProperties), { errorMessage: 'Failed to update role assignments.' }));
        case 7: return _context13.abrupt("return", Promise.resolve());
        case 8:
        case "end": return _context13.stop();
    } }, _callee12); })); }, [connection.connection_id, localState.connectionRoleIds, localState.groupedRoles, mutate, remoteState.connectionRoleIds, remoteState.groupedRoles]); var _useSsoRouterControll3 = useSsoRouterController(), useBlockNavigation = _useSsoRouterControll3.useBlockNavigation; return /*#__PURE__*/ wn.createElement(SettingsContainer, { title: "Role assignments", hasCTA: canUpdateConnection, onSave: handleSave, useBlockNavigation: useBlockNavigation, editing: editing, setEditing: handleSetEditing }, /*#__PURE__*/ wn.createElement(RoleAssignmentsSectionBody, { connection: connection, localState: localState, remoteState: remoteState, setLocalState: setLocalState })); };
var SSOConnectionDetailsScreen = function SSOConnectionDetailsScreen(_ref81) { var connectionId = _ref81.connectionId; var _a, _b; var _useSsoRouterControll4 = useSsoRouterController(), navigate = _useSsoRouterControll4.navigate; var _useRbac5 = useRbac('stytch.sso', 'delete'), canDeleteConnection = _useRbac5.data; var _useRbac6 = useRbac('stytch.sso', 'update'), canUpdateConnection = _useRbac6.data; var _useSsoConnections = useSsoConnections(), connections = _useSsoConnections.data, isLoading = _useSsoConnections.isLoading; var _useOrgInfo2 = useOrgInfo(), orgInfo = _useOrgInfo2.data; var defaultConnectionId = orgInfo === null || orgInfo === void 0 ? void 0 : orgInfo.sso_default_connection_id; var defaultConnectionName = F$3(function () { var _a; return connections ? (_a = [].concat(_toConsumableArray2(connections.oidc_connections), _toConsumableArray2(connections.saml_connections)).find(function (connection) { return connection.connection_id === defaultConnectionId; })) === null || _a === void 0 ? void 0 : _a.display_name : undefined; }, [connections, defaultConnectionId]); var connection = F$3(function () { var _a, _b; var oidcMatch = (_a = connections === null || connections === void 0 ? void 0 : connections.oidc_connections) === null || _a === void 0 ? void 0 : _a.find(function (_ref82) { var connection_id = _ref82.connection_id; return connection_id === connectionId; }); if (oidcMatch) {
    return Object.assign(Object.assign({}, oidcMatch), { connectionType: 'oidc' });
} var samlMatch = (_b = connections === null || connections === void 0 ? void 0 : connections.saml_connections) === null || _b === void 0 ? void 0 : _b.find(function (_ref83) { var connection_id = _ref83.connection_id; return connection_id === connectionId; }); if (samlMatch) {
    return Object.assign(Object.assign({}, samlMatch), { connectionType: 'saml' });
} return null; }, [connectionId, connections === null || connections === void 0 ? void 0 : connections.oidc_connections, connections === null || connections === void 0 ? void 0 : connections.saml_connections]); var connectionType = connection === null || connection === void 0 ? void 0 : connection.connectionType; var connectionName = connection === null || connection === void 0 ? void 0 : connection.display_name; var isDefaultConnection = (connection === null || connection === void 0 ? void 0 : connection.connection_id) === defaultConnectionId; var isOnlyConnection = ((_a = connections === null || connections === void 0 ? void 0 : connections.oidc_connections.length) !== null && _a !== void 0 ? _a : 0) + ((_b = connections === null || connections === void 0 ? void 0 : connections.saml_connections.length) !== null && _b !== void 0 ? _b : 0) === 1; var _useDeleteConnection = useDeleteConnection({ onConfirm: function onConfirm() { navigate({ screen: 'connectionsList' }); } }), handleRequestDelete = _useDeleteConnection.handleRequestDelete, modalProps = _useDeleteConnection.modalProps; var handleDeleteClick = T$2(function () { if (connectionId && connectionName) {
    handleRequestDelete({ id: connectionId, displayName: connectionName });
} }, [connectionId, connectionName, handleRequestDelete]); return /*#__PURE__*/ wn.createElement(FlexBox, { flexDirection: "column", gap: 3 }, /*#__PURE__*/ wn.createElement(Button, { compact: true, variant: "ghost", onClick: function onClick() { navigate({ screen: 'connectionsList' }); }, startIcon: /*#__PURE__*/ wn.createElement(ChevronLeft, null) }, "Back to all SSO connections"), /*#__PURE__*/ wn.createElement(DeleteConfirmModal, Object.assign({}, modalProps)), connection ? ( /*#__PURE__*/wn.createElement(wn.Fragment, null, /*#__PURE__*/ wn.createElement(FlexBox, { alignItems: "center", justifyContent: "flex-start", gap: 1 }, /*#__PURE__*/ wn.createElement(Typography, { variant: "h2" }, connectionName), isDefaultConnection && /*#__PURE__*/ wn.createElement(Tag, { size: "sm" }, "Default")), /*#__PURE__*/ wn.createElement(FlexBox, { flexDirection: "column", gap: 3 }, /*#__PURE__*/ wn.createElement(OrganizationUpdatesSection, { connection: connection, defaultConnectionName: defaultConnectionName, isDefaultConnection: isDefaultConnection }), connectionType === 'saml' && ( /*#__PURE__*/wn.createElement(RoleAssignmentsSection, { canUpdateConnection: !!canUpdateConnection, connection: connection })), /*#__PURE__*/ wn.createElement(DetailsSection, { canUpdateConnection: !!canUpdateConnection, connection: connection })), canDeleteConnection && (!isDefaultConnection || isOnlyConnection) && ( /*#__PURE__*/wn.createElement(Button, { variant: "ghost", warning: true, onClick: handleDeleteClick }, "Delete connection")))) : isLoading && /*#__PURE__*/ wn.createElement(PageLoadingIndicator, null)); };
var ActionMenuItem = function ActionMenuItem(_a) { var children = _a.children, onClick = _a.onClick, onClose = _a.onClose, color = _a.color, icon = _a.icon, item = _a.item, rest = __rest(_a, ["children", "onClick", "onClose", "color", "icon", "item"]); var handleClick = T$2(function () { onClick(item); onClose(); }, [item, onClick, onClose]); return /*#__PURE__*/ wn.createElement(MenuItem$2, Object.assign({}, rest, { disableRipple: true, onClick: handleClick }), /*#__PURE__*/ wn.createElement(Typography, { color: color }, /*#__PURE__*/ wn.createElement(FlexBox, null, icon, children))); };
var anchorOrigin = { horizontal: 'center', vertical: 'bottom' };
var transformOrigin = { horizontal: 'right', vertical: 'top' };
var ActionMenu = function ActionMenu(_ref84) { var actions = _ref84.actions, item = _ref84.item, idPrefix = _ref84.idPrefix; var _h53 = h$4(), _h54 = _slicedToArray2(_h53, 2), anchorEl = _h54[0], setAnchorEl = _h54[1]; var handleClose = T$2(function () { setAnchorEl(undefined); }, []); var handleOpen = T$2(function (e) { setAnchorEl(e.currentTarget); }, []); var id = useShortId(idPrefix); var children = F$3(function () { return actions.map(function (_ref85) { var key = _ref85.key, label = _ref85.label, onClick = _ref85.onClick, icon = _ref85.icon, isDangerous = _ref85.isDangerous, _ref85$isVisible = _ref85.isVisible, isVisible = _ref85$isVisible === void 0 ? true : _ref85$isVisible; if (!isVisible || typeof isVisible === 'function' && !isVisible(item)) {
    return null;
} return /*#__PURE__*/ wn.createElement(ActionMenuItem, { key: key, item: item, onClick: onClick, onClose: handleClose, color: isDangerous ? 'error' : undefined, icon: icon }, label); }); }, [actions, handleClose, item]); var isOpen = !!anchorEl; return /*#__PURE__*/ wn.createElement(wn.Fragment, null, /*#__PURE__*/ wn.createElement(IconButton$1, { disableTouchRipple: true, "aria-label": "actions", color: "inherit", onClick: handleOpen, "aria-controls": id, "aria-haspopup": true }, /*#__PURE__*/ wn.createElement(MoreVert, null)), /*#__PURE__*/ wn.createElement(Menu$1, { id: id, open: isOpen, anchorEl: anchorEl, getContentAnchorEl: null, variant: "menu", anchorOrigin: anchorOrigin, transformOrigin: transformOrigin, onClose: handleClose }, children)); };
var useActionMenu = function useActionMenu(_ref86) { var actions = _ref86.actions, idPrefix = _ref86.idPrefix; var getItemActionProps = T$2(function (item) { var hasVisibleActions = actions.some(function (_ref87) { var _ref87$isVisible = _ref87.isVisible, isVisible = _ref87$isVisible === void 0 ? true : _ref87$isVisible; return typeof isVisible === 'function' ? isVisible(item) : isVisible; }); if (!hasVisibleActions) {
    return {};
} return { customAction: /*#__PURE__*/ wn.createElement(ActionMenu, { actions: actions, item: item, idPrefix: "".concat(idPrefix, "-action-menu-").concat(item.id) }) }; }, [actions, idPrefix]); return { getItemActionProps: getItemActionProps }; };
var DEFAULT_TABLE_ROWS_PER_PAGE = 20;
var LOAD_NEXT_PAGE_ERROR = 'Failed to load the next page.';
var ZERO_RESULTS_MESSAGE = 'No results found.';
var PAGINATED_TABLE_ID = 'paginated-table';
var makePaginatedTableStyles = makeStylesFactory(function (theme) { return { tablePagination: { '& .MuiTablePagination-actions .MuiIconButton-root': { padding: theme.spacing(1) }, alignItems: 'center', display: 'flex', justifyContent: 'flex-end', padding: 0 }, paginationBoder: { borderTopWidth: 1, borderTopStyle: 'solid' }, emptyTable: { alignItems: 'flex-start', display: 'flex', justifyContent: 'center', padding: theme.spacing(4) } }; });
var PaginatedTableCore = function PaginatedTableCore(_a) { var _b, _c, _d; var currentPage = _a.currentPage, loadNext = _a.loadNext, isLoading = _a.isLoading, metadata = _a.metadata, setCurrentPage = _a.setCurrentPage, _a$rowsPerPage = _a.rowsPerPage, rowsPerPage = _a$rowsPerPage === void 0 ? DEFAULT_TABLE_ROWS_PER_PAGE : _a$rowsPerPage, classes = _a.classes, Table = _a.TableComponent, Typography = _a.TypographyComponent, tableProps = __rest(_a, ["currentPage", "loadNext", "isLoading", "metadata", "setCurrentPage", "rowsPerPage", "classes", "TableComponent", "TypographyComponent"]); var items = tableProps.items; var tableId = useShortId(PAGINATED_TABLE_ID); var _useToast4 = useToast(), openToast = _useToast4.openToast; var tableRowHeight = _$1(); var currFirstRowIndex = currentPage * rowsPerPage; var loadNextHandler = function loadNextHandler(newPage) { return __awaiter(void 0, void 0, void 0, /*#__PURE__*/ _regeneratorRuntime().mark(function _callee13() { var _e, totalLoadedResults; return _regeneratorRuntime().wrap(function _callee13$(_context14) { while (1)
    switch (_context14.prev = _context14.next) {
        case 0:
            tableRowHeight.current = (_e = document.querySelector("#".concat(tableId, " tbody tr"))) === null || _e === void 0 ? void 0 : _e.clientHeight;
            totalLoadedResults = items ? items.length : 0;
            if (!((metadata === null || metadata === void 0 ? void 0 : metadata.cursor) && totalLoadedResults <= newPage * rowsPerPage)) {
                _context14.next = 11;
                break;
            }
            _context14.prev = 3;
            _context14.next = 6;
            return loadNext();
        case 6:
            _context14.next = 11;
            break;
        case 8:
            _context14.prev = 8;
            _context14.t0 = _context14["catch"](3);
            openToast({ type: 'error', text: LOAD_NEXT_PAGE_ERROR });
        case 11:
        case "end": return _context14.stop();
    } }, _callee13, null, [[3, 8]]); })); }; var handleChangePage = function handleChangePage(_, newPage) { return __awaiter(void 0, void 0, void 0, /*#__PURE__*/ _regeneratorRuntime().mark(function _callee14() { return _regeneratorRuntime().wrap(function _callee14$(_context15) { while (1)
    switch (_context15.prev = _context15.next) {
        case 0:
            _context15.next = 2;
            return loadNextHandler(newPage);
        case 2: setCurrentPage(newPage);
        case 3:
        case "end": return _context15.stop();
    } }, _callee14); })); }; var pageResults = items.slice(currFirstRowIndex, currFirstRowIndex + rowsPerPage); var showLoading = isLoading; var showNoResults = !isLoading && items.length === 0; var showEmptyTable = showLoading || showNoResults; var countForPagination; var moreRowsToShow; if ((metadata === null || metadata === void 0 ? void 0 : metadata.total) === -1) {
    countForPagination = metadata.cursor ? -1 : items.length;
    moreRowsToShow = true;
}
else {
    countForPagination = (_b = metadata === null || metadata === void 0 ? void 0 : metadata.total) !== null && _b !== void 0 ? _b : 0;
    moreRowsToShow = ((_c = metadata === null || metadata === void 0 ? void 0 : metadata.total) !== null && _c !== void 0 ? _c : 0) > rowsPerPage;
} var showPagination = !showEmptyTable && moreRowsToShow; var paginationMarginTop = (rowsPerPage - pageResults.length) * ((_d = tableRowHeight.current) !== null && _d !== void 0 ? _d : 0) - 1; return /*#__PURE__*/ wn.createElement("div", { id: tableId }, /*#__PURE__*/ wn.createElement(Table, Object.assign({}, tableProps, { items: showEmptyTable ? [] : pageResults })), showEmptyTable && ( /*#__PURE__*/wn.createElement("div", { className: classes.emptyTable, style: tableRowHeight.current ? { height: Math.min(rowsPerPage, pageResults.length) * tableRowHeight.current } : undefined }, showLoading && /*#__PURE__*/ wn.createElement(CircularProgress$1, { color: "inherit" }), showNoResults && /*#__PURE__*/ wn.createElement(Typography, null, ZERO_RESULTS_MESSAGE))), showPagination && ( /*#__PURE__*/wn.createElement("div", { className: C(classes.tablePagination, _defineProperty2({}, classes.paginationBoder, paginationMarginTop)), style: { marginTop: paginationMarginTop } }, /*#__PURE__*/ wn.createElement(TablePagination$1, { component: "div", count: countForPagination, onPageChange: handleChangePage, page: currentPage, rowsPerPage: rowsPerPage, rowsPerPageOptions: [] })))); };
var useStyles$2 = makePaginatedTableStyles(function (theme) { return { tablePagination: { '& .MuiTablePagination-root': { color: theme.styleConfig.colors.primary }, '& .MuiTablePagination-actions .MuiIconButton-root.Mui-disabled': { color: theme.styleConfig.colors.secondary } }, paginationBoder: { borderTopColor: theme.styleConfig.colors.subtle } }; });
var PaginatedTable = function PaginatedTable(props) { var classes = useStyles$2(); return /*#__PURE__*/ wn.createElement(PaginatedTableCore, Object.assign({}, props, { TableComponent: Table, TypographyComponent: Typography, classes: classes })); };
var Search = {};
var _interopRequireDefault = interopRequireDefaultExports;
var _interopRequireWildcard = interopRequireWildcardExports;
Object.defineProperty(Search, "__esModule", { value: true });
var default_1 = Search["default"] = void 0;
var React = _interopRequireWildcard(require$$2);
var _createSvgIcon = _interopRequireDefault(requireCreateSvgIcon());
var _default = (0, _createSvgIcon["default"])(/*#__PURE__*/ React.createElement("path", { d: "M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z" }), 'Search');
default_1 = Search["default"] = _default;
var Keys;
(function (Keys) { Keys["Backspace"] = "Backspace"; Keys["Tab"] = "Tab"; Keys["Enter"] = "Enter"; Keys["Space"] = " "; Keys["Shift"] = "Shift"; Keys["Control"] = "Control"; Keys["Alt"] = "Alt"; Keys["Command"] = "Meta"; Keys["Escape"] = "Escape"; Keys["PageUp"] = "PageUp"; Keys["PageDown"] = "PageDown"; Keys["ArrowLeft"] = "ArrowLeft"; Keys["ArrowUp"] = "ArrowUp"; Keys["ArrowRight"] = "ArrowRight"; Keys["ArrowDown"] = "ArrowDown"; Keys["Delete"] = "Delete"; Keys["Fn"] = "Fn"; Keys["End"] = "End"; Keys["Home"] = "Home"; Keys["Clear"] = "Clear"; Keys["Insert"] = "Insert"; Keys["A"] = "a"; Keys["B"] = "b"; Keys["C"] = "c"; Keys["D"] = "d"; Keys["E"] = "e"; Keys["F"] = "f"; Keys["G"] = "g"; Keys["H"] = "h"; Keys["I"] = "i"; Keys["J"] = "j"; Keys["K"] = "k"; Keys["L"] = "l"; Keys["M"] = "m"; Keys["N"] = "n"; Keys["O"] = "o"; Keys["P"] = "p"; Keys["Q"] = "q"; Keys["R"] = "r"; Keys["S"] = "s"; Keys["T"] = "t"; Keys["U"] = "u"; Keys["V"] = "v"; Keys["W"] = "w"; Keys["X"] = "x"; Keys["Y"] = "y"; Keys["Z"] = "z"; Keys["Zero"] = "0"; Keys["One"] = "1"; Keys["Two"] = "2"; Keys["Three"] = "3"; Keys["Four"] = "4"; Keys["Five"] = "5"; Keys["Six"] = "6"; Keys["Seven"] = "7"; Keys["Eight"] = "8"; Keys["Nine"] = "9"; Keys["F1"] = "F1"; Keys["F2"] = "F2"; Keys["F3"] = "F3"; Keys["F4"] = "F4"; Keys["F5"] = "F5"; Keys["F6"] = "F6"; Keys["F7"] = "F7"; Keys["F8"] = "F8"; Keys["F9"] = "F9"; Keys["F10"] = "F10"; Keys["F11"] = "F11"; Keys["F12"] = "F12"; Keys["Hyphen"] = "-"; Keys["ForwardSlash"] = "/"; Keys["BackSlash"] = "\\"; })(Keys || (Keys = {}));
var makeSearchBarStyles = makeStylesFactory(function (theme) { return { searchBar: { position: 'relative', width: '100%' }, icon: { alignItems: 'center', display: 'flex', justifyContent: 'center', position: 'absolute', bottom: 0, marginBottom: theme.spacing(1) }, searchInput: { '& input': { paddingLeft: "".concat(theme.spacing(4), "px !important"), paddingRight: "".concat(theme.spacing(6), "px !important") }, '&:hover': { cursor: 'pointer' } }, searchIcon: { padding: theme.spacing(0.5, 1, 0, 1) }, slashIcon: { border: '1px solid', borderRadius: theme.shape.borderRadius, padding: theme.spacing(0, 1) }, slashIconContainer: { right: theme.spacing(1) } }; });
var SearchBarCore = function SearchBarCore(_a) { var classes = _a.classes, Input = _a.InputComponent, inputProps = __rest(_a, ["classes", "InputComponent"]); var _h55 = h$4(null), _h56 = _slicedToArray2(_h55, 2), inputRef = _h56[0], setInputRef = _h56[1]; var _h57 = h$4(false), _h58 = _slicedToArray2(_h57, 2), focused = _h58[0], setFocused = _h58[1]; var onFocus = T$2(function () { return setFocused(true); }, []); var onBlur = T$2(function () { return setFocused(false); }, []); p$3(function () { var handleKey = function handleKey(e) { if (inputRef && !focused) {
    if (e.metaKey && e.key === Keys.K || e.key === Keys.ForwardSlash) {
        e.stopPropagation();
        inputRef.focus();
        if (e.key === Keys.ForwardSlash) {
            e.preventDefault();
        }
    }
} }; document.addEventListener('keydown', handleKey); return function () { return document.removeEventListener('keydown', handleKey); }; }, [inputRef, focused]); return /*#__PURE__*/ wn.createElement("div", { className: classes.searchBar }, /*#__PURE__*/ wn.createElement("div", { className: C(classes.icon, classes.searchIcon) }, /*#__PURE__*/ wn.createElement(default_1, { fontSize: "small" })), /*#__PURE__*/ wn.createElement("div", { className: C(classes.icon, classes.slashIconContainer) }, /*#__PURE__*/ wn.createElement("div", { className: classes.slashIcon }, "/")), /*#__PURE__*/ wn.createElement("div", { className: classes.searchInput }, /*#__PURE__*/ wn.createElement(Input, Object.assign({}, inputProps, { fullWidth: true, inputRef: setInputRef, onBlur: onBlur, onFocus: onFocus })))); };
var useStyles$1 = makeSearchBarStyles(function (theme) { return { searchIcon: { color: theme.styleConfig.inputs.placeholderColor }, slashIcon: { borderColor: theme.styleConfig.inputs.placeholderColor, color: theme.styleConfig.inputs.placeholderColor, fontFamily: theme.styleConfig.fontFamily, fontSize: theme.typography.fontSize, lineHeight: 1, padding: theme.spacing(0.5, 1) } }; });
var SearchBar = function SearchBar(props) { var classes = useStyles$1(props); return /*#__PURE__*/ wn.createElement(SearchBarCore, Object.assign({}, props, { classes: classes, InputComponent: Input })); };
var useDisplayPagination = function useDisplayPagination(_ref88) { var items = _ref88.items, itemsPerPage = _ref88.itemsPerPage; var _h59 = h$4(0), _h60 = _slicedToArray2(_h59, 2), currentPage = _h60[0], setCurrentPage = _h60[1]; var metadata = F$3(function () { return { total: items.length, cursor: 'none' }; }, [items.length]); var pageCount = Math.ceil(items.length / itemsPerPage); var lastPageIndex = Math.max(0, pageCount - 1); if (currentPage > lastPageIndex) {
    setCurrentPage(lastPageIndex);
} return { items: items, currentPage: currentPage, setCurrentPage: setCurrentPage, loadNext: noop, metadata: metadata, rowsPerPage: itemsPerPage }; };
var itemRenderer = [{ title: 'Display Name', getValue: function getValue(_ref89) { var displayName = _ref89.displayName, isDefault = _ref89.isDefault; return isDefault ? ( /*#__PURE__*/wn.createElement(Typography, null, displayName, " ", /*#__PURE__*/ wn.createElement(Tag, { size: "sm" }, "Default"))) : displayName; } }, { title: 'IdP', getValue: function getValue(_ref90) { var idp = _ref90.idp, connectionType = _ref90.connectionType; return getIdpInfo(idp, connectionType).idp.displayName; } }, { title: 'Status', getValue: function getValue(_ref91) { var status = _ref91.status; switch (status) {
            case 'active': return 'Active';
            case 'pending': return 'Pending';
            default: return status;
        } } }];
var useSearchFilter = function useSearchFilter(_ref92) { var data = _ref92.data, searchKeys = _ref92.searchKeys; var _h61 = h$4(''), _h62 = _slicedToArray2(_h61, 2), filterText = _h62[0], setFilterText = _h62[1]; var filteredData = F$3(function () { if (!filterText) {
    return data;
} var filterTextLower = filterText.toLowerCase(); return data.filter(function (item) { return searchKeys.some(function (key) { return String(item[key]).toLowerCase().includes(filterTextLower); }); }); }, [data, filterText, searchKeys]); return { filteredData: filteredData, filterText: filterText, setFilterText: setFilterText }; };
var useCanProjectCreateSsoConnection = function useCanProjectCreateSsoConnection() { var _useAdminPortalConfig = useAdminPortalConfig(), data = _useAdminPortalConfig.data; return (data === null || data === void 0 ? void 0 : data.sso_config.can_create_oidc_connection) && data.sso_config.can_create_saml_connection; };
var useConnections = function useConnections() { var _a; var ssoConnections = useSsoConnections(); var orgInfo = useOrgInfo(); var defaultConnectionId = (_a = orgInfo.data) === null || _a === void 0 ? void 0 : _a.sso_default_connection_id; var connections = F$3(function () { return ssoConnections.data ? [].concat(_toConsumableArray2(ssoConnections.data.saml_connections.map(function (c) { return Object.assign({ connectionType: 'saml' }, c); })), _toConsumableArray2(ssoConnections.data.oidc_connections.map(function (c) { return Object.assign({ connectionType: 'oidc' }, c); }))).map(function (connection) { return { displayName: connection.display_name, idp: connection.identity_provider, connectionType: connection.connectionType, status: connection.status, id: connection.connection_id, isDefault: connection.connection_id === defaultConnectionId }; }).sort(function (a, b) { return collator.compare(a.displayName, b.displayName); }) : []; }, [defaultConnectionId, ssoConnections.data]); return { connections: connections, isLoading: ssoConnections.isLoading }; };
var SSOConnectionsScreen = function SSOConnectionsScreen() { var _useSsoRouterControll5 = useSsoRouterController(), navigate = _useSsoRouterControll5.navigate; var canProjectCreateSsoConnection = useCanProjectCreateSsoConnection(); var _useRbac7 = useRbac('stytch.sso', 'create'), canCreatePermission = _useRbac7.data; var _useRbac8 = useRbac('stytch.sso', 'delete'), canDeleteConnection = _useRbac8.data; var _useRbac9 = useRbac('stytch.sso', 'update'), canUpdateConnection = _useRbac9.data; var _useRbac10 = useRbac('stytch.organization', 'update.settings.default-sso-connection'), canSetDefaultConnection = _useRbac10.data; var canCreateConnection = canCreatePermission && canProjectCreateSsoConnection; var _useConnections = useConnections(), connections = _useConnections.connections, isLoading = _useConnections.isLoading; var _useSearchFilter = useSearchFilter({ data: connections, searchKeys: ['displayName'] }), filterText = _useSearchFilter.filterText, setFilterText = _useSearchFilter.setFilterText, filteredData = _useSearchFilter.filteredData; var tableProps = useDisplayPagination({ items: filteredData, itemsPerPage: 6 }); var defaultConnectionName = F$3(function () { var _a; return (_a = connections.find(function (connection) { return connection.isDefault; })) === null || _a === void 0 ? void 0 : _a.displayName; }, [connections]); var _useSetDefaultConnect2 = useSetDefaultConnection({ defaultConnectionName: defaultConnectionName }), setDefaultModalProps = _useSetDefaultConnect2.modalProps, handleSetDefault = _useSetDefaultConnect2.handleRequestSetDefault; var _useDeleteConnection2 = useDeleteConnection(), deleteModalProps = _useDeleteConnection2.modalProps, handleDelete = _useDeleteConnection2.handleRequestDelete; var handleEdit = T$2(function (connection) { navigate({ screen: 'connectionDetails', params: { connectionId: connection.id } }); }, [navigate]); var handleNewConnectionClick = T$2(function () { navigate({ screen: 'newConnection' }); }, [navigate]); var hasExactlyOneConnection = connections.length === 1; var actions = F$3(function () { return [{ key: 'view', label: 'View connection', icon: /*#__PURE__*/ wn.createElement(VisibilityOutlined, null), onClick: handleEdit, isVisible: !canUpdateConnection }, { key: 'edit', label: 'Edit connection', icon: /*#__PURE__*/ wn.createElement(EditOutlined, null), onClick: handleEdit, isVisible: !!canUpdateConnection }, { key: 'set-default', label: 'Set as default', icon: /*#__PURE__*/ wn.createElement(Tune, null), onClick: handleSetDefault, isVisible: function isVisible(connection) { return !connection.isDefault && !!canSetDefaultConnection; } }, { key: 'delete', label: 'Delete', icon: /*#__PURE__*/ wn.createElement(DeleteOutlined, null), onClick: handleDelete, isDangerous: true, isVisible: function isVisible(connection) { return (!connection.isDefault || hasExactlyOneConnection) && !!canDeleteConnection; } }]; }, [canDeleteConnection, canSetDefaultConnection, canUpdateConnection, handleDelete, handleEdit, handleSetDefault, hasExactlyOneConnection]); var _useActionMenu = useActionMenu({ actions: actions, idPrefix: 'connection' }), getItemActionProps = _useActionMenu.getItemActionProps; return /*#__PURE__*/ wn.createElement(wn.Fragment, null, /*#__PURE__*/ wn.createElement(FlexBox, { flexDirection: "column", gap: 3 }, canCreatePermission && !canCreateConnection && ( /*#__PURE__*/wn.createElement(Alert, null, "You\u2019ve reached the maximum number of allowed connections. Delete an existing connection in order to add a new one.")), /*#__PURE__*/ wn.createElement(FlexBox, { alignItems: "center", justifyContent: "space-between" }, /*#__PURE__*/ wn.createElement(Typography, { variant: "h2" }, "SSO Connections"), canCreateConnection && ( /*#__PURE__*/wn.createElement(Button, { variant: "primary", startIcon: /*#__PURE__*/ wn.createElement(Add, null), onClick: handleNewConnectionClick }, "New connection"))), /*#__PURE__*/ wn.createElement(SearchBar, { placeholder: "Search", value: filterText, onChange: setFilterText }), /*#__PURE__*/ wn.createElement(PaginatedTable, Object.assign({}, tableProps, { itemRenderer: itemRenderer, isLoading: isLoading, getItemActionProps: getItemActionProps }))), /*#__PURE__*/ wn.createElement(SetDefaultConfirmModal, Object.assign({}, setDefaultModalProps)), /*#__PURE__*/ wn.createElement(DeleteConfirmModal, Object.assign({}, deleteModalProps))); };
var makeAccordionStyles = makeStylesFactory(function (theme) { return { accordion: { '&.Mui-expanded.Mui-expanded, &.Mui-expanded + &.MuiAccordion-root': { border: '1px solid' }, '&:not(.Mui-expanded) + *': { borderWidth: '0px 1px 1px' }, '&.MuiAccordion-root:before': { display: 'none' }, border: 'solid', borderWidth: '1px 1px 1px' }, accordionDetails: { alignItems: 'flex-start', display: 'flex', flexDirection: 'column', padding: theme.spacing(2) }, accordionExpanded: { '& $accordionSummary': { margin: theme.spacing(1.5, 0) }, minHeight: '0 !important' }, accordionSummary: { alignItems: 'center', display: 'flex', margin: theme.spacing(1.5, 0) } }; });
var AccordionCore = function AccordionCore(props) { var className = props.className, classes = props.classes, rest = __rest(props, ["className", "classes"]); return /*#__PURE__*/ wn.createElement(MUIAccordion, Object.assign({ className: C(classes.accordion, className) }, rest)); };
var AccordionSummaryCore = function AccordionSummaryCore(_a) { var classes = _a.classes, props = __rest(_a, ["classes"]); return /*#__PURE__*/ wn.createElement(MUIAccordionSummary, Object.assign({ classes: { content: C(classes.accordionSummary, classes.content), expanded: C(classes.accordionExpanded, classes.expanded) }, expandIcon: /*#__PURE__*/ wn.createElement(ExpandMore$1, null) }, props)); };
var AccordionDetailsCore = function AccordionDetailsCore(props) { var className = props.className, classes = props.classes, rest = __rest(props, ["className", "classes"]); return /*#__PURE__*/ wn.createElement(MUIAccordionDetails, Object.assign({ className: C(classes.accordionDetails, className) }, rest)); };
var useStyles = makeAccordionStyles(function (theme) { return { accordion: { '&.Mui-expanded.Mui-expanded, &.Mui-expanded + &.MuiAccordion-root': { borderColor: theme.styleConfig.colors.subtle }, backgroundColor: theme.styleConfig.container.backgroundColor, borderColor: theme.styleConfig.colors.subtle }, accordionDetails: { padding: theme.spacing(3, 3, 3, 7), alignItems: 'stretch' } }; });
var Accordion = function Accordion(props) { var classes = useStyles(); return /*#__PURE__*/ wn.createElement(AccordionCore, Object.assign({}, props, { classes: classes })); };
var AccordionSummary = function AccordionSummary(props) { var classes = useStyles(); return /*#__PURE__*/ wn.createElement(AccordionSummaryCore, Object.assign({}, props, { classes: classes })); };
var AccordionDetails = function AccordionDetails(props) { var classes = useStyles(); return /*#__PURE__*/ wn.createElement(AccordionDetailsCore, Object.assign({}, props, { classes: classes })); };
var useManualConfigurationState = function useManualConfigurationState(_ref93) { var idp = _ref93.idp, type = _ref93.type; var _h63 = h$4(false), _h64 = _slicedToArray2(_h63, 2), manualConfigurationState = _h64[0], setManualConfigurationState = _h64[1]; var idpRequiresManualConfig = type === 'saml' && idp.metadataUrlLabel === false; var manualConfiguration = manualConfigurationState || idpRequiresManualConfig; return [manualConfiguration, setManualConfigurationState]; };
var SSONewConnectionConfigureScreen = function SSONewConnectionConfigureScreen(_ref94) { var connectionProp = _ref94.connection; var _a; var _useSsoRouterControll6 = useSsoRouterController(), navigate = _useSsoRouterControll6.navigate; var info = getIdpAndConnectionInfo(connectionProp); var connection = info.connection, idp = info.idp, type = info.type; var connectionDisplayName = connection.display_name; var _useMutateSsoConnecti3 = useMutateSsoConnection(type), mutate = _useMutateSsoConnecti3.mutate; var _useMutateSsoConnecti4 = useMutateSsoConnectionByUrl(), mutateByUrl = _useMutateSsoConnecti4.mutate; var _useSsoRouterControll7 = useSsoRouterController(), useBlockNavigation = _useSsoRouterControll7.useBlockNavigation; var _h65 = h$4(true), _h66 = _slicedToArray2(_h65, 2), block = _h66[0], setBlock = _h66[1]; var _useBlockNavigation2 = useBlockNavigation(block), allowNavigation = _useBlockNavigation2.allowNavigation, blocked = _useBlockNavigation2.blocked, cancelNavigation = _useBlockNavigation2.cancelNavigation; var _useManualConfigurati = useManualConfigurationState(info), _useManualConfigurati2 = _slicedToArray2(_useManualConfigurati, 2), manualConfiguration = _useManualConfigurati2[0], setManualConfiguration = _useManualConfigurati2[1]; var _h67 = h$4(''), _h68 = _slicedToArray2(_h67, 2), metadataUrl = _h68[0], setMetadataUrl = _h68[1]; var _h69 = h$4(''), _h70 = _slicedToArray2(_h69, 2), ssoUrl = _h70[0], setSsoUrl = _h70[1]; var _h71 = h$4(''), _h72 = _slicedToArray2(_h71, 2), entityId = _h72[0], setEntityId = _h72[1]; var _h73 = h$4(''), _h74 = _slicedToArray2(_h73, 2), x509Certificate = _h74[0], setX509Certificate = _h74[1]; var _h75 = h$4(''), _h76 = _slicedToArray2(_h75, 2), clientId = _h76[0], setClientId = _h76[1]; var _h77 = h$4(''), _h78 = _slicedToArray2(_h77, 2), clientSecret = _h78[0], setClientSecret = _h78[1]; var _h79 = h$4(''), _h80 = _slicedToArray2(_h79, 2), issuer = _h80[0], setIssuer = _h80[1]; var _h81 = h$4(''), _h82 = _slicedToArray2(_h81, 2), issuerDerivedValue = _h82[0], setIssuerDerivedValue = _h82[1]; var _h83 = h$4(''), _h84 = _slicedToArray2(_h83, 2), authorizationUrl = _h84[0], setAuthorizationUrl = _h84[1]; var _h85 = h$4(''), _h86 = _slicedToArray2(_h85, 2), tokenUrl = _h86[0], setTokenUrl = _h86[1]; var _h87 = h$4(''), _h88 = _slicedToArray2(_h87, 2), userInfoUrl = _h88[0], setUserInfoUrl = _h88[1]; var _h89 = h$4(''), _h90 = _slicedToArray2(_h89, 2), jwksUrl = _h90[0], setJwksUrl = _h90[1]; var _h91 = h$4({ attributeMapping: { email: 'NameID', first_name: 'firstName', last_name: 'lastName', groups: '' } }), _h92 = _slicedToArray2(_h91, 2), attributeMappingState = _h92[0], setAttributeMappingState = _h92[1]; var attributeMapping = F$3(function () { return Object.fromEntries(Object.entries(attributeMappingState.attributeMapping).filter(function (_ref95) { var _ref96 = _slicedToArray2(_ref95, 2), value = _ref96[1]; return value; })); }, [attributeMappingState.attributeMapping]); var _useToast5 = useToast(), openToast = _useToast5.openToast; var handleSubmit = T$2(function (e) { return __awaiter(void 0, void 0, void 0, /*#__PURE__*/ _regeneratorRuntime().mark(function _callee15() { var options, message; return _regeneratorRuntime().wrap(function _callee15$(_context16) { while (1)
    switch (_context16.prev = _context16.next) {
        case 0:
            e.preventDefault();
            if (connection) {
                _context16.next = 3;
                break;
            }
            return _context16.abrupt("return");
        case 3:
            _context16.prev = 3;
            if (!(type === 'saml')) {
                _context16.next = 17;
                break;
            }
            if (!manualConfiguration) {
                _context16.next = 10;
                break;
            }
            _context16.next = 8;
            return mutate({ connection_id: connection.connection_id, idp_sso_url: ssoUrl, idp_entity_id: entityId, x509_certificate: x509Certificate, attribute_mapping: attributeMapping });
        case 8:
            _context16.next = 15;
            break;
        case 10:
            _context16.next = 12;
            return mutate({ connection_id: connection.connection_id, attribute_mapping: attributeMapping });
        case 12:
            if (!metadataUrl) {
                _context16.next = 15;
                break;
            }
            _context16.next = 15;
            return mutateByUrl({ connection_id: connection.connection_id, metadata_url: metadataUrl });
        case 15:
            _context16.next = 22;
            break;
        case 17:
            options = { connection_id: connection.connection_id, client_id: clientId, client_secret: clientSecret };
            if (idp.transformInputToIssuer) {
                if (issuerDerivedValue) {
                    options.issuer = idp.transformInputToIssuer(issuerDerivedValue);
                }
            }
            else {
                options.issuer = issuer;
            }
            if (manualConfiguration) {
                options.authorization_url = authorizationUrl;
                options.token_url = tokenUrl;
                options.userinfo_url = userInfoUrl;
                options.jwks_url = jwksUrl;
            }
            _context16.next = 22;
            return mutate(options);
        case 22:
            setBlock(false);
            navigate({ screen: 'connectionsList' });
            _context16.next = 30;
            break;
        case 26:
            _context16.prev = 26;
            _context16.t0 = _context16["catch"](3);
            message = extractErrorMessage(_context16.t0);
            openToast({ text: message || 'Unable to save connection', type: 'error' });
        case 30:
        case "end": return _context16.stop();
    } }, _callee15, null, [[3, 26]]); })); }, [connection, type, navigate, manualConfiguration, mutate, ssoUrl, entityId, x509Certificate, attributeMapping, metadataUrl, mutateByUrl, clientId, clientSecret, idp, issuerDerivedValue, issuer, authorizationUrl, tokenUrl, userInfoUrl, jwksUrl, openToast]); var idpValueInputs = type === 'saml' ? { ssoUrl: ( /*#__PURE__*/wn.createElement(Input, { label: idp.idpSsoUrlLabel, labelVariant: "body1", placeholder: "Enter ".concat(idp.idpSsoUrlLabel), value: ssoUrl, onChange: setSsoUrl })), entityId: ( /*#__PURE__*/wn.createElement(Input, { label: idp.idpEntityIdLabel, labelVariant: "body1", placeholder: "Enter ".concat(idp.idpEntityIdLabel), value: entityId, onChange: setEntityId })), certificate: ( /*#__PURE__*/wn.createElement(Input, { label: idp.x509CertificateLabel, labelVariant: "body1", placeholder: "Enter ".concat(idp.x509CertificateLabel), value: x509Certificate, onChange: setX509Certificate })) } : undefined; var stepMap = { copyToIdp: ( /*#__PURE__*/wn.createElement(Accordion, null, /*#__PURE__*/ wn.createElement(AccordionSummary, null, /*#__PURE__*/ wn.createElement(Typography, null, "Copy the following App values to your IdP.")), /*#__PURE__*/ wn.createElement(AccordionDetails, null, /*#__PURE__*/ wn.createElement(SettingsList, null, /*#__PURE__*/ wn.createElement(AppDetails, { connection: connection }))))), copyFromIdp: ( /*#__PURE__*/wn.createElement(Accordion, null, /*#__PURE__*/ wn.createElement(AccordionSummary, null, /*#__PURE__*/ wn.createElement(Typography, null, "Enter the following IdP values.")), /*#__PURE__*/ wn.createElement(AccordionDetails, null, /*#__PURE__*/ wn.createElement(FlexBox, { flexDirection: "column", gap: 2 }, type === 'saml' && ( /*#__PURE__*/wn.createElement(wn.Fragment, null, manualConfiguration && idpValueInputs ? idp.idpValueOrder.map(function (key) { return /*#__PURE__*/ wn.createElement(wn.Fragment, { key: key }, idpValueInputs[key]); }) : ( /*#__PURE__*/wn.createElement(wn.Fragment, null, /*#__PURE__*/ wn.createElement("label", null, /*#__PURE__*/ wn.createElement(Typography, null, "Enter the ", idp.metadataUrlLabel, " to configure your connection automatically."), /*#__PURE__*/ wn.createElement(Input, { placeholder: "Enter ".concat(idp.metadataUrlLabel), caption: "If you don\u2019t know your ".concat(idp.metadataUrlLabel, ", you can configure your connection manually."), value: metadataUrl, onChange: setMetadataUrl })))), !!idp.metadataUrlLabel && ( /*#__PURE__*/wn.createElement(Button, { compact: true, variant: "ghost", onClick: function onClick() { setManualConfiguration(!manualConfiguration); } }, manualConfiguration ? "Configure using ".concat(idp.metadataUrlLabel) : 'Configure manually')))), type === 'oidc' && ( /*#__PURE__*/wn.createElement(wn.Fragment, null, /*#__PURE__*/ wn.createElement(Input, { label: idp.clientIdLabel, labelVariant: "body1", placeholder: "Enter ".concat(idp.clientIdLabel), value: clientId, onChange: setClientId }), /*#__PURE__*/ wn.createElement(Input, { label: idp.clientSecretLabel, labelVariant: "body1", placeholder: "Enter ".concat(idp.clientSecretLabel), value: clientSecret, onChange: setClientSecret }), idp.transformInputToIssuer ? ( /*#__PURE__*/wn.createElement(Input, { label: idp.issuerDerivedLabel, labelVariant: "body1", placeholder: "Enter ".concat(idp.issuerDerivedLabel), value: issuerDerivedValue, onChange: setIssuerDerivedValue })) : ( /*#__PURE__*/wn.createElement(Input, { label: idp.issuerLabel, labelVariant: "body1", placeholder: "Enter ".concat(idp.issuerLabel), value: issuer, onChange: setIssuer })), manualConfiguration && ( /*#__PURE__*/wn.createElement(wn.Fragment, null, /*#__PURE__*/ wn.createElement(Input, { label: "Authorization URL", labelVariant: "body1", placeholder: "Enter Authorization URL", value: authorizationUrl, onChange: setAuthorizationUrl }), /*#__PURE__*/ wn.createElement(Input, { label: "Token URL", labelVariant: "body1", placeholder: "Enter Token URL", value: tokenUrl, onChange: setTokenUrl }), /*#__PURE__*/ wn.createElement(Input, { label: "User Info URL", labelVariant: "body1", placeholder: "Enter User Info", value: userInfoUrl, onChange: setUserInfoUrl }), /*#__PURE__*/ wn.createElement(Input, { label: "JWKS URL", labelVariant: "body1", placeholder: "Enter JWKS URL", value: jwksUrl, onChange: setJwksUrl }))), /*#__PURE__*/ wn.createElement(Button, { compact: true, variant: "ghost", onClick: function onClick() { setManualConfiguration(!manualConfiguration); } }, manualConfiguration ? "Configure using ".concat((_a = idp.issuerDerivedLabel) !== null && _a !== void 0 ? _a : idp.issuerLabel) : 'Configure manually'))))))), attributeMapping: type === 'saml' && ( /*#__PURE__*/wn.createElement(Accordion, null, /*#__PURE__*/ wn.createElement(AccordionSummary, null, /*#__PURE__*/ wn.createElement(Typography, null, "Set your ", idp.attributeMappingLabel, ".")), /*#__PURE__*/ wn.createElement(AccordionDetails, null, /*#__PURE__*/ wn.createElement(Typography, null, "The following values are automatically filled based on your IdP. Make changes or add custom mappings."), /*#__PURE__*/ wn.createElement(AttributeMappingTable, { editing: true, localState: attributeMappingState, setLocalState: setAttributeMappingState, remoteState: attributeMappingState })))) }; var steps = idp.setupOrder.map(function (step) { return /*#__PURE__*/ wn.createElement(wn.Fragment, { key: step }, stepMap[step]); }); return /*#__PURE__*/ wn.createElement("form", { onSubmit: handleSubmit }, /*#__PURE__*/ wn.createElement(Modal, { isOpen: block && blocked, close: cancelNavigation, confirm: function confirm() { allowNavigation(); return Promise.resolve(); }, title: "Save ".concat(connectionDisplayName, "?"), confirmButtonText: "Save and complete later", description: 'Your SSO connection is not fully configured. It will remain pending until you complete all necessary configuration steps. You can save your progress and complete later or cancel to finish configuration.' }), /*#__PURE__*/ wn.createElement(FlexBox, { flexDirection: "column", gap: 3 }, /*#__PURE__*/ wn.createElement(Button, { variant: "ghost", compact: true, onClick: function onClick() { navigate({ screen: 'connectionsList' }); }, startIcon: /*#__PURE__*/ wn.createElement(ChevronLeft, null) }, "Back to all SSO connections"), /*#__PURE__*/ wn.createElement(Typography, { variant: "h2" }, "Configure ", connectionDisplayName), /*#__PURE__*/ wn.createElement("div", null, steps), /*#__PURE__*/ wn.createElement(FlexBox, { justifyContent: "flex-end" }, /*#__PURE__*/ wn.createElement(Button, { type: "submit" }, "Create")))); };
var SSONewConnectionScreen = function SSONewConnectionScreen() { var _useSsoRouterControll8 = useSsoRouterController(), navigate = _useSsoRouterControll8.navigate; var _h93 = h$4(''), _h94 = _slicedToArray2(_h93, 2), displayName = _h94[0], setDisplayName = _h94[1]; var _h95 = h$4(), _h96 = _slicedToArray2(_h95, 2), idp = _h96[0], setIdp = _h96[1]; var canCreate = displayName && idp; var client = useStytchClient(); var _useSWRConfig4 = useSWRConfig(), mutate = _useSWRConfig4.mutate; var revalidateConnectionList = useRevalidateConnectionList(); var handleSubmit = T$2(function (e) { return __awaiter(void 0, void 0, void 0, /*#__PURE__*/ _regeneratorRuntime().mark(function _callee17() { var _idpOptions$idp, idpName, type, response; return _regeneratorRuntime().wrap(function _callee17$(_context18) { while (1)
    switch (_context18.prev = _context18.next) {
        case 0:
            e.preventDefault();
            if (canCreate) {
                _context18.next = 3;
                break;
            }
            return _context18.abrupt("return");
        case 3:
            _idpOptions$idp = idpOptions[idp], idpName = _idpOptions$idp.idpName, type = _idpOptions$idp.type;
            _context18.next = 6;
            return mutate('sso_create', function () { return __awaiter(void 0, void 0, void 0, /*#__PURE__*/ _regeneratorRuntime().mark(function _callee16() { var params; return _regeneratorRuntime().wrap(function _callee16$(_context17) { while (1)
                switch (_context17.prev = _context17.next) {
                    case 0:
                        params = { display_name: displayName, identity_provider: idpName };
                        if (!(type === 'oidc')) {
                            _context17.next = 3;
                            break;
                        }
                        return _context17.abrupt("return", client.sso.oidc.createConnection(params));
                    case 3:
                        if (!(type === 'saml')) {
                            _context17.next = 5;
                            break;
                        }
                        return _context17.abrupt("return", client.sso.saml.createConnection(params));
                    case 5:
                    case "end": return _context17.stop();
                } }, _callee16); })); });
        case 6:
            response = _context18.sent;
            _context18.next = 9;
            return revalidateConnectionList();
        case 9: if (response) {
            navigate({ screen: 'newConnectionConfigure', params: { connection: Object.assign(Object.assign({}, response.connection), { connectionType: type }) } });
        }
        case 10:
        case "end": return _context18.stop();
    } }, _callee17); })); }, [canCreate, client.sso.oidc, client.sso.saml, idp, displayName, mutate, navigate, revalidateConnectionList]); return /*#__PURE__*/ wn.createElement("form", { onSubmit: handleSubmit }, /*#__PURE__*/ wn.createElement(FlexBox, { flexDirection: "column", gap: 3 }, /*#__PURE__*/ wn.createElement(Button, { variant: "ghost", compact: true, onClick: function onClick() { navigate({ screen: 'connectionsList' }); }, startIcon: /*#__PURE__*/ wn.createElement(ChevronLeft, null) }, "Back to all SSO connections"), /*#__PURE__*/ wn.createElement(Typography, { variant: "h2" }, "New SSO Connection"), /*#__PURE__*/ wn.createElement(FlexBox, { flexDirection: "column", gap: 1 }, /*#__PURE__*/ wn.createElement(Typography, null, "Set a display name for your connection."), /*#__PURE__*/ wn.createElement(Input, { placeholder: "Text", value: displayName, onChange: setDisplayName, caption: "You will be able to edit this again in the future." })), /*#__PURE__*/ wn.createElement(FlexBox, { flexDirection: "column", gap: 1 }, /*#__PURE__*/ wn.createElement(Typography, null, "Select your identity provider or choose to configure a custom SAML / OIDC connection."), /*#__PURE__*/ wn.createElement(Select, { placeholder: "Select", selectItems: idpSelectItems, value: idp, onChange: setIdp }), /*#__PURE__*/ wn.createElement(Typography, null, "Once you click \u201CCreate\u201D the SSO connection will be created. If you need to change the connection type after this, you will need to start over.")), /*#__PURE__*/ wn.createElement(FlexBox, { justifyContent: "space-between" }, /*#__PURE__*/ wn.createElement(Button, { variant: "ghost", onClick: function onClick() { navigate({ screen: 'connectionsList' }); } }, "Cancel"), /*#__PURE__*/ wn.createElement(Button, { type: "submit", disabled: !canCreate }, "Create")))); };
var routeMap = { connectionDetails: SSOConnectionDetailsScreen, connectionsList: SSOConnectionsScreen, newConnection: SSONewConnectionScreen, newConnectionConfigure: SSONewConnectionConfigureScreen };
var initialRoute = { screen: 'connectionsList' };
var Content = function Content() { var _useAdminPortalConfig2 = useAdminPortalConfig(), adminPortalConfig = _useAdminPortalConfig2.data, adminPortalConfigError = _useAdminPortalConfig2.error; var _useRbac11 = useRbac('stytch.sso', 'get'), canGetSso = _useRbac11.data; if (adminPortalConfigError) {
    return /*#__PURE__*/ wn.createElement(Alert, null, "SSO Connections could not be loaded. Please contact your admin if you think this is a mistake.");
} if (canGetSso === undefined || !adminPortalConfig) {
    return /*#__PURE__*/ wn.createElement(PageLoadingIndicator, null);
} if (!canGetSso) {
    return /*#__PURE__*/ wn.createElement(Alert, null, "You do not have permission to view SSO Connections. Please contact your admin if you think this is a mistake.");
} if (!adminPortalConfig.sso_config.sso_enabled) {
    return /*#__PURE__*/ wn.createElement(Alert, null, "SSO Connections are not supported. Please contact your admin if you think this is a mistake.");
} return /*#__PURE__*/ wn.createElement(SsoRouterProvider, { initialRoute: initialRoute }, /*#__PURE__*/ wn.createElement(SsoRouter, { routeMap: routeMap })); };
var AdminPortalSSO$1 = function AdminPortalSSO(props) { var initialClient = _$1(props.client); p$3(function () { readB2BInternals(initialClient.current).networkClient.logEvent({ name: 'render_b2b_admin_portal_sso', details: {} }); }, []); return /*#__PURE__*/ wn.createElement(AdminPortalWrapper, { options: props }, /*#__PURE__*/ wn.createElement(Content, null)); };
var mountAdminPortalSSO = makeAdminPortalComponentMountFn(AdminPortalSSO$1, 'stytch-b2b-admin-portal-sso-ui', 'mountAdminPortalSSO');

const makeAdminPortalComponent = (mountFn, componentName) => {
    const Component = (props) => {
        invariant.invariant(StytchB2BContext.useIsMounted__INTERNAL(), invariant.noProviderError(`<${componentName} />`));
        const stytchClient = StytchB2BContext.useStytchB2BClient();
        const containerEl = React$d.useRef(null);
        React$d.useLayoutEffect(() => {
            if (!containerEl.current) {
                return;
            }
            mountFn(Object.assign(Object.assign({}, props), { client: stytchClient, element: containerEl.current }));
        }, [stytchClient, props]);
        return React__default['default'].createElement("div", { ref: containerEl });
    };
    return Component;
};

/**
 * The Admin Portal SSO UI component.
 * This component must be rendered within a {@link StytchB2BProvider}.
 *
 * See the {@link https://stytch.com/docs/b2b/sdks/javascript-sdk online reference}
 */
const AdminPortalSSO = makeAdminPortalComponent(mountAdminPortalSSO, 'AdminPortalSSO');

exports.AdminPortalSSO = AdminPortalSSO;
