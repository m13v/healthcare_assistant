import { u as useIsMounted__INTERNAL, a as useStytchB2BClient, i as isUIClient } from '../StytchB2BContext-8acafb28.js';
export { S as StytchB2BProvider, a as useStytchB2BClient, d as useStytchIsAuthorized, c as useStytchMember, b as useStytchMemberSession, e as useStytchOrganization, w as withStytchB2BClient, g as withStytchMember, f as withStytchMemberSession, h as withStytchOrganization, j as withStytchPermissions } from '../StytchB2BContext-8acafb28.js';
import React, { useRef, useLayoutEffect } from 'react';
import { i as invariant, b as noHeadlessClientError, n as noProviderError } from '../invariant-568a7633.js';

/**
 * The Stytch B2B UI component.
 * This component can only be used with a {@link StytchB2BUIClient} client constructor
 * passed into the {@link StytchB2BProvider}
 *
 * See the {@link https://stytch.com/docs/b2b/sdks/javascript-sdk online reference}
 *
 * @example
 * <StytchB2B
 *   config={{
 *     authFlowType: "Organization",
 *     emailMagicLinksOptions: {
 *       loginRedirectURL: 'https://example.com/authenticate',
 *       signupRedirectURL: 'https://example.com/authenticate',
 *     },
 *     ssoOptions: {
 *       loginRedirectURL: 'https://example.com/authenticate',
 *       signupRedirectURL: 'https://example.com/authenticate',
 *     },
 *     sessionOptions: {
 *       sessionDurationMinutes: 60,
 *     }
 *   }}
 *   styles={{
 *     fontFamily: '"Helvetica New", Helvetica, sans-serif',
 *     primaryColor: '#0577CA',
 *     width: '321px',
 *   }}
 *   callbacks={{
 *     onEvent: (event) => console.log(event)
 *   }}
 * />
 * @param props {@link StytchB2BProps}
 */
const StytchB2B = ({ styles, callbacks, config }) => {
    invariant(useIsMounted__INTERNAL(), noProviderError('<StytchB2B />'));
    const stytchClient = useStytchB2BClient();
    const containerEl = useRef(null);
    useLayoutEffect(() => {
        if (!isUIClient(stytchClient)) {
            throw Error(noHeadlessClientError);
        }
        if (!containerEl.current) {
            return;
        }
        if (!containerEl.current.id) {
            const randId = Math.floor(Math.random() * 1e6);
            containerEl.current.id = `stytch-b2b-ui-${randId}`;
        }
        stytchClient.mount({
            callbacks,
            config,
            elementId: `#${containerEl.current.id}`,
            styles,
        });
        // eslint-disable-next-line react-hooks/exhaustive-deps -- SDK-1354
    }, [stytchClient, styles, callbacks]);
    return React.createElement("div", { ref: containerEl });
};

export { StytchB2B };
