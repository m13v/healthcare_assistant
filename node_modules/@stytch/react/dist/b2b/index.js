'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var StytchB2BContext = require('../StytchB2BContext-ce9e254c.js');
var React = require('react');
var invariant = require('../invariant-ae5a5bce.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

/**
 * The Stytch B2B UI component.
 * This component can only be used with a {@link StytchB2BUIClient} client constructor
 * passed into the {@link StytchB2BProvider}
 *
 * See the {@link https://stytch.com/docs/b2b/sdks/javascript-sdk online reference}
 *
 * @example
 * <StytchB2B
 *   config={{
 *     authFlowType: "Organization",
 *     emailMagicLinksOptions: {
 *       loginRedirectURL: 'https://example.com/authenticate',
 *       signupRedirectURL: 'https://example.com/authenticate',
 *     },
 *     ssoOptions: {
 *       loginRedirectURL: 'https://example.com/authenticate',
 *       signupRedirectURL: 'https://example.com/authenticate',
 *     },
 *     sessionOptions: {
 *       sessionDurationMinutes: 60,
 *     }
 *   }}
 *   styles={{
 *     fontFamily: '"Helvetica New", Helvetica, sans-serif',
 *     primaryColor: '#0577CA',
 *     width: '321px',
 *   }}
 *   callbacks={{
 *     onEvent: (event) => console.log(event)
 *   }}
 * />
 * @param props {@link StytchB2BProps}
 */
const StytchB2B = ({ styles, callbacks, config }) => {
    invariant.invariant(StytchB2BContext.useIsMounted__INTERNAL(), invariant.noProviderError('<StytchB2B />'));
    const stytchClient = StytchB2BContext.useStytchB2BClient();
    const containerEl = React.useRef(null);
    React.useLayoutEffect(() => {
        if (!StytchB2BContext.isUIClient(stytchClient)) {
            throw Error(invariant.noHeadlessClientError);
        }
        if (!containerEl.current) {
            return;
        }
        if (!containerEl.current.id) {
            const randId = Math.floor(Math.random() * 1e6);
            containerEl.current.id = `stytch-b2b-ui-${randId}`;
        }
        stytchClient.mount({
            callbacks,
            config,
            elementId: `#${containerEl.current.id}`,
            styles,
        });
        // eslint-disable-next-line react-hooks/exhaustive-deps -- SDK-1354
    }, [stytchClient, styles, callbacks]);
    return React__default['default'].createElement("div", { ref: containerEl });
};

exports.StytchB2BProvider = StytchB2BContext.StytchB2BProvider;
exports.useStytchB2BClient = StytchB2BContext.useStytchB2BClient;
exports.useStytchIsAuthorized = StytchB2BContext.useStytchIsAuthorized;
exports.useStytchMember = StytchB2BContext.useStytchMember;
exports.useStytchMemberSession = StytchB2BContext.useStytchMemberSession;
exports.useStytchOrganization = StytchB2BContext.useStytchOrganization;
exports.withStytchB2BClient = StytchB2BContext.withStytchB2BClient;
exports.withStytchMember = StytchB2BContext.withStytchMember;
exports.withStytchMemberSession = StytchB2BContext.withStytchMemberSession;
exports.withStytchOrganization = StytchB2BContext.withStytchOrganization;
exports.withStytchPermissions = StytchB2BContext.withStytchPermissions;
exports.StytchB2B = StytchB2B;
